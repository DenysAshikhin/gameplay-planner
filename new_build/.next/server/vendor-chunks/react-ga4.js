"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-ga4";
exports.ids = ["vendor-chunks/react-ga4"];
exports.modules = {

/***/ "(rsc)/./node_modules/react-ga4/dist/format.js":
/*!***********************************************!*\
  !*** ./node_modules/react-ga4/dist/format.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = format;\nvar smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\\.?|via)$/i;\nfunction toTitleCase(string) {\n    return string.toString().trim().replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, function(match, index, title) {\n        if (index > 0 && index + match.length !== title.length && match.search(smallWords) > -1 && title.charAt(index - 2) !== \":\" && (title.charAt(index + match.length) !== \"-\" || title.charAt(index - 1) === \"-\") && title.charAt(index - 1).search(/[^\\s-]/) < 0) {\n            return match.toLowerCase();\n        }\n        if (match.substr(1).search(/[A-Z]|\\../) > -1) {\n            return match;\n        }\n        return match.charAt(0).toUpperCase() + match.substr(1);\n    });\n}\n// See if s could be an email address. We don't want to send personal data like email.\n// https://support.google.com/analytics/answer/2795983?hl=en\nfunction mightBeEmail(s) {\n    // There's no point trying to validate rfc822 fully, just look for ...@...\n    return typeof s === \"string\" && s.indexOf(\"@\") !== -1;\n}\nvar redacted = \"REDACTED (Potential Email Address)\";\nfunction redactEmail(string) {\n    if (mightBeEmail(string)) {\n        console.warn(\"This arg looks like an email address, redacting.\");\n        return redacted;\n    }\n    return string;\n}\nfunction format() {\n    var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var titleCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var redactingEmail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var _str = s || \"\";\n    if (titleCase) {\n        _str = toTitleCase(s);\n    }\n    if (redactingEmail) {\n        _str = redactEmail(_str);\n    }\n    return _str;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2E0L2Rpc3QvZm9ybWF0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxrQkFBa0IsR0FBR0U7QUFDckIsSUFBSUMsYUFBYTtBQUNqQixTQUFTQyxZQUFZQyxNQUFNO0lBQ3pCLE9BQU9BLE9BQU9DLFFBQVEsR0FBR0MsSUFBSSxHQUFHQyxPQUFPLENBQUMscUNBQXFDLFNBQVVDLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxLQUFLO1FBQ3hHLElBQUlELFFBQVEsS0FBS0EsUUFBUUQsTUFBTUcsTUFBTSxLQUFLRCxNQUFNQyxNQUFNLElBQUlILE1BQU1JLE1BQU0sQ0FBQ1YsY0FBYyxDQUFDLEtBQUtRLE1BQU1HLE1BQU0sQ0FBQ0osUUFBUSxPQUFPLE9BQVFDLENBQUFBLE1BQU1HLE1BQU0sQ0FBQ0osUUFBUUQsTUFBTUcsTUFBTSxNQUFNLE9BQU9ELE1BQU1HLE1BQU0sQ0FBQ0osUUFBUSxPQUFPLEdBQUUsS0FBTUMsTUFBTUcsTUFBTSxDQUFDSixRQUFRLEdBQUdHLE1BQU0sQ0FBQyxZQUFZLEdBQUc7WUFDN1AsT0FBT0osTUFBTU0sV0FBVztRQUMxQjtRQUNBLElBQUlOLE1BQU1PLE1BQU0sQ0FBQyxHQUFHSCxNQUFNLENBQUMsZUFBZSxDQUFDLEdBQUc7WUFDNUMsT0FBT0o7UUFDVDtRQUNBLE9BQU9BLE1BQU1LLE1BQU0sQ0FBQyxHQUFHRyxXQUFXLEtBQUtSLE1BQU1PLE1BQU0sQ0FBQztJQUN0RDtBQUNGO0FBRUEsc0ZBQXNGO0FBQ3RGLDREQUE0RDtBQUM1RCxTQUFTRSxhQUFhQyxDQUFDO0lBQ3JCLDBFQUEwRTtJQUMxRSxPQUFPLE9BQU9BLE1BQU0sWUFBWUEsRUFBRUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUN0RDtBQUNBLElBQUlDLFdBQVc7QUFDZixTQUFTQyxZQUFZakIsTUFBTTtJQUN6QixJQUFJYSxhQUFhYixTQUFTO1FBQ3hCa0IsUUFBUUMsSUFBSSxDQUFDO1FBQ2IsT0FBT0g7SUFDVDtJQUNBLE9BQU9oQjtBQUNUO0FBQ0EsU0FBU0g7SUFDUCxJQUFJaUIsSUFBSU0sVUFBVWIsTUFBTSxHQUFHLEtBQUthLFNBQVMsQ0FBQyxFQUFFLEtBQUtDLFlBQVlELFNBQVMsQ0FBQyxFQUFFLEdBQUc7SUFDNUUsSUFBSUUsWUFBWUYsVUFBVWIsTUFBTSxHQUFHLEtBQUthLFNBQVMsQ0FBQyxFQUFFLEtBQUtDLFlBQVlELFNBQVMsQ0FBQyxFQUFFLEdBQUc7SUFDcEYsSUFBSUcsaUJBQWlCSCxVQUFVYixNQUFNLEdBQUcsS0FBS2EsU0FBUyxDQUFDLEVBQUUsS0FBS0MsWUFBWUQsU0FBUyxDQUFDLEVBQUUsR0FBRztJQUN6RixJQUFJSSxPQUFPVixLQUFLO0lBQ2hCLElBQUlRLFdBQVc7UUFDYkUsT0FBT3pCLFlBQVllO0lBQ3JCO0lBQ0EsSUFBSVMsZ0JBQWdCO1FBQ2xCQyxPQUFPUCxZQUFZTztJQUNyQjtJQUNBLE9BQU9BO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYW1lcGxheS1wbGFubmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWdhNC9kaXN0L2Zvcm1hdC5qcz82NjdmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBmb3JtYXQ7XG52YXIgc21hbGxXb3JkcyA9IC9eKGF8YW58YW5kfGFzfGF0fGJ1dHxieXxlbnxmb3J8aWZ8aW58bm9yfG9mfG9ufG9yfHBlcnx0aGV8dG98dnM/XFwuP3x2aWEpJC9pO1xuZnVuY3Rpb24gdG9UaXRsZUNhc2Uoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcudG9TdHJpbmcoKS50cmltKCkucmVwbGFjZSgvW0EtWmEtejAtOVxcdTAwQzAtXFx1MDBGRl0rW15cXHMtXSovZywgZnVuY3Rpb24gKG1hdGNoLCBpbmRleCwgdGl0bGUpIHtcbiAgICBpZiAoaW5kZXggPiAwICYmIGluZGV4ICsgbWF0Y2gubGVuZ3RoICE9PSB0aXRsZS5sZW5ndGggJiYgbWF0Y2guc2VhcmNoKHNtYWxsV29yZHMpID4gLTEgJiYgdGl0bGUuY2hhckF0KGluZGV4IC0gMikgIT09IFwiOlwiICYmICh0aXRsZS5jaGFyQXQoaW5kZXggKyBtYXRjaC5sZW5ndGgpICE9PSBcIi1cIiB8fCB0aXRsZS5jaGFyQXQoaW5kZXggLSAxKSA9PT0gXCItXCIpICYmIHRpdGxlLmNoYXJBdChpbmRleCAtIDEpLnNlYXJjaCgvW15cXHMtXS8pIDwgMCkge1xuICAgICAgcmV0dXJuIG1hdGNoLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuICAgIGlmIChtYXRjaC5zdWJzdHIoMSkuc2VhcmNoKC9bQS1aXXxcXC4uLykgPiAtMSkge1xuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH1cbiAgICByZXR1cm4gbWF0Y2guY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBtYXRjaC5zdWJzdHIoMSk7XG4gIH0pO1xufVxuXG4vLyBTZWUgaWYgcyBjb3VsZCBiZSBhbiBlbWFpbCBhZGRyZXNzLiBXZSBkb24ndCB3YW50IHRvIHNlbmQgcGVyc29uYWwgZGF0YSBsaWtlIGVtYWlsLlxuLy8gaHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vYW5hbHl0aWNzL2Fuc3dlci8yNzk1OTgzP2hsPWVuXG5mdW5jdGlvbiBtaWdodEJlRW1haWwocykge1xuICAvLyBUaGVyZSdzIG5vIHBvaW50IHRyeWluZyB0byB2YWxpZGF0ZSByZmM4MjIgZnVsbHksIGp1c3QgbG9vayBmb3IgLi4uQC4uLlxuICByZXR1cm4gdHlwZW9mIHMgPT09IFwic3RyaW5nXCIgJiYgcy5pbmRleE9mKFwiQFwiKSAhPT0gLTE7XG59XG52YXIgcmVkYWN0ZWQgPSBcIlJFREFDVEVEIChQb3RlbnRpYWwgRW1haWwgQWRkcmVzcylcIjtcbmZ1bmN0aW9uIHJlZGFjdEVtYWlsKHN0cmluZykge1xuICBpZiAobWlnaHRCZUVtYWlsKHN0cmluZykpIHtcbiAgICBjb25zb2xlLndhcm4oXCJUaGlzIGFyZyBsb29rcyBsaWtlIGFuIGVtYWlsIGFkZHJlc3MsIHJlZGFjdGluZy5cIik7XG4gICAgcmV0dXJuIHJlZGFjdGVkO1xuICB9XG4gIHJldHVybiBzdHJpbmc7XG59XG5mdW5jdGlvbiBmb3JtYXQoKSB7XG4gIHZhciBzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBcIlwiO1xuICB2YXIgdGl0bGVDYXNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0cnVlO1xuICB2YXIgcmVkYWN0aW5nRW1haWwgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHRydWU7XG4gIHZhciBfc3RyID0gcyB8fCBcIlwiO1xuICBpZiAodGl0bGVDYXNlKSB7XG4gICAgX3N0ciA9IHRvVGl0bGVDYXNlKHMpO1xuICB9XG4gIGlmIChyZWRhY3RpbmdFbWFpbCkge1xuICAgIF9zdHIgPSByZWRhY3RFbWFpbChfc3RyKTtcbiAgfVxuICByZXR1cm4gX3N0cjtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJmb3JtYXQiLCJzbWFsbFdvcmRzIiwidG9UaXRsZUNhc2UiLCJzdHJpbmciLCJ0b1N0cmluZyIsInRyaW0iLCJyZXBsYWNlIiwibWF0Y2giLCJpbmRleCIsInRpdGxlIiwibGVuZ3RoIiwic2VhcmNoIiwiY2hhckF0IiwidG9Mb3dlckNhc2UiLCJzdWJzdHIiLCJ0b1VwcGVyQ2FzZSIsIm1pZ2h0QmVFbWFpbCIsInMiLCJpbmRleE9mIiwicmVkYWN0ZWQiLCJyZWRhY3RFbWFpbCIsImNvbnNvbGUiLCJ3YXJuIiwiYXJndW1lbnRzIiwidW5kZWZpbmVkIiwidGl0bGVDYXNlIiwicmVkYWN0aW5nRW1haWwiLCJfc3RyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/react-ga4/dist/format.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/react-ga4/dist/ga4.js":
/*!********************************************!*\
  !*** ./node_modules/react-ga4/dist/ga4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = exports.GA4 = void 0;\nvar _gtag = _interopRequireDefault(__webpack_require__(/*! ./gtag */ \"(rsc)/./node_modules/react-ga4/dist/gtag.js\"));\nvar _format = _interopRequireDefault(__webpack_require__(/*! ./format */ \"(rsc)/./node_modules/react-ga4/dist/format.js\"));\nvar _excluded = [\n    \"eventCategory\",\n    \"eventAction\",\n    \"eventLabel\",\n    \"eventValue\",\n    \"hitType\"\n], _excluded2 = [\n    \"title\",\n    \"location\"\n], _excluded3 = [\n    \"page\",\n    \"hitType\"\n];\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        \"default\": obj\n    };\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (null != _i) {\n        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n        try {\n            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                if (Object(_i) !== _i) return;\n                _n = !1;\n            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n        } catch (err) {\n            _d = !0, _e = err;\n        } finally{\n            try {\n                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n            } finally{\n                if (_d) throw _e;\n            }\n        }\n        return _arr;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n/*\nLinks\nhttps://developers.google.com/gtagjs/reference/api\nhttps://developers.google.com/tag-platform/gtagjs/reference\n*/ /**\n * @typedef GaOptions\n * @type {Object}\n * @property {boolean} [cookieUpdate=true]\n * @property {number} [cookieExpires=63072000] Default two years\n * @property {string} [cookieDomain=\"auto\"]\n * @property {string} [cookieFlags]\n * @property {string} [userId]\n * @property {string} [clientId]\n * @property {boolean} [anonymizeIp]\n * @property {string} [contentGroup1]\n * @property {string} [contentGroup2]\n * @property {string} [contentGroup3]\n * @property {string} [contentGroup4]\n * @property {string} [contentGroup5]\n * @property {boolean} [allowAdFeatures=true]\n * @property {boolean} [allowAdPersonalizationSignals]\n * @property {boolean} [nonInteraction]\n * @property {string} [page]\n */ /**\n * @typedef UaEventOptions\n * @type {Object}\n * @property {string} action\n * @property {string} category\n * @property {string} [label]\n * @property {number} [value]\n * @property {boolean} [nonInteraction]\n * @property {('beacon'|'xhr'|'image')} [transport]\n */ /**\n * @typedef InitOptions\n * @type {Object}\n * @property {string} trackingId\n * @property {GaOptions|any} [gaOptions]\n * @property {Object} [gtagOptions] New parameter\n */ var GA4 = /*#__PURE__*/ function() {\n    function GA4() {\n        var _this = this;\n        _classCallCheck(this, GA4);\n        _defineProperty(this, \"reset\", function() {\n            _this.isInitialized = false;\n            _this._testMode = false;\n            _this._currentMeasurementId;\n            _this._hasLoadedGA = false;\n            _this._isQueuing = false;\n            _this._queueGtag = [];\n        });\n        _defineProperty(this, \"_gtag\", function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            if (!_this._testMode) {\n                if (_this._isQueuing) {\n                    _this._queueGtag.push(args);\n                } else {\n                    _gtag[\"default\"].apply(void 0, args);\n                }\n            } else {\n                _this._queueGtag.push(args);\n            }\n        });\n        _defineProperty(this, \"_loadGA\", function(GA_MEASUREMENT_ID, nonce) {\n            var gtagUrl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"https://www.googletagmanager.com/gtag/js\";\n            if (true) {\n                return;\n            }\n            if (!_this._hasLoadedGA) {\n                // Global Site Tag (gtag.js) - Google Analytics\n                var script = document.createElement(\"script\");\n                script.async = true;\n                script.src = \"\".concat(gtagUrl, \"?id=\").concat(GA_MEASUREMENT_ID);\n                if (nonce) {\n                    script.setAttribute(\"nonce\", nonce);\n                }\n                document.body.appendChild(script);\n                window.dataLayer = window.dataLayer || [];\n                window.gtag = function gtag() {\n                    window.dataLayer.push(arguments);\n                };\n                _this._hasLoadedGA = true;\n            }\n        });\n        _defineProperty(this, \"_toGtagOptions\", function(gaOptions) {\n            if (!gaOptions) {\n                return;\n            }\n            var mapFields = {\n                // Old https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#cookieUpdate\n                // New https://developers.google.com/analytics/devguides/collection/gtagjs/cookies-user-id#cookie_update\n                cookieUpdate: \"cookie_update\",\n                cookieExpires: \"cookie_expires\",\n                cookieDomain: \"cookie_domain\",\n                cookieFlags: \"cookie_flags\",\n                // must be in set method?\n                userId: \"user_id\",\n                clientId: \"client_id\",\n                anonymizeIp: \"anonymize_ip\",\n                // https://support.google.com/analytics/answer/2853546?hl=en#zippy=%2Cin-this-article\n                contentGroup1: \"content_group1\",\n                contentGroup2: \"content_group2\",\n                contentGroup3: \"content_group3\",\n                contentGroup4: \"content_group4\",\n                contentGroup5: \"content_group5\",\n                // https://support.google.com/analytics/answer/9050852?hl=en\n                allowAdFeatures: \"allow_google_signals\",\n                allowAdPersonalizationSignals: \"allow_ad_personalization_signals\",\n                nonInteraction: \"non_interaction\",\n                page: \"page_path\",\n                hitCallback: \"event_callback\"\n            };\n            var gtagOptions = Object.entries(gaOptions).reduce(function(prev, _ref) {\n                var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];\n                if (mapFields[key]) {\n                    prev[mapFields[key]] = value;\n                } else {\n                    prev[key] = value;\n                }\n                return prev;\n            }, {});\n            return gtagOptions;\n        });\n        _defineProperty(this, \"initialize\", function(GA_MEASUREMENT_ID) {\n            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            if (!GA_MEASUREMENT_ID) {\n                throw new Error(\"Require GA_MEASUREMENT_ID\");\n            }\n            var initConfigs = typeof GA_MEASUREMENT_ID === \"string\" ? [\n                {\n                    trackingId: GA_MEASUREMENT_ID\n                }\n            ] : GA_MEASUREMENT_ID;\n            _this._currentMeasurementId = initConfigs[0].trackingId;\n            var gaOptions = options.gaOptions, gtagOptions = options.gtagOptions, nonce = options.nonce, _options$testMode = options.testMode, testMode = _options$testMode === void 0 ? false : _options$testMode, gtagUrl = options.gtagUrl;\n            _this._testMode = testMode;\n            if (!testMode) {\n                _this._loadGA(_this._currentMeasurementId, nonce, gtagUrl);\n            }\n            if (!_this.isInitialized) {\n                _this._gtag(\"js\", new Date());\n                initConfigs.forEach(function(config) {\n                    var mergedGtagOptions = _objectSpread(_objectSpread(_objectSpread({}, _this._toGtagOptions(_objectSpread(_objectSpread({}, gaOptions), config.gaOptions))), gtagOptions), config.gtagOptions);\n                    if (Object.keys(mergedGtagOptions).length) {\n                        _this._gtag(\"config\", config.trackingId, mergedGtagOptions);\n                    } else {\n                        _this._gtag(\"config\", config.trackingId);\n                    }\n                });\n            }\n            _this.isInitialized = true;\n            if (!testMode) {\n                var queues = _toConsumableArray(_this._queueGtag);\n                _this._queueGtag = [];\n                _this._isQueuing = false;\n                while(queues.length){\n                    var queue = queues.shift();\n                    _this._gtag.apply(_this, _toConsumableArray(queue));\n                    if (queue[0] === \"get\") {\n                        _this._isQueuing = true;\n                    }\n                }\n            }\n        });\n        _defineProperty(this, \"set\", function(fieldsObject) {\n            if (!fieldsObject) {\n                console.warn(\"`fieldsObject` is required in .set()\");\n                return;\n            }\n            if (_typeof(fieldsObject) !== \"object\") {\n                console.warn(\"Expected `fieldsObject` arg to be an Object\");\n                return;\n            }\n            if (Object.keys(fieldsObject).length === 0) {\n                console.warn(\"empty `fieldsObject` given to .set()\");\n            }\n            _this._gaCommand(\"set\", fieldsObject);\n        });\n        _defineProperty(this, \"_gaCommandSendEvent\", function(eventCategory, eventAction, eventLabel, eventValue, fieldsObject) {\n            _this._gtag(\"event\", eventAction, _objectSpread(_objectSpread({\n                event_category: eventCategory,\n                event_label: eventLabel,\n                value: eventValue\n            }, fieldsObject && {\n                non_interaction: fieldsObject.nonInteraction\n            }), _this._toGtagOptions(fieldsObject)));\n        });\n        _defineProperty(this, \"_gaCommandSendEventParameters\", function() {\n            for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n                args[_key2] = arguments[_key2];\n            }\n            if (typeof args[0] === \"string\") {\n                _this._gaCommandSendEvent.apply(_this, _toConsumableArray(args.slice(1)));\n            } else {\n                var _args$ = args[0], eventCategory = _args$.eventCategory, eventAction = _args$.eventAction, eventLabel = _args$.eventLabel, eventValue = _args$.eventValue, hitType = _args$.hitType, rest = _objectWithoutProperties(_args$, _excluded);\n                _this._gaCommandSendEvent(eventCategory, eventAction, eventLabel, eventValue, rest);\n            }\n        });\n        _defineProperty(this, \"_gaCommandSendTiming\", function(timingCategory, timingVar, timingValue, timingLabel) {\n            _this._gtag(\"event\", \"timing_complete\", {\n                name: timingVar,\n                value: timingValue,\n                event_category: timingCategory,\n                event_label: timingLabel\n            });\n        });\n        _defineProperty(this, \"_gaCommandSendPageview\", function(page, fieldsObject) {\n            if (fieldsObject && Object.keys(fieldsObject).length) {\n                var _this$_toGtagOptions = _this._toGtagOptions(fieldsObject), title = _this$_toGtagOptions.title, location = _this$_toGtagOptions.location, rest = _objectWithoutProperties(_this$_toGtagOptions, _excluded2);\n                _this._gtag(\"event\", \"page_view\", _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, page && {\n                    page_path: page\n                }), title && {\n                    page_title: title\n                }), location && {\n                    page_location: location\n                }), rest));\n            } else if (page) {\n                _this._gtag(\"event\", \"page_view\", {\n                    page_path: page\n                });\n            } else {\n                _this._gtag(\"event\", \"page_view\");\n            }\n        });\n        _defineProperty(this, \"_gaCommandSendPageviewParameters\", function() {\n            for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n                args[_key3] = arguments[_key3];\n            }\n            if (typeof args[0] === \"string\") {\n                _this._gaCommandSendPageview.apply(_this, _toConsumableArray(args.slice(1)));\n            } else {\n                var _args$2 = args[0], page = _args$2.page, hitType = _args$2.hitType, rest = _objectWithoutProperties(_args$2, _excluded3);\n                _this._gaCommandSendPageview(page, rest);\n            }\n        });\n        _defineProperty(this, \"_gaCommandSend\", function() {\n            for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n                args[_key4] = arguments[_key4];\n            }\n            var hitType = typeof args[0] === \"string\" ? args[0] : args[0].hitType;\n            switch(hitType){\n                case \"event\":\n                    _this._gaCommandSendEventParameters.apply(_this, args);\n                    break;\n                case \"pageview\":\n                    _this._gaCommandSendPageviewParameters.apply(_this, args);\n                    break;\n                case \"timing\":\n                    _this._gaCommandSendTiming.apply(_this, _toConsumableArray(args.slice(1)));\n                    break;\n                case \"screenview\":\n                case \"transaction\":\n                case \"item\":\n                case \"social\":\n                case \"exception\":\n                    console.warn(\"Unsupported send command: \".concat(hitType));\n                    break;\n                default:\n                    console.warn(\"Send command doesn't exist: \".concat(hitType));\n            }\n        });\n        _defineProperty(this, \"_gaCommandSet\", function() {\n            for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++){\n                args[_key5] = arguments[_key5];\n            }\n            if (typeof args[0] === \"string\") {\n                args[0] = _defineProperty({}, args[0], args[1]);\n            }\n            _this._gtag(\"set\", _this._toGtagOptions(args[0]));\n        });\n        _defineProperty(this, \"_gaCommand\", function(command) {\n            for(var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++){\n                args[_key6 - 1] = arguments[_key6];\n            }\n            switch(command){\n                case \"send\":\n                    _this._gaCommandSend.apply(_this, args);\n                    break;\n                case \"set\":\n                    _this._gaCommandSet.apply(_this, args);\n                    break;\n                default:\n                    console.warn(\"Command doesn't exist: \".concat(command));\n            }\n        });\n        _defineProperty(this, \"ga\", function() {\n            for(var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++){\n                args[_key7] = arguments[_key7];\n            }\n            if (typeof args[0] === \"string\") {\n                _this._gaCommand.apply(_this, args);\n            } else {\n                var readyCallback = args[0];\n                _this._gtag(\"get\", _this._currentMeasurementId, \"client_id\", function(clientId) {\n                    _this._isQueuing = false;\n                    var queues = _this._queueGtag;\n                    readyCallback({\n                        get: function get(property) {\n                            return property === \"clientId\" ? clientId : property === \"trackingId\" ? _this._currentMeasurementId : property === \"apiVersion\" ? \"1\" : undefined;\n                        }\n                    });\n                    while(queues.length){\n                        var queue = queues.shift();\n                        _this._gtag.apply(_this, _toConsumableArray(queue));\n                    }\n                });\n                _this._isQueuing = true;\n            }\n            return _this.ga;\n        });\n        _defineProperty(this, \"event\", function(optionsOrName, params) {\n            if (typeof optionsOrName === \"string\") {\n                _this._gtag(\"event\", optionsOrName, _this._toGtagOptions(params));\n            } else {\n                var action = optionsOrName.action, category = optionsOrName.category, label = optionsOrName.label, value = optionsOrName.value, nonInteraction = optionsOrName.nonInteraction, transport = optionsOrName.transport;\n                if (!category || !action) {\n                    console.warn(\"args.category AND args.action are required in event()\");\n                    return;\n                }\n                // Required Fields\n                var fieldObject = {\n                    hitType: \"event\",\n                    eventCategory: (0, _format[\"default\"])(category),\n                    eventAction: (0, _format[\"default\"])(action)\n                };\n                // Optional Fields\n                if (label) {\n                    fieldObject.eventLabel = (0, _format[\"default\"])(label);\n                }\n                if (typeof value !== \"undefined\") {\n                    if (typeof value !== \"number\") {\n                        console.warn(\"Expected `args.value` arg to be a Number.\");\n                    } else {\n                        fieldObject.eventValue = value;\n                    }\n                }\n                if (typeof nonInteraction !== \"undefined\") {\n                    if (typeof nonInteraction !== \"boolean\") {\n                        console.warn(\"`args.nonInteraction` must be a boolean.\");\n                    } else {\n                        fieldObject.nonInteraction = nonInteraction;\n                    }\n                }\n                if (typeof transport !== \"undefined\") {\n                    if (typeof transport !== \"string\") {\n                        console.warn(\"`args.transport` must be a string.\");\n                    } else {\n                        if ([\n                            \"beacon\",\n                            \"xhr\",\n                            \"image\"\n                        ].indexOf(transport) === -1) {\n                            console.warn(\"`args.transport` must be either one of these values: `beacon`, `xhr` or `image`\");\n                        }\n                        fieldObject.transport = transport;\n                    }\n                }\n                _this._gaCommand(\"send\", fieldObject);\n            }\n        });\n        _defineProperty(this, \"send\", function(fieldObject) {\n            _this._gaCommand(\"send\", fieldObject);\n        });\n        this.reset();\n    }\n    _createClass(GA4, [\n        {\n            key: \"gtag\",\n            value: function gtag() {\n                this._gtag.apply(this, arguments);\n            }\n        }\n    ]);\n    return GA4;\n}();\nexports.GA4 = GA4;\nvar _default = new GA4();\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/react-ga4/dist/ga4.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/react-ga4/dist/gtag.js":
/*!*********************************************!*\
  !*** ./node_modules/react-ga4/dist/gtag.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar gtag = function gtag() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    if (false) { var _window; }\n};\nvar _default = gtag;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2E0L2Rpc3QvZ3RhZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWtCLEdBQUcsS0FBSztBQUMxQixJQUFJRSxPQUFPLFNBQVNBO0lBQ2xCLElBQUssSUFBSUMsT0FBT0MsVUFBVUMsTUFBTSxFQUFFQyxPQUFPLElBQUlDLE1BQU1KLE9BQU9LLE9BQU8sR0FBR0EsT0FBT0wsTUFBTUssT0FBUTtRQUN2RkYsSUFBSSxDQUFDRSxLQUFLLEdBQUdKLFNBQVMsQ0FBQ0ksS0FBSztJQUM5QjtJQUNBLElBQUksS0FBNkIsRUFBRSxnQkFTbEM7QUFDSDtBQUNBLElBQUlNLFdBQVdaO0FBQ2ZGLGtCQUFrQixHQUFHYyIsInNvdXJjZXMiOlsid2VicGFjazovL2dhbWVwbGF5LXBsYW5uZXIvLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2E0L2Rpc3QvZ3RhZy5qcz81Yzg1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG52YXIgZ3RhZyA9IGZ1bmN0aW9uIGd0YWcoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgX3dpbmRvdztcbiAgICBpZiAodHlwZW9mIHdpbmRvdy5ndGFnID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB3aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTtcbiAgICAgIHdpbmRvdy5ndGFnID0gZnVuY3Rpb24gZ3RhZygpIHtcbiAgICAgICAgd2luZG93LmRhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7XG4gICAgICB9O1xuICAgIH1cbiAgICAoX3dpbmRvdyA9IHdpbmRvdykuZ3RhZy5hcHBseShfd2luZG93LCBhcmdzKTtcbiAgfVxufTtcbnZhciBfZGVmYXVsdCA9IGd0YWc7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImd0YWciLCJfbGVuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJncyIsIkFycmF5IiwiX2tleSIsIl93aW5kb3ciLCJ3aW5kb3ciLCJkYXRhTGF5ZXIiLCJwdXNoIiwiYXBwbHkiLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/react-ga4/dist/gtag.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/react-ga4/dist/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-ga4/dist/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = exports.ReactGAImplementation = void 0;\nvar _ga = _interopRequireWildcard(__webpack_require__(/*! ./ga4 */ \"(rsc)/./node_modules/react-ga4/dist/ga4.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n        return {\n            \"default\": obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj[\"default\"] = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nvar ReactGAImplementation = _ga.GA4;\nexports.ReactGAImplementation = ReactGAImplementation;\nvar _default = _ga[\"default\"];\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2E0L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYixTQUFTQSxRQUFRQyxHQUFHO0lBQUk7SUFBMkIsT0FBT0QsVUFBVSxjQUFjLE9BQU9FLFVBQVUsWUFBWSxPQUFPQSxPQUFPQyxRQUFRLEdBQUcsU0FBVUYsR0FBRztRQUFJLE9BQU8sT0FBT0E7SUFBSyxJQUFJLFNBQVVBLEdBQUc7UUFBSSxPQUFPQSxPQUFPLGNBQWMsT0FBT0MsVUFBVUQsSUFBSUcsV0FBVyxLQUFLRixVQUFVRCxRQUFRQyxPQUFPRyxTQUFTLEdBQUcsV0FBVyxPQUFPSjtJQUFLLEdBQUdELFFBQVFDO0FBQU07QUFDL1VLLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxrQkFBa0IsR0FBR0EsNkJBQTZCLEdBQUcsS0FBSztBQUMxRCxJQUFJRyxNQUFNQyx3QkFBd0JDLG1CQUFPQSxDQUFDLHlEQUFPO0FBQ2pELFNBQVNDLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFTQSx5QkFBeUJDLFdBQVc7UUFBSSxPQUFPQSxjQUFjRyxtQkFBbUJEO0lBQW1CLEdBQUdGO0FBQWM7QUFDOVUsU0FBU0gsd0JBQXdCWCxHQUFHLEVBQUVjLFdBQVc7SUFBSSxJQUFJLENBQUNBLGVBQWVkLE9BQU9BLElBQUlrQixVQUFVLEVBQUU7UUFBRSxPQUFPbEI7SUFBSztJQUFFLElBQUlBLFFBQVEsUUFBUUQsUUFBUUMsU0FBUyxZQUFZLE9BQU9BLFFBQVEsWUFBWTtRQUFFLE9BQU87WUFBRSxXQUFXQTtRQUFJO0lBQUc7SUFBRSxJQUFJbUIsUUFBUU4seUJBQXlCQztJQUFjLElBQUlLLFNBQVNBLE1BQU1DLEdBQUcsQ0FBQ3BCLE1BQU07UUFBRSxPQUFPbUIsTUFBTUUsR0FBRyxDQUFDckI7SUFBTTtJQUFFLElBQUlzQixTQUFTLENBQUM7SUFBRyxJQUFJQyx3QkFBd0JsQixPQUFPQyxjQUFjLElBQUlELE9BQU9tQix3QkFBd0I7SUFBRSxJQUFLLElBQUlDLE9BQU96QixJQUFLO1FBQUUsSUFBSXlCLFFBQVEsYUFBYXBCLE9BQU9ELFNBQVMsQ0FBQ3NCLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDM0IsS0FBS3lCLE1BQU07WUFBRSxJQUFJRyxPQUFPTCx3QkFBd0JsQixPQUFPbUIsd0JBQXdCLENBQUN4QixLQUFLeUIsT0FBTztZQUFNLElBQUlHLFFBQVNBLENBQUFBLEtBQUtQLEdBQUcsSUFBSU8sS0FBS0MsR0FBRyxHQUFHO2dCQUFFeEIsT0FBT0MsY0FBYyxDQUFDZ0IsUUFBUUcsS0FBS0c7WUFBTyxPQUFPO2dCQUFFTixNQUFNLENBQUNHLElBQUksR0FBR3pCLEdBQUcsQ0FBQ3lCLElBQUk7WUFBRTtRQUFFO0lBQUU7SUFBRUgsTUFBTSxDQUFDLFVBQVUsR0FBR3RCO0lBQUssSUFBSW1CLE9BQU87UUFBRUEsTUFBTVUsR0FBRyxDQUFDN0IsS0FBS3NCO0lBQVM7SUFBRSxPQUFPQTtBQUFRO0FBQzF5QixJQUFJYix3QkFBd0JDLElBQUlvQixHQUFHO0FBQ25DdkIsNkJBQTZCLEdBQUdFO0FBQ2hDLElBQUlzQixXQUFXckIsR0FBRyxDQUFDLFVBQVU7QUFDN0JILGtCQUFrQixHQUFHd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYW1lcGxheS1wbGFubmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWdhNC9kaXN0L2luZGV4LmpzPzg5ZTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9LCBfdHlwZW9mKG9iaik7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGV4cG9ydHMuUmVhY3RHQUltcGxlbWVudGF0aW9uID0gdm9pZCAwO1xudmFyIF9nYSA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL2dhNFwiKSk7XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpOyB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7IHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDsgfSkobm9kZUludGVyb3ApOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7IGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gaWYgKG9iaiA9PT0gbnVsbCB8fCBfdHlwZW9mKG9iaikgIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7IHJldHVybiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfSB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApOyBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHsgcmV0dXJuIGNhY2hlLmdldChvYmopOyB9IHZhciBuZXdPYmogPSB7fTsgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqW1wiZGVmYXVsdFwiXSA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfVxudmFyIFJlYWN0R0FJbXBsZW1lbnRhdGlvbiA9IF9nYS5HQTQ7XG5leHBvcnRzLlJlYWN0R0FJbXBsZW1lbnRhdGlvbiA9IFJlYWN0R0FJbXBsZW1lbnRhdGlvbjtcbnZhciBfZGVmYXVsdCA9IF9nYVtcImRlZmF1bHRcIl07XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwib2JqIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUmVhY3RHQUltcGxlbWVudGF0aW9uIiwiX2dhIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwiX19lc01vZHVsZSIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIkdBNCIsIl9kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/react-ga4/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-ga4/dist/format.js":
/*!***********************************************!*\
  !*** ./node_modules/react-ga4/dist/format.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = format;\nvar smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\\.?|via)$/i;\nfunction toTitleCase(string) {\n  return string.toString().trim().replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, function (match, index, title) {\n    if (index > 0 && index + match.length !== title.length && match.search(smallWords) > -1 && title.charAt(index - 2) !== \":\" && (title.charAt(index + match.length) !== \"-\" || title.charAt(index - 1) === \"-\") && title.charAt(index - 1).search(/[^\\s-]/) < 0) {\n      return match.toLowerCase();\n    }\n    if (match.substr(1).search(/[A-Z]|\\../) > -1) {\n      return match;\n    }\n    return match.charAt(0).toUpperCase() + match.substr(1);\n  });\n}\n\n// See if s could be an email address. We don't want to send personal data like email.\n// https://support.google.com/analytics/answer/2795983?hl=en\nfunction mightBeEmail(s) {\n  // There's no point trying to validate rfc822 fully, just look for ...@...\n  return typeof s === \"string\" && s.indexOf(\"@\") !== -1;\n}\nvar redacted = \"REDACTED (Potential Email Address)\";\nfunction redactEmail(string) {\n  if (mightBeEmail(string)) {\n    console.warn(\"This arg looks like an email address, redacting.\");\n    return redacted;\n  }\n  return string;\n}\nfunction format() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var titleCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var redactingEmail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var _str = s || \"\";\n  if (titleCase) {\n    _str = toTitleCase(s);\n  }\n  if (redactingEmail) {\n    _str = redactEmail(_str);\n  }\n  return _str;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2E0L2Rpc3QvZm9ybWF0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYW1lcGxheS1wbGFubmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWdhNC9kaXN0L2Zvcm1hdC5qcz8zYTNiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBmb3JtYXQ7XG52YXIgc21hbGxXb3JkcyA9IC9eKGF8YW58YW5kfGFzfGF0fGJ1dHxieXxlbnxmb3J8aWZ8aW58bm9yfG9mfG9ufG9yfHBlcnx0aGV8dG98dnM/XFwuP3x2aWEpJC9pO1xuZnVuY3Rpb24gdG9UaXRsZUNhc2Uoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcudG9TdHJpbmcoKS50cmltKCkucmVwbGFjZSgvW0EtWmEtejAtOVxcdTAwQzAtXFx1MDBGRl0rW15cXHMtXSovZywgZnVuY3Rpb24gKG1hdGNoLCBpbmRleCwgdGl0bGUpIHtcbiAgICBpZiAoaW5kZXggPiAwICYmIGluZGV4ICsgbWF0Y2gubGVuZ3RoICE9PSB0aXRsZS5sZW5ndGggJiYgbWF0Y2guc2VhcmNoKHNtYWxsV29yZHMpID4gLTEgJiYgdGl0bGUuY2hhckF0KGluZGV4IC0gMikgIT09IFwiOlwiICYmICh0aXRsZS5jaGFyQXQoaW5kZXggKyBtYXRjaC5sZW5ndGgpICE9PSBcIi1cIiB8fCB0aXRsZS5jaGFyQXQoaW5kZXggLSAxKSA9PT0gXCItXCIpICYmIHRpdGxlLmNoYXJBdChpbmRleCAtIDEpLnNlYXJjaCgvW15cXHMtXS8pIDwgMCkge1xuICAgICAgcmV0dXJuIG1hdGNoLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuICAgIGlmIChtYXRjaC5zdWJzdHIoMSkuc2VhcmNoKC9bQS1aXXxcXC4uLykgPiAtMSkge1xuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH1cbiAgICByZXR1cm4gbWF0Y2guY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBtYXRjaC5zdWJzdHIoMSk7XG4gIH0pO1xufVxuXG4vLyBTZWUgaWYgcyBjb3VsZCBiZSBhbiBlbWFpbCBhZGRyZXNzLiBXZSBkb24ndCB3YW50IHRvIHNlbmQgcGVyc29uYWwgZGF0YSBsaWtlIGVtYWlsLlxuLy8gaHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vYW5hbHl0aWNzL2Fuc3dlci8yNzk1OTgzP2hsPWVuXG5mdW5jdGlvbiBtaWdodEJlRW1haWwocykge1xuICAvLyBUaGVyZSdzIG5vIHBvaW50IHRyeWluZyB0byB2YWxpZGF0ZSByZmM4MjIgZnVsbHksIGp1c3QgbG9vayBmb3IgLi4uQC4uLlxuICByZXR1cm4gdHlwZW9mIHMgPT09IFwic3RyaW5nXCIgJiYgcy5pbmRleE9mKFwiQFwiKSAhPT0gLTE7XG59XG52YXIgcmVkYWN0ZWQgPSBcIlJFREFDVEVEIChQb3RlbnRpYWwgRW1haWwgQWRkcmVzcylcIjtcbmZ1bmN0aW9uIHJlZGFjdEVtYWlsKHN0cmluZykge1xuICBpZiAobWlnaHRCZUVtYWlsKHN0cmluZykpIHtcbiAgICBjb25zb2xlLndhcm4oXCJUaGlzIGFyZyBsb29rcyBsaWtlIGFuIGVtYWlsIGFkZHJlc3MsIHJlZGFjdGluZy5cIik7XG4gICAgcmV0dXJuIHJlZGFjdGVkO1xuICB9XG4gIHJldHVybiBzdHJpbmc7XG59XG5mdW5jdGlvbiBmb3JtYXQoKSB7XG4gIHZhciBzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBcIlwiO1xuICB2YXIgdGl0bGVDYXNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0cnVlO1xuICB2YXIgcmVkYWN0aW5nRW1haWwgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHRydWU7XG4gIHZhciBfc3RyID0gcyB8fCBcIlwiO1xuICBpZiAodGl0bGVDYXNlKSB7XG4gICAgX3N0ciA9IHRvVGl0bGVDYXNlKHMpO1xuICB9XG4gIGlmIChyZWRhY3RpbmdFbWFpbCkge1xuICAgIF9zdHIgPSByZWRhY3RFbWFpbChfc3RyKTtcbiAgfVxuICByZXR1cm4gX3N0cjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-ga4/dist/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-ga4/dist/ga4.js":
/*!********************************************!*\
  !*** ./node_modules/react-ga4/dist/ga4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.GA4 = void 0;\nvar _gtag = _interopRequireDefault(__webpack_require__(/*! ./gtag */ \"(ssr)/./node_modules/react-ga4/dist/gtag.js\"));\nvar _format = _interopRequireDefault(__webpack_require__(/*! ./format */ \"(ssr)/./node_modules/react-ga4/dist/format.js\"));\nvar _excluded = [\"eventCategory\", \"eventAction\", \"eventLabel\", \"eventValue\", \"hitType\"],\n  _excluded2 = [\"title\", \"location\"],\n  _excluded3 = [\"page\", \"hitType\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\nLinks\nhttps://developers.google.com/gtagjs/reference/api\nhttps://developers.google.com/tag-platform/gtagjs/reference\n*/\n/**\n * @typedef GaOptions\n * @type {Object}\n * @property {boolean} [cookieUpdate=true]\n * @property {number} [cookieExpires=63072000] Default two years\n * @property {string} [cookieDomain=\"auto\"]\n * @property {string} [cookieFlags]\n * @property {string} [userId]\n * @property {string} [clientId]\n * @property {boolean} [anonymizeIp]\n * @property {string} [contentGroup1]\n * @property {string} [contentGroup2]\n * @property {string} [contentGroup3]\n * @property {string} [contentGroup4]\n * @property {string} [contentGroup5]\n * @property {boolean} [allowAdFeatures=true]\n * @property {boolean} [allowAdPersonalizationSignals]\n * @property {boolean} [nonInteraction]\n * @property {string} [page]\n */\n/**\n * @typedef UaEventOptions\n * @type {Object}\n * @property {string} action\n * @property {string} category\n * @property {string} [label]\n * @property {number} [value]\n * @property {boolean} [nonInteraction]\n * @property {('beacon'|'xhr'|'image')} [transport]\n */\n/**\n * @typedef InitOptions\n * @type {Object}\n * @property {string} trackingId\n * @property {GaOptions|any} [gaOptions]\n * @property {Object} [gtagOptions] New parameter\n */\nvar GA4 = /*#__PURE__*/function () {\n  function GA4() {\n    var _this = this;\n    _classCallCheck(this, GA4);\n    _defineProperty(this, \"reset\", function () {\n      _this.isInitialized = false;\n      _this._testMode = false;\n      _this._currentMeasurementId;\n      _this._hasLoadedGA = false;\n      _this._isQueuing = false;\n      _this._queueGtag = [];\n    });\n    _defineProperty(this, \"_gtag\", function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      if (!_this._testMode) {\n        if (_this._isQueuing) {\n          _this._queueGtag.push(args);\n        } else {\n          _gtag[\"default\"].apply(void 0, args);\n        }\n      } else {\n        _this._queueGtag.push(args);\n      }\n    });\n    _defineProperty(this, \"_loadGA\", function (GA_MEASUREMENT_ID, nonce) {\n      var gtagUrl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"https://www.googletagmanager.com/gtag/js\";\n      if (typeof window === \"undefined\" || typeof document === \"undefined\") {\n        return;\n      }\n      if (!_this._hasLoadedGA) {\n        // Global Site Tag (gtag.js) - Google Analytics\n        var script = document.createElement(\"script\");\n        script.async = true;\n        script.src = \"\".concat(gtagUrl, \"?id=\").concat(GA_MEASUREMENT_ID);\n        if (nonce) {\n          script.setAttribute(\"nonce\", nonce);\n        }\n        document.body.appendChild(script);\n        window.dataLayer = window.dataLayer || [];\n        window.gtag = function gtag() {\n          window.dataLayer.push(arguments);\n        };\n        _this._hasLoadedGA = true;\n      }\n    });\n    _defineProperty(this, \"_toGtagOptions\", function (gaOptions) {\n      if (!gaOptions) {\n        return;\n      }\n      var mapFields = {\n        // Old https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#cookieUpdate\n        // New https://developers.google.com/analytics/devguides/collection/gtagjs/cookies-user-id#cookie_update\n        cookieUpdate: \"cookie_update\",\n        cookieExpires: \"cookie_expires\",\n        cookieDomain: \"cookie_domain\",\n        cookieFlags: \"cookie_flags\",\n        // must be in set method?\n        userId: \"user_id\",\n        clientId: \"client_id\",\n        anonymizeIp: \"anonymize_ip\",\n        // https://support.google.com/analytics/answer/2853546?hl=en#zippy=%2Cin-this-article\n        contentGroup1: \"content_group1\",\n        contentGroup2: \"content_group2\",\n        contentGroup3: \"content_group3\",\n        contentGroup4: \"content_group4\",\n        contentGroup5: \"content_group5\",\n        // https://support.google.com/analytics/answer/9050852?hl=en\n        allowAdFeatures: \"allow_google_signals\",\n        allowAdPersonalizationSignals: \"allow_ad_personalization_signals\",\n        nonInteraction: \"non_interaction\",\n        page: \"page_path\",\n        hitCallback: \"event_callback\"\n      };\n      var gtagOptions = Object.entries(gaOptions).reduce(function (prev, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n        if (mapFields[key]) {\n          prev[mapFields[key]] = value;\n        } else {\n          prev[key] = value;\n        }\n        return prev;\n      }, {});\n      return gtagOptions;\n    });\n    _defineProperty(this, \"initialize\", function (GA_MEASUREMENT_ID) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!GA_MEASUREMENT_ID) {\n        throw new Error(\"Require GA_MEASUREMENT_ID\");\n      }\n      var initConfigs = typeof GA_MEASUREMENT_ID === \"string\" ? [{\n        trackingId: GA_MEASUREMENT_ID\n      }] : GA_MEASUREMENT_ID;\n      _this._currentMeasurementId = initConfigs[0].trackingId;\n      var gaOptions = options.gaOptions,\n        gtagOptions = options.gtagOptions,\n        nonce = options.nonce,\n        _options$testMode = options.testMode,\n        testMode = _options$testMode === void 0 ? false : _options$testMode,\n        gtagUrl = options.gtagUrl;\n      _this._testMode = testMode;\n      if (!testMode) {\n        _this._loadGA(_this._currentMeasurementId, nonce, gtagUrl);\n      }\n      if (!_this.isInitialized) {\n        _this._gtag(\"js\", new Date());\n        initConfigs.forEach(function (config) {\n          var mergedGtagOptions = _objectSpread(_objectSpread(_objectSpread({}, _this._toGtagOptions(_objectSpread(_objectSpread({}, gaOptions), config.gaOptions))), gtagOptions), config.gtagOptions);\n          if (Object.keys(mergedGtagOptions).length) {\n            _this._gtag(\"config\", config.trackingId, mergedGtagOptions);\n          } else {\n            _this._gtag(\"config\", config.trackingId);\n          }\n        });\n      }\n      _this.isInitialized = true;\n      if (!testMode) {\n        var queues = _toConsumableArray(_this._queueGtag);\n        _this._queueGtag = [];\n        _this._isQueuing = false;\n        while (queues.length) {\n          var queue = queues.shift();\n          _this._gtag.apply(_this, _toConsumableArray(queue));\n          if (queue[0] === \"get\") {\n            _this._isQueuing = true;\n          }\n        }\n      }\n    });\n    _defineProperty(this, \"set\", function (fieldsObject) {\n      if (!fieldsObject) {\n        console.warn(\"`fieldsObject` is required in .set()\");\n        return;\n      }\n      if (_typeof(fieldsObject) !== \"object\") {\n        console.warn(\"Expected `fieldsObject` arg to be an Object\");\n        return;\n      }\n      if (Object.keys(fieldsObject).length === 0) {\n        console.warn(\"empty `fieldsObject` given to .set()\");\n      }\n      _this._gaCommand(\"set\", fieldsObject);\n    });\n    _defineProperty(this, \"_gaCommandSendEvent\", function (eventCategory, eventAction, eventLabel, eventValue, fieldsObject) {\n      _this._gtag(\"event\", eventAction, _objectSpread(_objectSpread({\n        event_category: eventCategory,\n        event_label: eventLabel,\n        value: eventValue\n      }, fieldsObject && {\n        non_interaction: fieldsObject.nonInteraction\n      }), _this._toGtagOptions(fieldsObject)));\n    });\n    _defineProperty(this, \"_gaCommandSendEventParameters\", function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      if (typeof args[0] === \"string\") {\n        _this._gaCommandSendEvent.apply(_this, _toConsumableArray(args.slice(1)));\n      } else {\n        var _args$ = args[0],\n          eventCategory = _args$.eventCategory,\n          eventAction = _args$.eventAction,\n          eventLabel = _args$.eventLabel,\n          eventValue = _args$.eventValue,\n          hitType = _args$.hitType,\n          rest = _objectWithoutProperties(_args$, _excluded);\n        _this._gaCommandSendEvent(eventCategory, eventAction, eventLabel, eventValue, rest);\n      }\n    });\n    _defineProperty(this, \"_gaCommandSendTiming\", function (timingCategory, timingVar, timingValue, timingLabel) {\n      _this._gtag(\"event\", \"timing_complete\", {\n        name: timingVar,\n        value: timingValue,\n        event_category: timingCategory,\n        event_label: timingLabel\n      });\n    });\n    _defineProperty(this, \"_gaCommandSendPageview\", function (page, fieldsObject) {\n      if (fieldsObject && Object.keys(fieldsObject).length) {\n        var _this$_toGtagOptions = _this._toGtagOptions(fieldsObject),\n          title = _this$_toGtagOptions.title,\n          location = _this$_toGtagOptions.location,\n          rest = _objectWithoutProperties(_this$_toGtagOptions, _excluded2);\n        _this._gtag(\"event\", \"page_view\", _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, page && {\n          page_path: page\n        }), title && {\n          page_title: title\n        }), location && {\n          page_location: location\n        }), rest));\n      } else if (page) {\n        _this._gtag(\"event\", \"page_view\", {\n          page_path: page\n        });\n      } else {\n        _this._gtag(\"event\", \"page_view\");\n      }\n    });\n    _defineProperty(this, \"_gaCommandSendPageviewParameters\", function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      if (typeof args[0] === \"string\") {\n        _this._gaCommandSendPageview.apply(_this, _toConsumableArray(args.slice(1)));\n      } else {\n        var _args$2 = args[0],\n          page = _args$2.page,\n          hitType = _args$2.hitType,\n          rest = _objectWithoutProperties(_args$2, _excluded3);\n        _this._gaCommandSendPageview(page, rest);\n      }\n    });\n    _defineProperty(this, \"_gaCommandSend\", function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      var hitType = typeof args[0] === \"string\" ? args[0] : args[0].hitType;\n      switch (hitType) {\n        case \"event\":\n          _this._gaCommandSendEventParameters.apply(_this, args);\n          break;\n        case \"pageview\":\n          _this._gaCommandSendPageviewParameters.apply(_this, args);\n          break;\n        case \"timing\":\n          _this._gaCommandSendTiming.apply(_this, _toConsumableArray(args.slice(1)));\n          break;\n        case \"screenview\":\n        case \"transaction\":\n        case \"item\":\n        case \"social\":\n        case \"exception\":\n          console.warn(\"Unsupported send command: \".concat(hitType));\n          break;\n        default:\n          console.warn(\"Send command doesn't exist: \".concat(hitType));\n      }\n    });\n    _defineProperty(this, \"_gaCommandSet\", function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      if (typeof args[0] === \"string\") {\n        args[0] = _defineProperty({}, args[0], args[1]);\n      }\n      _this._gtag(\"set\", _this._toGtagOptions(args[0]));\n    });\n    _defineProperty(this, \"_gaCommand\", function (command) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      switch (command) {\n        case \"send\":\n          _this._gaCommandSend.apply(_this, args);\n          break;\n        case \"set\":\n          _this._gaCommandSet.apply(_this, args);\n          break;\n        default:\n          console.warn(\"Command doesn't exist: \".concat(command));\n      }\n    });\n    _defineProperty(this, \"ga\", function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      if (typeof args[0] === \"string\") {\n        _this._gaCommand.apply(_this, args);\n      } else {\n        var readyCallback = args[0];\n        _this._gtag(\"get\", _this._currentMeasurementId, \"client_id\", function (clientId) {\n          _this._isQueuing = false;\n          var queues = _this._queueGtag;\n          readyCallback({\n            get: function get(property) {\n              return property === \"clientId\" ? clientId : property === \"trackingId\" ? _this._currentMeasurementId : property === \"apiVersion\" ? \"1\" : undefined;\n            }\n          });\n          while (queues.length) {\n            var queue = queues.shift();\n            _this._gtag.apply(_this, _toConsumableArray(queue));\n          }\n        });\n        _this._isQueuing = true;\n      }\n      return _this.ga;\n    });\n    _defineProperty(this, \"event\", function (optionsOrName, params) {\n      if (typeof optionsOrName === \"string\") {\n        _this._gtag(\"event\", optionsOrName, _this._toGtagOptions(params));\n      } else {\n        var action = optionsOrName.action,\n          category = optionsOrName.category,\n          label = optionsOrName.label,\n          value = optionsOrName.value,\n          nonInteraction = optionsOrName.nonInteraction,\n          transport = optionsOrName.transport;\n        if (!category || !action) {\n          console.warn(\"args.category AND args.action are required in event()\");\n          return;\n        }\n\n        // Required Fields\n        var fieldObject = {\n          hitType: \"event\",\n          eventCategory: (0, _format[\"default\"])(category),\n          eventAction: (0, _format[\"default\"])(action)\n        };\n\n        // Optional Fields\n        if (label) {\n          fieldObject.eventLabel = (0, _format[\"default\"])(label);\n        }\n        if (typeof value !== \"undefined\") {\n          if (typeof value !== \"number\") {\n            console.warn(\"Expected `args.value` arg to be a Number.\");\n          } else {\n            fieldObject.eventValue = value;\n          }\n        }\n        if (typeof nonInteraction !== \"undefined\") {\n          if (typeof nonInteraction !== \"boolean\") {\n            console.warn(\"`args.nonInteraction` must be a boolean.\");\n          } else {\n            fieldObject.nonInteraction = nonInteraction;\n          }\n        }\n        if (typeof transport !== \"undefined\") {\n          if (typeof transport !== \"string\") {\n            console.warn(\"`args.transport` must be a string.\");\n          } else {\n            if ([\"beacon\", \"xhr\", \"image\"].indexOf(transport) === -1) {\n              console.warn(\"`args.transport` must be either one of these values: `beacon`, `xhr` or `image`\");\n            }\n            fieldObject.transport = transport;\n          }\n        }\n        _this._gaCommand(\"send\", fieldObject);\n      }\n    });\n    _defineProperty(this, \"send\", function (fieldObject) {\n      _this._gaCommand(\"send\", fieldObject);\n    });\n    this.reset();\n  }\n  _createClass(GA4, [{\n    key: \"gtag\",\n    value: function gtag() {\n      this._gtag.apply(this, arguments);\n    }\n  }]);\n  return GA4;\n}();\nexports.GA4 = GA4;\nvar _default = new GA4();\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-ga4/dist/ga4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-ga4/dist/gtag.js":
/*!*********************************************!*\
  !*** ./node_modules/react-ga4/dist/gtag.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar gtag = function gtag() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (typeof window !== \"undefined\") {\n    var _window;\n    if (typeof window.gtag === \"undefined\") {\n      window.dataLayer = window.dataLayer || [];\n      window.gtag = function gtag() {\n        window.dataLayer.push(arguments);\n      };\n    }\n    (_window = window).gtag.apply(_window, args);\n  }\n};\nvar _default = gtag;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2E0L2Rpc3QvZ3RhZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBa0I7QUFDbEI7QUFDQSxzRUFBc0UsYUFBYTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2FtZXBsYXktcGxhbm5lci8uL25vZGVfbW9kdWxlcy9yZWFjdC1nYTQvZGlzdC9ndGFnLmpzPzU4ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcbnZhciBndGFnID0gZnVuY3Rpb24gZ3RhZygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBfd2luZG93O1xuICAgIGlmICh0eXBlb2Ygd2luZG93Lmd0YWcgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHdpbmRvdy5kYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdO1xuICAgICAgd2luZG93Lmd0YWcgPSBmdW5jdGlvbiBndGFnKCkge1xuICAgICAgICB3aW5kb3cuZGF0YUxheWVyLnB1c2goYXJndW1lbnRzKTtcbiAgICAgIH07XG4gICAgfVxuICAgIChfd2luZG93ID0gd2luZG93KS5ndGFnLmFwcGx5KF93aW5kb3csIGFyZ3MpO1xuICB9XG59O1xudmFyIF9kZWZhdWx0ID0gZ3RhZztcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-ga4/dist/gtag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-ga4/dist/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-ga4/dist/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.ReactGAImplementation = void 0;\nvar _ga = _interopRequireWildcard(__webpack_require__(/*! ./ga4 */ \"(ssr)/./node_modules/react-ga4/dist/ga4.js\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar ReactGAImplementation = _ga.GA4;\nexports.ReactGAImplementation = ReactGAImplementation;\nvar _default = _ga[\"default\"];\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZ2E0L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsd0JBQXdCLDJCQUEyQixzR0FBc0cscUJBQXFCLG1CQUFtQiw4SEFBOEg7QUFDL1QsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWtCLEdBQUcsNkJBQTZCO0FBQ2xELGtDQUFrQyxtQkFBTyxDQUFDLHlEQUFPO0FBQ2pELGlEQUFpRCxnREFBZ0QsdUNBQXVDLHNDQUFzQyxvRkFBb0YsNERBQTREO0FBQzlULHFEQUFxRCw2Q0FBNkMsY0FBYyw4RUFBOEUsU0FBUyxvQkFBb0IsbURBQW1ELCtCQUErQix5QkFBeUIsaUJBQWlCLHNGQUFzRix1QkFBdUIsMkVBQTJFLHFGQUFxRixzQ0FBc0MsNENBQTRDLE9BQU8sOEJBQThCLHlCQUF5QixhQUFhLDBCQUEwQjtBQUMzeEI7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYW1lcGxheS1wbGFubmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWdhNC9kaXN0L2luZGV4LmpzPzUwZGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9LCBfdHlwZW9mKG9iaik7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGV4cG9ydHMuUmVhY3RHQUltcGxlbWVudGF0aW9uID0gdm9pZCAwO1xudmFyIF9nYSA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL2dhNFwiKSk7XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpOyB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7IHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDsgfSkobm9kZUludGVyb3ApOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7IGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gaWYgKG9iaiA9PT0gbnVsbCB8fCBfdHlwZW9mKG9iaikgIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7IHJldHVybiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfSB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApOyBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHsgcmV0dXJuIGNhY2hlLmdldChvYmopOyB9IHZhciBuZXdPYmogPSB7fTsgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqW1wiZGVmYXVsdFwiXSA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfVxudmFyIFJlYWN0R0FJbXBsZW1lbnRhdGlvbiA9IF9nYS5HQTQ7XG5leHBvcnRzLlJlYWN0R0FJbXBsZW1lbnRhdGlvbiA9IFJlYWN0R0FJbXBsZW1lbnRhdGlvbjtcbnZhciBfZGVmYXVsdCA9IF9nYVtcImRlZmF1bHRcIl07XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-ga4/dist/index.js\n");

/***/ })

};
;