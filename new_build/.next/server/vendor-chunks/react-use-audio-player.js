"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-use-audio-player";
exports.ids = ["vendor-chunks/react-use-audio-player"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-use-audio-player/dist/react-use-audio-player.esm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/react-use-audio-player/dist/react-use-audio-player.esm.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAudioPlayer: () => (/* binding */ useAudioPlayer),\n/* harmony export */   useGlobalAudioPlayer: () => (/* binding */ useGlobalAudioPlayer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var howler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! howler */ \"(ssr)/./node_modules/howler/dist/howler.js\");\n/* harmony import */ var howler__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(howler__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nvar ActionTypes;\n(function (ActionTypes) {\n  ActionTypes[\"START_LOAD\"] = \"START_LOAD\";\n  ActionTypes[\"ON_LOAD\"] = \"ON_LOAD\";\n  ActionTypes[\"ON_ERROR\"] = \"ON_ERROR\";\n  ActionTypes[\"ON_PLAY\"] = \"ON_PLAY\";\n  ActionTypes[\"ON_PAUSE\"] = \"ON_PAUSE\";\n  ActionTypes[\"ON_STOP\"] = \"ON_STOP\";\n  ActionTypes[\"ON_END\"] = \"ON_END\";\n  ActionTypes[\"ON_RATE\"] = \"ON_RATE\";\n  ActionTypes[\"ON_MUTE\"] = \"ON_MUTE\";\n  ActionTypes[\"ON_VOLUME\"] = \"ON_VOLUME\";\n  ActionTypes[\"ON_LOOP\"] = \"ON_LOOP\";\n})(ActionTypes || (ActionTypes = {}));\nfunction initStateFromHowl(howl) {\n  if (howl === undefined) {\n    return {\n      src: null,\n      isReady: false,\n      isLoading: false,\n      looping: false,\n      duration: 0,\n      rate: 1,\n      volume: 1,\n      muted: false,\n      playing: false,\n      paused: false,\n      stopped: false,\n      error: null\n    };\n  }\n  var position = howl.seek();\n  var playing = howl.playing();\n  return {\n    isReady: howl.state() === \"loaded\",\n    isLoading: howl.state() === \"loading\",\n    // @ts-ignore _src exists\n    src: howl._src,\n    looping: howl.loop(),\n    duration: howl.duration(),\n    rate: howl.rate(),\n    volume: howl.volume(),\n    muted: howl.mute(),\n    playing: playing,\n    paused: !playing,\n    stopped: !playing && position === 0,\n    error: null\n  };\n}\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ActionTypes.START_LOAD:\n      return _extends({}, initStateFromHowl(), {\n        isLoading: true\n      });\n    case ActionTypes.ON_LOAD:\n      // in React 18 there is a weird race condition where ON_LOAD receives a Howl object that has been unloaded\n      // if we detect this case just return the existing state to wait for another action\n      if (action.howl.state() === \"unloaded\") {\n        return state;\n      }\n      return initStateFromHowl(action.howl);\n    case ActionTypes.ON_ERROR:\n      return _extends({}, initStateFromHowl(), {\n        error: action.message\n      });\n    case ActionTypes.ON_PLAY:\n      return _extends({}, state, {\n        playing: true,\n        paused: false,\n        stopped: false\n      });\n    case ActionTypes.ON_PAUSE:\n      return _extends({}, state, {\n        playing: false,\n        paused: true\n      });\n    case ActionTypes.ON_STOP:\n      {\n        return _extends({}, state, {\n          playing: false,\n          paused: false,\n          stopped: true\n        });\n      }\n    case ActionTypes.ON_END:\n      {\n        return _extends({}, state, {\n          playing: state.looping,\n          stopped: !state.looping\n        });\n      }\n    case ActionTypes.ON_MUTE:\n      {\n        var _action$howl$mute;\n        return _extends({}, state, {\n          muted: (_action$howl$mute = action.howl.mute()) !== null && _action$howl$mute !== void 0 ? _action$howl$mute : false\n        });\n      }\n    case ActionTypes.ON_RATE:\n      {\n        var _action$howl$rate, _action$howl;\n        return _extends({}, state, {\n          rate: (_action$howl$rate = (_action$howl = action.howl) === null || _action$howl === void 0 ? void 0 : _action$howl.rate()) !== null && _action$howl$rate !== void 0 ? _action$howl$rate : 1.0\n        });\n      }\n    case ActionTypes.ON_VOLUME:\n      {\n        var _action$howl$volume, _action$howl2;\n        return _extends({}, state, {\n          volume: (_action$howl$volume = (_action$howl2 = action.howl) === null || _action$howl2 === void 0 ? void 0 : _action$howl2.volume()) !== null && _action$howl$volume !== void 0 ? _action$howl$volume : 1.0\n        });\n      }\n    case ActionTypes.ON_LOOP:\n      {\n        var _action$toggleValue = action.toggleValue,\n          toggleValue = _action$toggleValue === void 0 ? false : _action$toggleValue,\n          howl = action.howl;\n        howl.loop(toggleValue);\n        return _extends({}, state, {\n          looping: toggleValue\n        });\n      }\n    default:\n      return state;\n  }\n}\n\nfunction useHowlEventSync(howlManager, _ref) {\n  var state = _ref[0],\n    dispatch = _ref[1];\n  var onLoad = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.getHowl();\n    if (howl === undefined) return;\n    dispatch({\n      type: ActionTypes.ON_LOAD,\n      howl: howl\n    });\n  }, [dispatch, howlManager]);\n  var onError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_, errorCode) {\n    dispatch({\n      type: ActionTypes.ON_ERROR,\n      message: errorCode\n    });\n  }, [dispatch]);\n  var onPlay = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.getHowl();\n    // TODO since this is the sync layer i should really extract the info from the howl here and pass that in with the action payload\n    if (howl === undefined) return;\n    dispatch({\n      type: ActionTypes.ON_PLAY,\n      howl: howl\n    });\n  }, [dispatch, howlManager]);\n  var onPause = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.getHowl();\n    if (howl === undefined) return;\n    dispatch({\n      type: ActionTypes.ON_PAUSE,\n      howl: howl\n    });\n  }, [dispatch, howlManager]);\n  var onEnd = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.getHowl();\n    if (howl === undefined) return;\n    dispatch({\n      type: ActionTypes.ON_END,\n      howl: howl\n    });\n  }, [dispatch, howlManager]);\n  var onStop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.getHowl();\n    if (howl === undefined) return;\n    dispatch({\n      type: ActionTypes.ON_STOP,\n      howl: howl\n    });\n  }, [dispatch, howlManager]);\n  var onMute = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.getHowl();\n    if (howl === undefined) return;\n    dispatch({\n      type: ActionTypes.ON_MUTE,\n      howl: howl\n    });\n  }, [dispatch, howlManager]);\n  var onVolume = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.getHowl();\n    if (howl === undefined) return;\n    dispatch({\n      type: ActionTypes.ON_VOLUME,\n      howl: howl\n    });\n  }, [dispatch, howlManager]);\n  var onRate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.getHowl();\n    if (howl === undefined) return;\n    dispatch({\n      type: ActionTypes.ON_RATE,\n      howl: howl\n    });\n  }, [dispatch, howlManager]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    return function () {\n      var howl = howlManager.getHowl();\n      // howl?.off(\"load\", onLoad)\n      howl === null || howl === void 0 ? void 0 : howl.off(\"loaderror\", onError);\n      howl === null || howl === void 0 ? void 0 : howl.off(\"playerror\", onError);\n      howl === null || howl === void 0 ? void 0 : howl.off(\"play\", onPlay);\n      howl === null || howl === void 0 ? void 0 : howl.off(\"pause\", onPause);\n      howl === null || howl === void 0 ? void 0 : howl.off(\"end\", onEnd);\n      howl === null || howl === void 0 ? void 0 : howl.off(\"stop\", onStop);\n      howl === null || howl === void 0 ? void 0 : howl.off(\"mute\", onMute);\n      howl === null || howl === void 0 ? void 0 : howl.off(\"volume\", onVolume);\n      howl === null || howl === void 0 ? void 0 : howl.off(\"rate\", onRate);\n    };\n  }, []);\n  // using ref bc we don't want identity of dispatch function to change\n  // see talk: https://youtu.be/nUzLlHFVXx0?t=1558\n  var wrappedDispatch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(function (action) {\n    if (action.type === ActionTypes.START_LOAD) {\n      var howl = action.howl;\n      // set up event listening\n      howl.once(\"load\", onLoad);\n      howl.on(\"loaderror\", onError);\n      howl.on(\"playerror\", onError);\n      howl.on(\"play\", onPlay);\n      howl.on(\"pause\", onPause);\n      howl.on(\"end\", onEnd);\n      howl.on(\"stop\", onStop);\n      howl.on(\"mute\", onMute);\n      howl.on(\"volume\", onVolume);\n      howl.on(\"rate\", onRate);\n    }\n    dispatch(action);\n  });\n  return [state, wrappedDispatch.current];\n}\n\nvar _excluded = [\"initialVolume\", \"initialRate\", \"initialMute\"];\nvar HowlInstanceManager = /*#__PURE__*/function () {\n  function HowlInstanceManager() {\n    this.callbacks = new Map();\n    this.howl = undefined;\n    this.options = {};\n    this.subscriptionIndex = 0;\n  }\n  var _proto = HowlInstanceManager.prototype;\n  _proto.subscribe = function subscribe(cb) {\n    var id = (this.subscriptionIndex++).toString();\n    this.callbacks.set(id, cb);\n    return id;\n  };\n  _proto.unsubscribe = function unsubscribe(subscriptionId) {\n    this.callbacks[\"delete\"](subscriptionId);\n  };\n  _proto.getHowl = function getHowl() {\n    return this.howl;\n  };\n  _proto.getNumberOfConnections = function getNumberOfConnections() {\n    return this.callbacks.size;\n  };\n  _proto.createHowl = function createHowl(options) {\n    this.destroyHowl();\n    this.options = options;\n    var _this$options = this.options,\n      initialVolume = _this$options.initialVolume,\n      initialRate = _this$options.initialRate,\n      initialMute = _this$options.initialMute,\n      rest = _objectWithoutPropertiesLoose(_this$options, _excluded);\n    var newHowl = new howler__WEBPACK_IMPORTED_MODULE_1__.Howl(_extends({\n      mute: initialMute,\n      volume: initialVolume,\n      rate: initialRate\n    }, rest));\n    this.callbacks.forEach(function (cb) {\n      return cb({\n        type: ActionTypes.START_LOAD,\n        howl: newHowl\n      });\n    });\n    this.howl = newHowl;\n    return newHowl;\n  };\n  _proto.destroyHowl = function destroyHowl() {\n    var _this$howl6;\n    if (this.options.onload) {\n      var _this$howl;\n      (_this$howl = this.howl) === null || _this$howl === void 0 ? void 0 : _this$howl.off(\"load\", this.options.onload);\n    }\n    if (this.options.onend) {\n      var _this$howl2;\n      (_this$howl2 = this.howl) === null || _this$howl2 === void 0 ? void 0 : _this$howl2.off(\"end\", this.options.onend);\n    }\n    if (this.options.onplay) {\n      var _this$howl3;\n      (_this$howl3 = this.howl) === null || _this$howl3 === void 0 ? void 0 : _this$howl3.off(\"play\", this.options.onplay);\n    }\n    if (this.options.onpause) {\n      var _this$howl4;\n      (_this$howl4 = this.howl) === null || _this$howl4 === void 0 ? void 0 : _this$howl4.off(\"pause\", this.options.onpause);\n    }\n    if (this.options.onstop) {\n      var _this$howl5;\n      (_this$howl5 = this.howl) === null || _this$howl5 === void 0 ? void 0 : _this$howl5.off(\"stop\", this.options.onstop);\n    }\n    (_this$howl6 = this.howl) === null || _this$howl6 === void 0 ? void 0 : _this$howl6.unload();\n  };\n  _proto.broadcast = function broadcast(action) {\n    this.callbacks.forEach(function (cb) {\n      return cb(action);\n    });\n  };\n  return HowlInstanceManager;\n}();\nvar HowlInstanceManagerSingleton = /*#__PURE__*/function () {\n  function HowlInstanceManagerSingleton() {}\n  HowlInstanceManagerSingleton.getInstance = function getInstance() {\n    if (this.instance === undefined) {\n      HowlInstanceManagerSingleton.instance = new HowlInstanceManager();\n    }\n    return HowlInstanceManagerSingleton.instance;\n  };\n  return HowlInstanceManagerSingleton;\n}();\nHowlInstanceManagerSingleton.instance = void 0;\n\nvar useAudioPlayer = function useAudioPlayer() {\n  var howlManager = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  function getHowlManager() {\n    if (howlManager.current !== null) {\n      return howlManager.current;\n    }\n    var manager = new HowlInstanceManager();\n    howlManager.current = manager;\n    return manager;\n  }\n  var _useHowlEventSync = useHowlEventSync(getHowlManager(), (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, getHowlManager().getHowl(), initStateFromHowl)),\n    state = _useHowlEventSync[0],\n    dispatch = _useHowlEventSync[1];\n  var load = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var src = _ref[0],\n      _ref$ = _ref[1],\n      options = _ref$ === void 0 ? {} : _ref$;\n    // TODO investigate: if we try to avoid loading the same sound (existing howl & same src in call)\n    // then there are some bugs like in the MultipleSounds demo, the \"play\" button will not switch to \"pause\"\n    var howl = getHowlManager().createHowl(_extends({\n      src: src\n    }, options));\n    dispatch({\n      type: ActionTypes.START_LOAD,\n      howl: howl\n    });\n  }, []);\n  var seek = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (seconds) {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.seek(seconds);\n  }, []);\n  var getPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var _howl$seek;\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return 0;\n    }\n    return (_howl$seek = howl.seek()) !== null && _howl$seek !== void 0 ? _howl$seek : 0;\n  }, []);\n  var play = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.play();\n  }, []);\n  var pause = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.pause();\n  }, []);\n  var togglePlayPause = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    if (state.playing) {\n      howl.pause();\n    } else {\n      howl.play();\n    }\n  }, [state]);\n  var stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.stop();\n  }, []);\n  var fade = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (from, to, duration) {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.fade(from, to, duration);\n  }, []);\n  var setRate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (speed) {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.rate(speed);\n  }, []);\n  var setVolume = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (vol) {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.volume(vol);\n  }, []);\n  var mute = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (muteOnOff) {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.mute(muteOnOff);\n  }, []);\n  var loop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (loopOnOff) {\n    var howl = getHowlManager().getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    // this differs from the implementation in useGlobalAudioPlayer which needs to broadcast the action to itself and all other instances of the hook\n    // maybe these two behaviors could be abstracted with one interface in the future\n    dispatch({\n      type: ActionTypes.ON_LOOP,\n      howl: howl,\n      toggleValue: loopOnOff\n    });\n  }, []);\n  var cleanup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var _getHowlManager;\n    (_getHowlManager = getHowlManager()) === null || _getHowlManager === void 0 ? void 0 : _getHowlManager.destroyHowl();\n  }, []);\n  return _extends({}, state, {\n    load: load,\n    seek: seek,\n    getPosition: getPosition,\n    play: play,\n    pause: pause,\n    togglePlayPause: togglePlayPause,\n    stop: stop,\n    mute: mute,\n    fade: fade,\n    setRate: setRate,\n    setVolume: setVolume,\n    loop: loop,\n    cleanup: cleanup\n  });\n};\n\nfunction useGlobalAudioPlayer() {\n  var howlManager = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(HowlInstanceManagerSingleton.getInstance());\n  var _useHowlEventSync = useHowlEventSync(howlManager.current, (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, howlManager.current.getHowl(), initStateFromHowl)),\n    state = _useHowlEventSync[0],\n    dispatch = _useHowlEventSync[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var howlOnMount = howlManager.current.getHowl();\n    if (howlOnMount !== undefined) {\n      dispatch({\n        type: ActionTypes.START_LOAD,\n        howl: howlOnMount\n      });\n      if (howlOnMount.state() === \"loaded\") {\n        dispatch({\n          type: ActionTypes.ON_LOAD,\n          howl: howlOnMount\n        });\n      }\n    }\n    function sync(action) {\n      dispatch(action);\n    }\n    var subscriptionId = howlManager.current.subscribe(sync);\n    return function () {\n      howlManager.current.unsubscribe(subscriptionId);\n    };\n  }, []);\n  var load = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var src = _ref[0],\n      _ref$ = _ref[1],\n      options = _ref$ === void 0 ? {} : _ref$;\n    // the HowlInstanceManager will intercept this newly created howl and broadcast it to registered hooks\n    howlManager.current.createHowl(_extends({\n      src: src\n    }, options));\n  }, []);\n  var seek = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (seconds) {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.seek(seconds);\n  }, []);\n  var getPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var _howl$seek;\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return 0;\n    }\n    return (_howl$seek = howl.seek()) !== null && _howl$seek !== void 0 ? _howl$seek : 0;\n  }, []);\n  var play = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.play();\n  }, []);\n  var pause = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.pause();\n  }, []);\n  var togglePlayPause = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    if (state.playing) {\n      howl.pause();\n    } else {\n      howl.play();\n    }\n  }, [state]);\n  var stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.stop();\n  }, []);\n  var fade = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (from, to, duration) {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.fade(from, to, duration);\n  }, []);\n  var setRate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (speed) {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.rate(speed);\n  }, []);\n  var setVolume = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (vol) {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.volume(vol);\n  }, []);\n  var mute = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (muteOnOff) {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howl.mute(muteOnOff);\n  }, []);\n  var loop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (loopOnOff) {\n    var howl = howlManager.current.getHowl();\n    if (howl === undefined) {\n      return;\n    }\n    howlManager.current.broadcast({\n      type: ActionTypes.ON_LOOP,\n      howl: howl,\n      toggleValue: loopOnOff\n    });\n  }, []);\n  return _extends({}, state, {\n    load: load,\n    seek: seek,\n    getPosition: getPosition,\n    play: play,\n    pause: pause,\n    togglePlayPause: togglePlayPause,\n    stop: stop,\n    mute: mute,\n    fade: fade,\n    setRate: setRate,\n    setVolume: setVolume,\n    loop: loop\n  });\n}\n\n\n//# sourceMappingURL=react-use-audio-player.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-use-audio-player/dist/react-use-audio-player.esm.js\n");

/***/ })

};
;