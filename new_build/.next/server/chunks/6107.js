"use strict";exports.id=6107,exports.ids=[6107],exports.modules={51023:(e,t,a)=>{a.d(t,{Z:()=>s});var l=a(5492);let s={EXP_DMG_MOD:.1,EXP_TIME_MOD:.05,SYNERGY_MOD_STEP:.25,EXP_TOKEN_MOD:.05,SOUL_CLOVER_STEP:.25,calculatePetBaseDamage:function(e,t){let a=t||e?.Rank,l=e?.BaseDungeonDamage*(1+.05*a);return Number(l)},calculateBestHours:function(e,t,a,l){let s;a?.residueToken&&a.residueToken;let i=a.data.ExpeditionTokenBonuses*a.data.ExpeditionResourceBonuses;t||(t=[1,2,3,4,5,6,7,8,9,10,11,12]),s||(s=a?.clover?a.clover:0),l||(l=1);let n=this.calculateGroupScore(e),o=n.tokenMult*i*l,r=[];for(let e=0;e<t.length;e++){let a=t[e],l=o+1/3600*o,s=Math.floor(l),i=s/l,n=l-s,u={wastedHR:n/a,tokenHR:o+1/3600*o,wasted:n,hours:a,totalTokens:l,floored:s,effeciency:i};r.push(u)}return r},calculateGroupScore:function(e,t){let a=0,l=0,s=0,i=0,n=0,o=0,r=0,u=0,c=0,h=0,m=0,p=0,g={},D=0;e.forEach(e=>{a+=this.calculatePetBaseDamage(e,t),D+=this.calculatePetBaseDamage(e,0),e.BonusList.some(e=>1013===e.ID)&&l++,e.BonusList.some(e=>1010===e.ID)&&o++,e.BonusList.some(e=>1011===e.ID)&&r++,e.BonusList.some(e=>1014===e.ID)&&c++,e.BonusList.some(e=>1012===e.ID)&&s++,e.BonusList.some(e=>1015===e.ID)&&u++,e.BonusList.some(e=>1016===e.ID)&&h++,g[e.Type]?g[e.Type]++:g[e.Type]=1,e.ID&&(i+=this.SYNERGY_MOD_STEP)}),n=a;let[d,b]=Object.values(g);return d>0&&b>0&&(i+=this.SYNERGY_MOD_STEP),d>1&&b>1&&(i+=this.SYNERGY_MOD_STEP),a*=1+l*this.EXP_DMG_MOD,D*=1+l*this.EXP_DMG_MOD,a*=1+s*this.EXP_TIME_MOD,D*=1+s*this.EXP_TIME_MOD,a*=i,D*=i,p=h*this.EXP_TOKEN_MOD,m=i+i*p,{groupScore:a,baseGroupScore:n,groupScoreMax:D,dmgCount:l,timeCount:s,synergyBonus:i,cardPowerCount:o,expRewardCount:r,cardXpCount:c,rpRewardCount:u,tokenRewardCount:h,tokenModif:p,tokenMult:m}},getBestDamagePets:function(e,t,a){let l={},s=JSON.parse(JSON.stringify(e)),i=[],n=[],updateStrongest=e=>{1===e.Type?0===i.length?i.push(e):1===i.length?this.calculatePetBaseDamage(i[0],t)<this.calculatePetBaseDamage(e,t)?(i[1]=i[0],i[0]=e):i[1]=e:this.calculatePetBaseDamage(i[0],t)<this.calculatePetBaseDamage(e,t)?(i[1]=i[0],i[0]=e):this.calculatePetBaseDamage(i[1],t)<this.calculatePetBaseDamage(e,t)&&(i[1]=e):2===e.Type&&(0===n.length?n.push(e):1===n.length?this.calculatePetBaseDamage(n[0],t)<this.calculatePetBaseDamage(e,t)?(n[1]=n[0],n[0]=e):n[1]=e:this.calculatePetBaseDamage(n[0],t)<this.calculatePetBaseDamage(e,t)?(n[1]=n[0],n[0]=e):this.calculatePetBaseDamage(n[1],t)<this.calculatePetBaseDamage(e,t)&&(n[1]=e))},o=[],r={},u=0,c=0;if(a&&a.requiredPets)for(let e=0;e<a.requiredPets.length;e++)r[a.requiredPets[e].ID]=a.requiredPets[e];for(let e=0;e<s.length;e++){let t=s[e],a=!1;for(let e=0;e<t.BonusList.length;e++){let s=t.BonusList[e];t.ID in r?(l[t.ID]=t,a=!0):1013!==s.ID||l[t.ID]||(l[t.ID]=t,a=!0),1012!==s.ID||l[t.ID]||(l[t.ID]=t,a=!0)}a?updateStrongest(t):(o.push(t),1===t.Type?c++:u++)}let h=n.length,m=i.length,p=n.concat(i);for(let e=0;e<p;e++)l[pet.ID]=p[e];let g=2,D=2;m+c<2&&(D+=2-(m+c)),h+u<2&&(g+=2-(h+u));let d=!1,b=!1;for(let e=0;e<o.length;e++){let a=o[e],l=this.calculatePetBaseDamage(a,t);if(1===a.Type){if(i.length<g)i.push(a),d=!0;else for(let e=0;e<i.length;e++){let s=i[e];if(l>this.calculatePetBaseDamage(s,t)){i[e]=a,d=!0;break}}}else if(n.length<D)n.push(a),b=!0;else for(let e=0;e<n.length;e++){let s=n[e];if(l>this.calculatePetBaseDamage(s,t)){n[e]=a,b=!0;break}}d&&(d=!1,i.sort((e,a)=>this.calculatePetBaseDamage(e,t)-this.calculatePetBaseDamage(a,t))),b&&(b=!1,n.sort((e,a)=>this.calculatePetBaseDamage(e,t)-this.calculatePetBaseDamage(a,t)))}p=n.concat(i);for(let e=0;e<p.length;e++)l[p[e].ID]=p[e];let I=Object.values(l);return I.sort((e,t)=>t.ID-e.ID),I},calcBestDamageGroup:function(e,t,a,l){a=Number(a=a||7);let s={},i={},n={};l=JSON.parse(JSON.stringify(l));for(let t=0;t<e.length;t++)n[e[t].ID]=JSON.parse(JSON.stringify(e[t]));let o=l?.activeBonuses;o||(o=[]);let memoizedGroupScore=e=>{let a=e.ID;if(!s[a]||s[a]){let l=this.calculateGroupScore(e.team,t),i=l.tokenMult;s[a]={token:i,damage:l.groupScore,other:l}}return s[a]},r={},u={},c={},h={},m={},p=[];for(let e=0;e<a;e++)p.push([]);if(l?.petWhiteList){for(let e=0;e<l.petWhiteList.length;e++){let t=l.petWhiteList[e];"blacklist"===t.placement?r[t.id]=t:"team"===t.placement?p[t.parameters.team]&&(u[t.id]=t,h[t.id]=t,p[t.parameters.team].push(t)):"rel"===t.placement&&(c[t.id]=t)}for(let e=0;e<l.petWhiteList.length;e++){let t=l.petWhiteList[e];if("auto"===t.placement)for(let e=a-1;e>=0;e--){let a=0,l=0;if(p[e].forEach(e=>{1===e.pet.Type&&a++,2===e.pet.Type&&l++}),(1!==t.pet.Type||!(a>1))&&(2!==t.pet.Type||!(l>1))&&p[e].length<4){t.auto=!0,t.parameters.team=e,t.placement="team",u[t.id]=t,p[e].push(t),m[t.id]=t;break}}}}let getCombinationsInner=(e,t,a)=>{let l=-1,s=0,i=0;e.forEach(e=>{1===e.Type?i++:s++});let n=!0;s>1&&i>1&&(n=!1);let o={},r={},u={},c={};for(let e=0;e<a.length;e++){let t=a[e];"team"!==t.placement||(t.parameters.fake?2!==t.pet.Type||u[t.pet.ID]?c[t.pet.ID]||(c[t.pet.ID]=!0):u[t.pet.ID]=!0:1!==t.pet.Type||r[t.pet.ID]?r[t.pet.ID]||(o[t.pet.ID]=!0):r[t.pet.ID]=!0)}let f=(s,i)=>{if(i.length>0){let e=!0,t=0,s=0,h=0,m=0,p=0,g=0;for(let e=0;e<i.length;e++){let t=i[e];1===t.Type?p++:g++,1===t.Type&&c[t.ID]?m++:u[t.ID]&&h++}let D=Object.entries(o).length,d=Object.entries(r).length,b=Object.entries(u).length,I=Object.entries(c).length,M=2>D?2-D:0,P=2>d?2-d:0,E=0;if(b>0){let t=b<M?b:M;h>M?e=!1:h!==t?e=!1:E+=t}if(I>0){let t=I<P?I:P;m>P?e=!1:m!==t?e=!1:E+=t}let k=d>2?d-2:0;if((g>2+(D>2?D-2:0)||p>2+k)&&!n&&(e=!1),e){a.length;for(let l=0;l<a.length;l++){let n=a[l],o=!1;if("team"===n.placement){let a=0;for(let e=0;e<i.length;e++){let l=i[e];l.ID===n.pet.ID&&(n.parameters.fake?t++:(s++,1===l.Type?d++:D++),a++)}if(a>0)o=!0;else if(!n.parameters.fake){e=!1,o=!1;break}}else if(n.requiredNumber>0){let t=0;for(let e=0;e<i.length;e++)i[e].BonusList.find(e=>e.ID===n.bonus.id)&&(t++,s++);if(t>=n.requiredNumber)o=!0;else{e=!1,o=!1;break}}else if(n.exactNumber>-1){let t=0;for(let e=0;e<i.length;e++)i[e].BonusList.find(e=>e.ID===n.bonus.id)&&(t++,s++);if(t===n.exactNumber)o=!0;else{e=!1,o=!1;break}}else if("rel"===n.bonus.placement){let a=0;for(let e=0;e<i.length;e++)i[e].BonusList.find(e=>e.ID===n.bonus.id)&&(a++,t++);if(a<=n.bonus.amount){if(n.tempRequired>0){if(n.bonus.amount<n.tempRequired&&a===n.bonus.amount||a>=n.tempRequired)o=!0;else{e=!1,o=!1;break}}else o=!0}else{e=!1,o=!1;break}}else n.placement;if(n.tempMax||0===n.tempMax&&!n.disabled&&void 0!==n.disabled){let t=0;for(let e=0;e<i.length;e++){let a=i[e];n.pets.find(e=>e.ID===a.ID)&&t++}if(t<=n.tempMax)o=!0;else{e=!1,o=!1;break}}o&&n.passed++}if(E>0&&e&&(E+s>4&&(E=4-s),e=!(t<E)),e){let e="";for(let t=0;t<i.length;t++)e+=i[t].ID,t+1!==i.length&&(e+=",");let t={ID:e,team:i};if(-1===l)l={ID:e,team:i,score:memoizedGroupScore(t)};else{let a=memoizedGroupScore(t);a.damage===l.score.damage?a.token>l.score.token&&(l={ID:e,team:i,score:a}):a.damage>l.score.damage&&(l={ID:e,team:i,score:a})}}}}if(i.length!==t)for(let t=s;t<e.length;t++)f(t+1,[...i,e[t]])};return f(0,[]),l.team&&l.team.sort((e,t)=>e.Type===t.Type?e.ID-t.ID:e.Type-t.Type),l},g=new Date,D=new Date,d=new Date,b=new Date,I=[],M=e.filter(e=>(e.ID in u&&(u[e.ID].pet=e),!(e.ID in r)&&!(e.ID in u)));for(let e=0;e<a;e++){let l=a-e,s=[],h={},m={},p=[];for(let[t,a]of Object.entries(u))if(a.parameters.team===e){if(!n[a.pet.ID])continue;p.push(a),M.push(a.pet),s.push(a.pet)}if(o.length>0){for(let e=0;e<o.length;e++)h[o[e].id]=o[e],m[o[e].id]={bonus:o[e],pets:[],active:!0};M.forEach(e=>{e.ID in r||e.BonusList.forEach(t=>{t.ID in h&&("top"===h[t.ID].placement&&s.push(e),m[t.ID].pets.push(e))})});for(let t=0;t<o.length;t++){let a=m[o[t].id];if("bottom"===a.bonus.placement){let t,i=a.pets.length,n=0,o=!1,r=0;switch(a.bonus.equation){case"min":i<a.bonus.amount?(t=0,o=!0):(i<=l*a.bonus.amount&&(r=a.bonus.amount),t=i%a.bonus.amount,i-=t,n=i>=0?Math.ceil(i/a.bonus.amount):0);break;case"max":break;case"eq":i<a.bonus.amount?(t=0,o=!0):(i<=l*a.bonus.amount&&(r=a.bonus.amount),t=i%a.bonus.amount,i-=t,n=a.pets.length>=a.bonus.amount?Math.ceil(i/a.bonus.amount):0)}if(l<=n)m[a.bonus.id].tempMax=r,a.pets.forEach(e=>{s.push(e)});else{let l=[];for(let t=0;t<m[a.bonus.id].pets.length;t++){let s=m[a.bonus.id].pets[t];s.ID in u&&"team"===u[s.ID].placement&&u[s.ID].parameters.team===e||l.push(s)}m[a.bonus.id].pets=l,m[a.bonus.id].active=!1,m[a.bonus.id].tempMax=t,m[a.bonus.id].disabled=o}}else if("top"===a.bonus.placement){let e=a.pets.length,t=0;e<=l*a.bonus.amount&&(t=a.bonus.amount),m[a.bonus.id].tempMax=t}}for(let e=0;e<o.length;e++){let t=m[o[e].id];if(!t.active)continue;let a=0,l=-1;switch(t.hardFail=!1,t.bonus.equation){case"min":t.bonus.amount>t.pets.length?(a=0,t.hardFail=!0):a=t.bonus.amount;break;case"max":break;case"eq":t.bonus.amount>t.pets.length?(l=-1,t.hardFail=!0):l=t.bonus.amount}t.requiredNumber=a,t.exactNumber=l}}let d=this.getBestDamagePets(M,t,{requiredPets:s});for(let[e,t]of Object.entries(m))t.passed=0;g=new Date;let b=!1,P=!1,E=Object.values(m);for(let e=0;e<p.length;e++)E.push(p[e]);let k=getCombinationsInner(d,Math.min(4,d.length),E);if(D=new Date,console.log(`time to get combinations ${k.length}: ${(D-g)/1e3} seconds`),-1===k&&p.length>0){E=[];for(let e=0;e<p.length;e++)E.push(p[e]);-1===(k=getCombinationsInner(d,Math.min(4,d.length),E))?P=!0:b=!0}for(let[t,a]of(-1===k&&(P=!0),Object.entries(m)))if(!(t in i)&&(!a.passed||a.hardFail)){let l=`Filter failed on group ${e+1}:
`;switch(a.bonus.equation){case"min":l+=`not enough pets, min ${a.bonus.amount} but ${a.pets.length} remain`;break;case"max":break;case"eq":l+=`not enough pets, req. ${a.bonus.amount} but ${a.pets.length} remain`;break;default:throw Error("impossible case")}i[t]=l}if(P){!(Object.values(m).length>0)||"generic"in i||(i.generic=`Individual filters all succeeded, but the combination of all is impossible starting group ${e+1}`);break}if(b){I.push(k.team);for(let e=0;e<k.team.length;e++)k.team[e].ID in c&&delete c[k.team[e].ID];M=M.filter(e=>{let t=!0;for(let a=0;a<k.team.length;a++)if(k.team[a].ID===e.ID){t=!1;break}return t})}else{let a=this.calculateGroupScore(k.team,t),l=a.groupScore,s=Object.values(c);if(o.length>0||s.length>0){let r=!1;for(let i=0;i<s.length;i++){let o=s[i],u=o.parameters.damageBias/100,c=l*u,h=k.team.length,m=0,g=n[o.id],D=this.calculatePetBaseDamage(g,t);if(g&&(g.BonusList.forEach(e=>{let l=0;1013===e.ID?(D*=1+this.EXP_DMG_MOD,h>1?l+=a.baseGroupScore/h*(h-1)*u*this.EXP_DMG_MOD:l=a.baseGroupScore*u*this.EXP_DMG_MOD,m+=l):1012===e.ID&&(D*=1+this.EXP_TIME_MOD,h>1?l+=3*this.calculatePetBaseDamage(g,t)*u*this.EXP_TIME_MOD:l=a.baseGroupScore*u*this.EXP_TIME_MOD,m+=l)}),(D+=m)>c)){r=!0;let t=JSON.parse(JSON.stringify(o));t.placement="team",t.parameters.team=e,t.pet=g,t.parameters.fake=!0,p.push(t),d.find(e=>e.ID===g.ID)||d.push(g)}}for(let e=0;e<o.length;e++){let s=o[e],i=s.relThresh/100,n=l*i,u=!1,c=m[s.id];"rel"!==s.placement||(c.pets.forEach(e=>{let l=this.calculatePetBaseDamage(e,t),s=k.team.length,o=0;e.BonusList.forEach(e=>{let t=0;1013===e.ID?(l*=1+this.EXP_DMG_MOD,s>1?t+=a.baseGroupScore/s*(s-1)*i*this.EXP_DMG_MOD:t=a.baseGroupScore*i*this.EXP_DMG_MOD,o+=t):1012===e.ID&&(l*=1+this.EXP_TIME_MOD,s>1?t+=a.baseGroupScore/s*(s-1)*i*this.EXP_TIME_MOD:t=a.baseGroupScore*i*this.EXP_TIME_MOD,o+=t)}),(l+=o)>n&&(r=!0,u=!0,c.active=!0,c.tempMin=!0,c.tempRequired=0!==c.tempRequired&&c.tempRequired?c.tempRequired+1:1,c.tempRequiredPets||(c.tempRequiredPets=[]),c.tempRequiredPets.push(e),d.find(t=>t.ID===e.ID)||d.push(e))}),u||(c.tempMin=null,c.tempRequired=0,c.tempRequiredPets=[],c.active=!1))}if(r){g=new Date;let t=Object.values(m);for(let e=0;e<p.length;e++)t.push(p[e]);let a=getCombinationsInner(d,Math.min(4,d.length),t);if(console.log("got new combinations after the rel calcs"),-1!==a&&(p=p.filter(e=>!e.parameters.fake||!a.team.find(t=>t.ID===e.id))),-1===a&&0===p.length){"generic"in i||(i.generic=`Individual filters all succeeded, but the combination of all is impossible starting group ${e+1} (too many relative pets in one team)`);break}if(-1!==a){k=a;for(let e=0;e<t.length;e++)t[e].id in c&&a.team.find(a=>a.ID===t[e].id)&&delete c[t[e].id]}}}I.push(k.team);for(let e=0;e<k.team.length;e++)k.team[e].ID in c&&delete c[k.team[e].ID];M=M.filter(e=>{let t=!0;for(let a=0;a<k.team.length;a++)if(k.team[a].ID===e.ID){t=!1;break}return t})}}b=new Date,console.log(`time to get best combo: ${(b-d)/1e3} seconds`),l?.setFailedFilters&&l.setFailedFilters(i);let P=!0,E=-1;for(;P;){E++,P=!1;let e=JSON.parse(JSON.stringify(I));for(let a=0;a<e.length;a++){let l=e[a];for(let s=0;s<l.length;s++){let i=l[s],n=!1;if(!h[i.ID]){if(a<I.length-1){let o=e[a+1],r={},u=this.calculateGroupScore(l,t).groupScore;for(let e=0;e<2;e++)for(let e=0;e<o.length;e++){let a=o[e];if(a.Type===i.Type&&!r[a.ID]){r[a.ID]=a;let e=JSON.parse(JSON.stringify(l));e[s]=a,this.calculateGroupScore(e,t).groupScore>u&&(n=!0);break}}}if(!n&&a>0){let l=a-1;for(;l>=0;){let n=e[l],o={},r=this.calculateGroupScore(n,t).groupScore;for(let e=0;e<2;e++){for(let e=0;e<n.length;e++){let u=n[e];if(!h[u.ID]){if(u.Type===i.Type&&!o[u.ID]){o[u.ID]=u;let c=JSON.parse(JSON.stringify(n));c[e]=i,this.calculateGroupScore(c,t).groupScore>r&&(P=!0,I[a][s]=JSON.parse(JSON.stringify(u)),I[l][e]=JSON.parse(JSON.stringify(i)));break}if(P)break}}if(P)break}if(P)break;l--}}if(P)break}}if(P)break}}return console.log(`num swaps: ${E}`),I.forEach(e=>{e.sort((e,t)=>e.ID-t.ID),e.sort((e,t)=>e.Type-t.Type)}),I},calcBestTokenGroup:function(e,t,a,l){a=a||7;let s=1,i={},memoizedGroupScore=e=>{let a=e.ID;if(!i[a]||i[a]){let l=this.calculateGroupScore(e.team,t),s=l.tokenMult;i[a]={token:s,damage:l.groupScore,other:l}}return i[a]},getCombinationsInner=(e,t,a)=>{let l=-1,f=(i,n)=>{let o=0,r=0,u=[],c=[];a&&(o=a.min?a.min:0,u=a.pets?a.pets:[],c=a.ignoredPets?a.ignoredPets:[]);let h=0;if(n.length>0){let e="";for(let t=0;t<n.length;t++){if(e+=n[t].ID,t+1!==n.length&&(e+=","),o>0)for(let e=0;e<u.length;e++)n[t].ID==u[e].ID&&h++;if(c.length>0)for(let e=0;e<c.length;e++)n[t].ID==c[e].ID&&r++}if(h===o&&0===r){let t={ID:e,team:n};if(-1===l)l={ID:e,team:n,score:memoizedGroupScore(t)};else{let a=memoizedGroupScore(t);1===s?a.damage>l.score.damage&&(l={ID:e,team:n,score:a}):a.token===l.score.token?a.other.tokenRewardCount>0?a.damage<l.score.damage&&(l={ID:e,team:n,score:a}):a.damage>l.score.damage&&(l={ID:e,team:n,score:a}):a.token>l.score.token&&(l={ID:e,team:n,score:a})}}}if(n.length!==t)for(let t=i;t<e.length;t++)f(t+1,[...n,e[t]])};return f(0,[]),l.team&&l.team.sort((e,t)=>e.Type===t.Type?e.ID-t.ID:e.Type-t.Type),l},n=new Date,o=new Date,r=[];for(let i=0;i<a;i++){let n=-1,o=JSON.parse(JSON.stringify(e)),u=0,c=0,h=[],m=0,p=0,g=0;o.forEach(e=>{e.BonusList.forEach(a=>{1016===a.ID&&(h.push(e),c+=this.calculatePetBaseDamage(e,t),u++,1===e.Type?g++:2===e.Type&&p++)})}),c/=u,o=(o=this.getBestDamagePets(o,t,{requiredPets:h})).sort((e,a)=>this.calculatePetBaseDamage(a,t)-this.calculatePetBaseDamage(e,t));for(let e=0;e<2;e++)m+=this.calculatePetBaseDamage(o[e],t);m/=2;let D=this.calcBestDamageGroup(o,t,1)[0];if(m=D?this.calculateGroupScore(D,t):[],u>=4&&p>=2&&g>=2)s=2,n=getCombinationsInner(o,Math.min(4,o.length),{pets:h,min:4}),s=1;else if(1===u)n=i===a-1?getCombinationsInner(o,Math.min(4,o.length),{pets:h,min:h.length}):getCombinationsInner(o,Math.min(4,o.length));else if(u>1){let e=(100-l.tokenDamageBias)/100*m.groupScore;e/=5.75;let t=2;(p>1&&g>0||g>1&&p>0)&&(t=3);let r=Math.ceil(u/t);r>=a-i?(s=r-(a-i)>=0?1:2,n=getCombinationsInner(o,Math.min(4,o.length),{pets:h,min:t}),s=1):c>e?(s=a-i-r>=0?1:2,n=getCombinationsInner(o,Math.min(4,o.length),{pets:h,min:t}),s=1):n=getCombinationsInner(o,Math.min(4,o.length),{pets:[],min:0,ignoredPets:h})}else n=getCombinationsInner(o,Math.min(4,o.length));if(-1===n)break;memoizedGroupScore(n),r.push(n.team),e=e.filter(e=>{let t=!0;for(let a=0;a<n.team.length;a++)if(n.team[a].ID===e.ID){t=!1;break}return t})}return o=new Date,console.log(`time to get best combo: ${(o-n)/1e3} seconds`),r},findBestGroups:function(e,t,a,l,s){switch(a){case 1:case 3:return this.calcBestDamageGroup(e,t,l,s);case 2:return this.calcBestTokenGroup(e,t,l,s)}},calcEquipBonus:function(e,t){let a=1;if(23===t.ID){if(e.Level<1)return 0;a=(1+(24+Math.pow(1.15,Math.max(0,l.Z.calculateLogarithm(1.1,e.Level)-45)))*.01)*(1+.01*Math.pow(1.15,Math.max(0,l.Z.calculateLogarithm(1.1,e.Rank)-45)))-1}else if(28===t.ID){if(e.Level<1)return 0;a=(1+(24+Math.pow(1.15,Math.max(0,l.Z.calculateLogarithm(1.1,e.Level)-45)))*.001)*(1+.01*Math.pow(1.15,Math.max(0,l.Z.calculateLogarithm(1.1,e.Rank)-45)))-1}else if(29===t.ID){if(e.Level<1)return 0;a=(1+(24+Math.pow(1.15,Math.max(0,l.Z.calculateLogarithm(1.1,e.Level)-45)))*.0025)*(1+.01*Math.pow(1.15,Math.max(0,l.Z.calculateLogarithm(1.1,e.Rank)-45)))-1}else if(34===t.ID){if(e.Level<1)return 0;a=(1+(9+Math.pow(1.125,Math.max(0,l.Z.calculateLogarithm(1.1,e.Level)-45)))*25e-5)*(1+.001*Math.pow(1.15,Math.max(0,l.Z.calculateLogarithm(1.1,e.Rank)-45)))-1}else if(35===t.ID){if(e.Level<1)return 0;a=(1+(9+Math.pow(1.125,Math.max(0,l.Z.calculateLogarithm(1.1,e.Level)-45)))*5e-5)*(1+.001*Math.pow(1.15,Math.max(0,l.Z.calculateLogarithm(1.1,e.Rank)-45)))-1}else a=(Math.pow(1+t.Gain,e.Level)-1)*(1+.02*e.Rank);return 100*a}}},4837:(e,t,a)=>{a.d(t,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var l=a(30784),s=a(9885);a(71183);var i=a(16297),n=a(68068);let __WEBPACK_DEFAULT_EXPORT__=({data:e,onSelect:t,placeholder:a,updateBox:o,margin:r})=>{let[u,c]=(0,s.useState)(null);return l.jsx("div",{style:{width:e?.width?e.width:"288px",minHeight:"0px",height:"36px",margin:r||""},children:l.jsx(i.Z,{options:e.list,renderInput:e=>{let t=e.key;return delete e.key,(0,s.createElement)(n.Z,{...e,key:t,placeholder:u?.label&&o?u.label:a||"Enter a pet"})},ListboxProps:{style:{maxHeight:150}},value:u,clearOnBlur:!0,isOptionEqualToValue:(e,t)=>-1!==t.id&&e.label===t.label,onChange:(e,a)=>{a&&(t(a),o&&c(a))}})})}},71187:(e,t,a)=>{a.d(t,{Z:()=>l});let l={src:"/_next/static/media/x_icon.2c19be28.svg",height:800,width:800,blurWidth:0,blurHeight:0}}};