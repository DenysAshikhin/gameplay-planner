[{"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\cardMapping.js":"1","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\page.js":"2","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\page_content.jsx":"3","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\page.js":"4","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\page_content.jsx":"5","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\PetItem.js":"6","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\PetItemCoin.jsx":"7","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\farmingWorker.js":"8","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\FarmPlant.jsx":"9","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\graph.jsx":"10","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\page.js":"11","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\page_content.jsx":"12","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\Timer.jsx":"13","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\layout.js":"14","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page.js":"15","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_content.jsx":"16","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page.js":"17","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page_card.jsx":"18","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page_content.jsx":"19","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\page.js":"20","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\page_content.jsx":"21","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\PetItem.js":"22","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\teamSuggestions.js":"23","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\AssemblyItem.jsx":"24","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\AssemblyLine.jsx":"25","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\page.js":"26","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\page_content.jsx":"27","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\BlinkingDot.jsx":"28","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\Dot.jsx":"29","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\farmingHelper.js":"30","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\header.jsx":"31","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\helper.js":"32","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\itemMapping.js":"33","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\ItemSelection.js":"34","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\math.js":"35","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\navBar.jsx":"36","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\petHelper.js":"37","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\reincHelper.js":"38","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\search.jsx":"39","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\Tooltip.jsx":"40","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\ItemSelection copy.js":"41","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\gratitude\\page.js":"42","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\gratitude\\page_content.jsx":"43","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\page.js":"44","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\page_content.jsx":"45","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\residueMapping.js":"46"},{"size":2756,"mtime":1705378582114,"results":"47","hashOfConfig":"48"},{"size":535,"mtime":1699206951135,"results":"49","hashOfConfig":"48"},{"size":64644,"mtime":1705523149192,"results":"50","hashOfConfig":"48"},{"size":684,"mtime":1699484623632,"results":"51","hashOfConfig":"48"},{"size":129882,"mtime":1706117829170,"results":"52","hashOfConfig":"48"},{"size":13449,"mtime":1706117256620,"results":"53","hashOfConfig":"48"},{"size":13289,"mtime":1706117036789,"results":"54","hashOfConfig":"48"},{"size":9592,"mtime":1698849505218,"results":"55","hashOfConfig":"48"},{"size":24720,"mtime":1700458980790,"results":"56","hashOfConfig":"48"},{"size":12181,"mtime":1703455828318,"results":"57","hashOfConfig":"48"},{"size":624,"mtime":1699206951135,"results":"58","hashOfConfig":"48"},{"size":174854,"mtime":1700458831390,"results":"59","hashOfConfig":"48"},{"size":8067,"mtime":1699162746129,"results":"60","hashOfConfig":"48"},{"size":3882,"mtime":1701043277740,"results":"61","hashOfConfig":"48"},{"size":140,"mtime":1699108764428,"results":"62","hashOfConfig":"48"},{"size":8790,"mtime":1705864709332,"results":"63","hashOfConfig":"48"},{"size":365,"mtime":1699158751671,"results":"64","hashOfConfig":"48"},{"size":3950,"mtime":1700891658095,"results":"65","hashOfConfig":"48"},{"size":2675,"mtime":1700881584918,"results":"66","hashOfConfig":"48"},{"size":654,"mtime":1699206951135,"results":"67","hashOfConfig":"48"},{"size":85817,"mtime":1704747798303,"results":"68","hashOfConfig":"48"},{"size":20933,"mtime":1706117256620,"results":"69","hashOfConfig":"48"},{"size":96156,"mtime":1703444785300,"results":"70","hashOfConfig":"48"},{"size":4016,"mtime":1704817323685,"results":"71","hashOfConfig":"48"},{"size":6523,"mtime":1699498367500,"results":"72","hashOfConfig":"48"},{"size":552,"mtime":1699287646541,"results":"73","hashOfConfig":"48"},{"size":24164,"mtime":1704818943731,"results":"74","hashOfConfig":"48"},{"size":572,"mtime":1699061430156,"results":"75","hashOfConfig":"48"},{"size":315,"mtime":1698849505297,"results":"76","hashOfConfig":"48"},{"size":40454,"mtime":1700450596280,"results":"77","hashOfConfig":"48"},{"size":1664,"mtime":1699498174255,"results":"78","hashOfConfig":"48"},{"size":4091,"mtime":1700603484820,"results":"79","hashOfConfig":"48"},{"size":27338,"mtime":1706113945464,"results":"80","hashOfConfig":"48"},{"size":3682,"mtime":1698938060827,"results":"81","hashOfConfig":"48"},{"size":1998,"mtime":1698849505306,"results":"82","hashOfConfig":"48"},{"size":6168,"mtime":1700889351697,"results":"83","hashOfConfig":"48"},{"size":90090,"mtime":1706117919160,"results":"84","hashOfConfig":"48"},{"size":3502,"mtime":1698849505364,"results":"85","hashOfConfig":"48"},{"size":3177,"mtime":1698898389355,"results":"86","hashOfConfig":"48"},{"size":3417,"mtime":1703452411924,"results":"87","hashOfConfig":"48"},{"size":4663,"mtime":1704747926494,"results":"88","hashOfConfig":"48"},{"size":486,"mtime":1699471188929,"results":"89","hashOfConfig":"48"},{"size":12689,"mtime":1699412549470,"results":"90","hashOfConfig":"48"},{"size":552,"mtime":1700590266467,"results":"91","hashOfConfig":"48"},{"size":27036,"mtime":1700937976308,"results":"92","hashOfConfig":"48"},{"size":23859,"mtime":1700936849821,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17kfkn8",{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\cardMapping.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\page_content.jsx",["233"],[],"\"use client\"\r\n\r\n\r\nimport './card.css';\r\nimport { useState, useEffect } from 'react';\r\nimport ReactGA from \"react-ga4\";\r\nimport MouseOverPopover from \"../util/Tooltip.jsx\";\r\nimport { DefaultWeightMap } from '../util/itemMapping.js';\r\nimport { cardMapImg } from './cardMapping.js';\r\n\r\nimport mathHelper from '../util/math.js';\r\nimport reincHelper from '../util/reincHelper.js';\r\nimport helper from '../util/helper.js';\r\n\r\nimport infoIcon from '../../../public/images/icons/info_thick.svg';\r\nimport infoIconRed from '../../../public/images/icons/info_red.svg';\r\n// import chargeImg from '../../../public/images/cards/charge.png'\r\nimport chargeImg from '../../../public/images/cards_v2/battery.png'\r\n\r\nimport greenBorder from '../../../public/images/cards_v2/CardSelectedGreen.png'\r\nimport redBorder from '../../../public/images/cards_v2/CardSelectedRed.png'\r\n\r\nimport useLocalStorage from \"use-local-storage\";\r\n\r\nimport DefaultSave from '../util/tempSave.json';\r\n\r\nimport Image from 'next/image';\r\n\r\nconst PREFIX = 'card';\r\n\r\nconst classes = {\r\n    card: `${PREFIX}-card`,\r\n    content: `${PREFIX}-content`,\r\n    positiveChargeResult: `${PREFIX}-positiveChargeResult`,\r\n    negativeChargeResult: `${PREFIX}-negativeChargeResult`\r\n};\r\nReactGA.initialize([{\r\n    trackingId: \"G-GGLPK02VH8\",\r\n}]);\r\n\r\nconst POTATO = 1;\r\nconst CLASSEXP = 2;\r\nconst SKULL = 3;\r\nconst CONFECTIONEXP = 4;\r\nconst REINCARNATIONEXP = 5;\r\nconst ITEMRATING = 6;\r\nconst POOPBONUS = 7;\r\nconst MILKBONUS = 8;\r\nconst WHACKSCORE = 9;\r\nconst BREWINGEXP = 10;\r\nconst CALCIUMEXP = 11;\r\nconst FERMENTINGEXP = 12;\r\nconst RESIDUEBONUS = 13;\r\nconst WORMQTY = 14;\r\nconst LARVAQTY = 15;\r\nconst LARVAEFF = 16;\r\nconst ATTACKHP = 17;\r\nconst PETDMG = 18;\r\nconst PETLEVELEXP = 19;\r\nconst PETRANKEXP = 20;\r\nconst CARDPOWERB = 21;\r\nconst CARDEXPB = 22;\r\nconst HEALTHYBONUS = 23;\r\nconst FRIESBONUS = 27;\r\nconst PROTEINBONUS = 28;\r\nconst GHBONUS = 29;\r\nconst MININGEXP = 34;\r\nconst MININGPWR = 35;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst cardIDMap = {\r\n    [POTATO]: {\r\n        id: POTATO, label: \"Potatoes\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 35,\r\n            3: 35,\r\n            4: 35,\r\n            5: 35,\r\n            6: 35,\r\n            7: 35,\r\n            8: 40,\r\n            9: 40,\r\n            10: 40,\r\n            11: 40,\r\n            12: 40,\r\n            13: 40,\r\n            14: 14,\r\n            15: 14,\r\n            16: 14,\r\n            17: 14,\r\n            18: 14,\r\n            19: 14,\r\n            20: 14,\r\n            21: 14,\r\n            22: 14,\r\n            23: 14,\r\n            24: 14,\r\n            25: 14,\r\n            26: 14,\r\n            27: 14,\r\n            28: 14,\r\n            29: 14,\r\n            30: 14,\r\n        }\r\n    },\r\n    [CLASSEXP]: {\r\n        id: CLASSEXP, label: \"Class Exp\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 46,\r\n            3: 46,\r\n            4: 46,\r\n            5: 46,\r\n            6: 46,\r\n            7: 46,\r\n            8: 46,\r\n            9: 46,\r\n            10: 46,\r\n            11: 46,\r\n            12: 46,\r\n            13: 46,\r\n            14: 31,\r\n            15: 31,\r\n            16: 31,\r\n            17: 31,\r\n            18: 31,\r\n            19: 31,\r\n            20: 31,\r\n            21: 31,\r\n            22: 31,\r\n            23: 31,\r\n            24: 31,\r\n            25: 31,\r\n            26: 31,\r\n            27: 31,\r\n            28: 31,\r\n            29: 31,\r\n            30: 31,\r\n        }\r\n    },\r\n    [SKULL]: {\r\n        id: SKULL, label: \"Skulls\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 57,\r\n            4: 57,\r\n            5: 57,\r\n            6: 57,\r\n            7: 57,\r\n            8: 65,\r\n            9: 65,\r\n            10: 65,\r\n            11: 65,\r\n            12: 65,\r\n            13: 65,\r\n            14: 92,\r\n            15: 92,\r\n            16: 92,\r\n            17: 92,\r\n            18: 92,\r\n            19: 92,\r\n            20: 92,\r\n            21: 92,\r\n            22: 92,\r\n            23: 92,\r\n            24: 92,\r\n            25: 92,\r\n            26: 92,\r\n            27: 92,\r\n            28: 92,\r\n            29: 92,\r\n            30: 92,\r\n        }\r\n    },\r\n    [CONFECTIONEXP]: {\r\n        id: CONFECTIONEXP, label: \"Confection\", icon: \"\", weights: {\r\n            0: 1,\r\n            1: 1,\r\n            2: 1,\r\n            3: 1,\r\n            4: 1,\r\n            5: 1,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [REINCARNATIONEXP]: {\r\n        id: REINCARNATIONEXP, label: \"Reinc.\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 2455,\r\n            7: 2455,\r\n            8: 2455,\r\n            9: 2455,\r\n            10: 2455,\r\n            11: 2455,\r\n            12: 2455,\r\n            13: 2455,\r\n            14: 2455,\r\n            15: 2455,\r\n            16: 2455,\r\n            17: 2455,\r\n            18: 2455,\r\n            19: 2455,\r\n            20: 2455,\r\n            21: 2455,\r\n            22: 2455,\r\n            23: 2455,\r\n            24: 2455,\r\n            25: 2455,\r\n            26: 2455,\r\n            27: 2455,\r\n            28: 2455,\r\n            29: 2455,\r\n            30: 2455,\r\n        }\r\n    },\r\n    [ITEMRATING]: {\r\n        id: ITEMRATING, label: \"Item R.\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 1227,\r\n            6: 1227,\r\n            7: 1227,\r\n            8: 1227,\r\n            9: 1227,\r\n            10: 1227,\r\n            11: 1227,\r\n            12: 1227,\r\n            13: 1227,\r\n            14: 1227,\r\n            15: 2455,\r\n            16: 2455,\r\n            17: 2455,\r\n            18: 2455,\r\n            19: 2455,\r\n            20: 2455,\r\n            21: 2455,\r\n            22: 2455,\r\n            23: 2455,\r\n            24: 2455,\r\n            25: 2455,\r\n            26: 2455,\r\n            27: 2455,\r\n            28: 2455,\r\n            29: 2455,\r\n            30: 2455,\r\n        }\r\n    },\r\n    [POOPBONUS]: {\r\n        id: POOPBONUS, label: \"Poop Qty\", icon: \"\", weights: {\r\n            0: 1,\r\n            1: 1,\r\n            2: 1,\r\n            3: 1,\r\n            4: 1,\r\n            5: 1,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [MILKBONUS]: {\r\n        id: MILKBONUS, label: \"Milk\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 44,\r\n            6: 44,\r\n            7: 44,\r\n            8: 44,\r\n            9: 44,\r\n            10: 44,\r\n            11: 44,\r\n            12: 44,\r\n            13: 44,\r\n            14: 135,\r\n            15: 135,\r\n            16: 135,\r\n            17: 135,\r\n            18: 135,\r\n            19: 135,\r\n            20: 135,\r\n            21: 135,\r\n            22: 135,\r\n            23: 135,\r\n            24: 135,\r\n            25: 135,\r\n            26: 135,\r\n            27: 135,\r\n            28: 135,\r\n            29: 135,\r\n            30: 135,\r\n        }\r\n    },\r\n    [WHACKSCORE]: {\r\n        id: WHACKSCORE, label: \"Whack\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 1,\r\n            5: 1,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [BREWINGEXP]: {\r\n        id: BREWINGEXP, label: \"Brewing\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 2,\r\n            15: 2,\r\n            16: 2,\r\n            17: 2,\r\n            18: 2,\r\n            19: 2,\r\n            20: 2,\r\n            21: 2,\r\n            22: 2,\r\n            23: 2,\r\n            24: 2,\r\n            25: 2,\r\n            26: 2,\r\n            27: 2,\r\n            28: 2,\r\n            29: 2,\r\n            30: 2,\r\n        }\r\n    },\r\n    [CALCIUMEXP]: {\r\n        id: CALCIUMEXP, label: \"Calcium\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 0,\r\n            7: 0,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [FERMENTINGEXP]: {\r\n        id: FERMENTINGEXP, label: \"Ferment.\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 0,\r\n            7: 0,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [RESIDUEBONUS]: {\r\n        id: RESIDUEBONUS, label: \"Residue\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 4,\r\n            6: 14,\r\n            7: 114,\r\n            8: 214,\r\n            9: 314,\r\n            10: 414,\r\n            11: 514,\r\n            12: 614,\r\n            13: 614,\r\n            14: 491,\r\n            15: 491,\r\n            16: 491,\r\n            17: 491,\r\n            18: 491,\r\n            19: 491,\r\n            20: 491,\r\n            21: 491,\r\n            22: 491,\r\n            23: 491,\r\n            24: 491,\r\n            25: 491,\r\n            26: 491,\r\n            27: 491,\r\n            28: 491,\r\n            29: 491,\r\n            30: 491,\r\n        }\r\n    },\r\n    [WORMQTY]: {\r\n        id: WORMQTY, label: \"Worm Qty\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 1,\r\n            4: 1,\r\n            5: 1,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [LARVAQTY]: {\r\n        id: LARVAQTY, label: \"Larve Qty\", icon: \"\", weights: {\r\n            0: 1,\r\n            1: 1,\r\n            2: 1,\r\n            3: 1,\r\n            4: 1,\r\n            5: 1,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [LARVAEFF]: {\r\n        id: LARVAEFF, label: \"Larve Eff.\", icon: \"\", weights: {\r\n            0: 1,\r\n            1: 1,\r\n            2: 1,\r\n            3: 1,\r\n            4: 1,\r\n            5: 1,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [ATTACKHP]: {\r\n        id: ATTACKHP, label: \"Att. + Hp.\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 10,\r\n            2: 10,\r\n            3: 10,\r\n            4: 10,\r\n            5: 10,\r\n            6: 10,\r\n            7: 10,\r\n            8: 10,\r\n            9: 10,\r\n            10: 10,\r\n            11: 10,\r\n            12: 10,\r\n            13: 10,\r\n            14: 19,\r\n            15: 19,\r\n            16: 19,\r\n            17: 19,\r\n            18: 19,\r\n            19: 19,\r\n            20: 19,\r\n            21: 19,\r\n            22: 19,\r\n            23: 19,\r\n            24: 19,\r\n            25: 19,\r\n            26: 19,\r\n            27: 19,\r\n            28: 19,\r\n            29: 19,\r\n            30: 19,\r\n        }\r\n    },\r\n    [PETDMG]: {\r\n        id: PETDMG, label: \"Pet Dmg\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 2455,\r\n            7: 2455,\r\n            8: 2455,\r\n            9: 2455,\r\n            10: 2455,\r\n            11: 2455,\r\n            12: 2455,\r\n            13: 2455,\r\n            14: 2455,\r\n            15: 2455,\r\n            16: 2455,\r\n            17: 2455,\r\n            18: 2455,\r\n            19: 2455,\r\n            20: 2455,\r\n            21: 2455,\r\n            22: 2455,\r\n            23: 2455,\r\n            24: 2455,\r\n            25: 2455,\r\n            26: 2455,\r\n            27: 2455,\r\n            28: 2455,\r\n            29: 2455,\r\n            30: 2455,\r\n        }\r\n    },\r\n    [PETLEVELEXP]: {\r\n        id: PETLEVELEXP, label: \"Pet Level\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 1473,\r\n            7: 1473,\r\n            8: 1473,\r\n            9: 1473,\r\n            10: 1473,\r\n            11: 1473,\r\n            12: 1473,\r\n            13: 1473,\r\n            14: 205,\r\n            15: 491,\r\n            16: 491,\r\n            17: 491,\r\n            18: 491,\r\n            19: 491,\r\n            20: 491,\r\n            21: 491,\r\n            22: 491,\r\n            23: 491,\r\n            24: 491,\r\n            25: 491,\r\n            26: 491,\r\n            27: 491,\r\n            28: 491,\r\n            29: 491,\r\n            30: 491,\r\n        }\r\n    },\r\n    [PETRANKEXP]: {\r\n        id: PETRANKEXP, label: \"Pet Rank\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 0,\r\n            7: 0,\r\n            8: 0,\r\n            9: 0,\r\n            10: 2455 / 5,\r\n            11: 2455 / 5,\r\n            12: 2455 / 5,\r\n            13: 2455 / 5,\r\n            14: 2455 / 5,\r\n            15: 2455 / 5,\r\n            16: 2455 / 5,\r\n            17: 2455 / 5,\r\n            18: 2455 / 5,\r\n            19: 2455 / 5,\r\n            20: 2455 / 5,\r\n            21: 2455 / 5,\r\n            22: 2455 / 5,\r\n            23: 2455 / 5,\r\n            24: 2455 / 5,\r\n            25: 2455 / 5,\r\n            26: 2455 / 5,\r\n            27: 2455 / 5,\r\n            28: 2455 / 5,\r\n            29: 2455 / 5,\r\n            30: 2455 / 5,\r\n        }\r\n    },\r\n    [CARDPOWERB]: {\r\n        id: CARDPOWERB, label: \"Card Power\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 0,\r\n            7: 0,\r\n            8: 0,\r\n            9: 0,\r\n            10: 0,\r\n            11: 0,\r\n            12: 0,\r\n            13: 0,\r\n            14: 0,\r\n            15: 0,\r\n            16: 0,\r\n            17: 0,\r\n            18: 0,\r\n            19: 0,\r\n            20: 0,\r\n            21: 0,\r\n            22: 0,\r\n            23: 0,\r\n            24: 0,\r\n            25: 0,\r\n            26: 0,\r\n            27: 0,\r\n            28: 0,\r\n            29: 0,\r\n            30: 0,\r\n        }\r\n    },\r\n    [CARDEXPB]: {\r\n        id: CARDEXPB, label: \"Card Exp\", icon: \"\", weights: {\r\n            0: 0,\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 0,\r\n            7: 0,\r\n            8: 0,\r\n            9: 0,\r\n            10: 0,\r\n            11: 0,\r\n            12: 0,\r\n            13: 0,\r\n            14: 0,\r\n            15: 0,\r\n            16: 0,\r\n            17: 0,\r\n            18: 0,\r\n            19: 0,\r\n            20: 0,\r\n            21: 0,\r\n            22: 0,\r\n            23: 0,\r\n            24: 0,\r\n            25: 0,\r\n            26: 0,\r\n            27: 0,\r\n            28: 0,\r\n            29: 0,\r\n            30: 0,\r\n        }\r\n    },\r\n    [HEALTHYBONUS]: {\r\n        id: HEALTHYBONUS, label: \"Heal. Pot.\", icon: \"\", weights: {\r\n            0: 1,\r\n            1: 1,\r\n            2: 1,\r\n            3: 1,\r\n            4: 1,\r\n            5: 1,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [FRIESBONUS]: {\r\n        id: FRIESBONUS, label: \"Fries\", icon: \"\", weights: {\r\n            0: 1,\r\n            1: 1,\r\n            2: 1,\r\n            3: 1,\r\n            4: 1,\r\n            5: 1,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [PROTEINBONUS]: {\r\n        id: PROTEINBONUS, label: \"Protein\", icon: \"\", weights: {\r\n            0: 2,\r\n            1: 2,\r\n            2: 2,\r\n            3: 2,\r\n            4: 2,\r\n            5: 2,\r\n            6: 2,\r\n            7: 2,\r\n            8: 2,\r\n            9: 2,\r\n            10: 2,\r\n            11: 2,\r\n            12: 2,\r\n            13: 2,\r\n            14: 2,\r\n            15: 2,\r\n            16: 2,\r\n            17: 2,\r\n            18: 2,\r\n            19: 2,\r\n            20: 2,\r\n            21: 2,\r\n            22: 2,\r\n            23: 2,\r\n            24: 2,\r\n            25: 2,\r\n            26: 2,\r\n            27: 2,\r\n            28: 2,\r\n            29: 2,\r\n            30: 2,\r\n        }\r\n    },\r\n    [GHBONUS]: {\r\n        id: GHBONUS, label: \"GH Dmg\", icon: \"\", weights: {\r\n            0: 3,\r\n            1: 3,\r\n            2: 3,\r\n            3: 3,\r\n            4: 3,\r\n            5: 3,\r\n            6: 3,\r\n            7: 3,\r\n            8: 3,\r\n            9: 3,\r\n            10: 3,\r\n            11: 3,\r\n            12: 3,\r\n            13: 3,\r\n            14: 3,\r\n            15: 3,\r\n            16: 3,\r\n            17: 3,\r\n            18: 3,\r\n            19: 3,\r\n            20: 3,\r\n            21: 3,\r\n            22: 3,\r\n            23: 3,\r\n            24: 3,\r\n            25: 3,\r\n            26: 3,\r\n            27: 3,\r\n            28: 3,\r\n            29: 3,\r\n            30: 3,\r\n        }\r\n    },\r\n    [MININGEXP]: {\r\n        id: MININGEXP, label: \"Mining Exp\", icon: \"\", weights: {\r\n            0: 1,\r\n            1: 1,\r\n            2: 1,\r\n            3: 1,\r\n            4: 1,\r\n            5: 1,\r\n            6: 1,\r\n            7: 1,\r\n            8: 1,\r\n            9: 1,\r\n            10: 1,\r\n            11: 1,\r\n            12: 1,\r\n            13: 1,\r\n            14: 1,\r\n            15: 1,\r\n            16: 1,\r\n            17: 1,\r\n            18: 1,\r\n            19: 1,\r\n            20: 1,\r\n            21: 1,\r\n            22: 1,\r\n            23: 1,\r\n            24: 1,\r\n            25: 1,\r\n            26: 1,\r\n            27: 1,\r\n            28: 1,\r\n            29: 1,\r\n            30: 1,\r\n        }\r\n    },\r\n    [MININGPWR]: {\r\n        id: MININGPWR, label: \"Mining Pwr\", icon: \"\", weights: {\r\n            0: 4,\r\n            1: 4,\r\n            2: 4,\r\n            3: 4,\r\n            4: 4,\r\n            5: 4,\r\n            6: 4,\r\n            7: 4,\r\n            8: 4,\r\n            9: 4,\r\n            10: 4,\r\n            11: 4,\r\n            12: 4,\r\n            13: 4,\r\n            14: 4,\r\n            15: 4,\r\n            16: 4,\r\n            17: 4,\r\n            18: 4,\r\n            19: 4,\r\n            20: 4,\r\n            21: 4,\r\n            22: 4,\r\n            23: 4,\r\n            24: 4,\r\n            25: 4,\r\n            26: 4,\r\n            27: 4,\r\n            28: 4,\r\n            29: 4,\r\n            30: 4,\r\n        }\r\n    },\r\n}\r\n\r\nfunction powerFormula(Pow, logBase, customConstant, params) {\r\n\r\n    params = params ? params : {};\r\n    const ID = params.ID ? params.ID : 1;\r\n    const isPerm = params.isPerm ? params.isPerm : false;\r\n\r\n\r\n    let base = 1.2;\r\n    if (!isPerm) {\r\n        switch (ID) {\r\n            case 23:\r\n            case 27:\r\n            case 28:\r\n            case 29:\r\n                base = 1.1;\r\n                break;\r\n            case 34:\r\n                base = 1.09;\r\n                break;\r\n            case 35:\r\n                base = 1.08;\r\n                break;\r\n        }\r\n    }\r\n    else {\r\n        switch (ID) {\r\n            case 23:\r\n            case 27:\r\n            case 28:\r\n            case 29:\r\n            case 34:\r\n            case 35:\r\n                base = 1.1;\r\n        }\r\n    }\r\n    let result = mathHelper.pow(\r\n        base,\r\n        mathHelper.logDecimal(Pow, logBase)\r\n    );\r\n    result = mathHelper.multiplyDecimal(result, customConstant);\r\n\r\n    result = isPerm ? mathHelper.multiplyDecimal(result, 0.5) : result;\r\n    result = mathHelper.addDecimal(result, 1);\r\n    return result;\r\n}\r\nconst tempPowerBonusFormula = {\r\n    17: (Pow) => powerFormula(Pow, 1.5, 0.015),\r\n    1: (Pow) => powerFormula(Pow, 1.3, 0.018),\r\n    2: (Pow) => powerFormula(Pow, 1.35, 0.016),\r\n    3: (Pow) => powerFormula(Pow, 1.325, 0.015),\r\n    5: (Pow) => powerFormula(Pow, 1.55, 0.001),\r\n    6: (Pow) => powerFormula(Pow, 1.525, 0.002),\r\n    9: (Pow) => powerFormula(Pow, 1.325, 0.02),\r\n    7: (Pow) => powerFormula(Pow, 1.325, 0.016),\r\n    4: (Pow) => powerFormula(Pow, 1.3, 0.016),\r\n    8: (Pow) => powerFormula(Pow, 1.35, 0.012),\r\n    10: (Pow) => powerFormula(Pow, 1.325, 0.011),\r\n    11: (Pow) => powerFormula(Pow, 1.325, 0.01),\r\n    12: (Pow) => powerFormula(Pow, 1.4, 0.008),\r\n    13: (Pow) => powerFormula(Pow, 1.525, 0.002),\r\n    14: (Pow) => powerFormula(Pow, 1.4, 0.01),\r\n    15: (Pow) => powerFormula(Pow, 1.3, 0.015),\r\n    16: (Pow) => powerFormula(Pow, 1.3, 0.02),\r\n    18: (Pow) => powerFormula(Pow, 1.525, 0.003),\r\n    19: (Pow) => powerFormula(Pow, 1.5, 0.002),\r\n    20: (Pow) => powerFormula(Pow, 1.55, 0.001),\r\n    23: (Pow) => powerFormula(Pow, 7.0, 0.18, { ID: 23 }),\r\n    27: (Pow) => powerFormula(Pow, 7.0, 0.009, { ID: 27 }),\r\n    28: (Pow) => powerFormula(Pow, 7.0, 0.045, { ID: 28 }),\r\n    29: (Pow) => powerFormula(Pow, 7.0, 0.09, { ID: 29 }),\r\n    34: (Pow) => powerFormula(Pow, 8.0, 0.018, { ID: 34 }),\r\n    35: (Pow) => powerFormula(Pow, 9.0, 0.009, { ID: 35 }),\r\n    _: (Pow) => 1.0\r\n};\r\nconst permPowerBonusFormula = {\r\n    17: (Pow) => powerFormula(Pow, 1.5, 0.015, { isPerm: true, ID: 1 }),\r\n    1: (Pow) => powerFormula(Pow, 1.3, 0.018, { isPerm: true, ID: 1 }),\r\n    2: (Pow) => powerFormula(Pow, 1.35, 0.016, { isPerm: true, ID: 1 }),\r\n    3: (Pow) => powerFormula(Pow, 1.325, 0.015, { isPerm: true, ID: 1 }),\r\n    5: (Pow) => powerFormula(Pow, 1.55, 0.001, { isPerm: true, ID: 1 }),\r\n    6: (Pow) => powerFormula(Pow, 1.525, 0.002, { isPerm: true, ID: 1 }),\r\n    9: (Pow) => powerFormula(Pow, 1.325, 0.02, { isPerm: true, ID: 1 }),\r\n    7: (Pow) => powerFormula(Pow, 1.325, 0.016, { isPerm: true, ID: 1 }),\r\n    4: (Pow) => powerFormula(Pow, 1.3, 0.016, { isPerm: true, ID: 1 }),\r\n    8: (Pow) => powerFormula(Pow, 1.35, 0.012, { isPerm: true, ID: 1 }),\r\n    10: (Pow) => powerFormula(Pow, 1.325, 0.011, { isPerm: true, ID: 1 }),\r\n    11: (Pow) => powerFormula(Pow, 1.325, 0.01, { isPerm: true, ID: 1 }),\r\n    12: (Pow) => powerFormula(Pow, 1.4, 0.008, { isPerm: true, ID: 1 }),\r\n    13: (Pow) => powerFormula(Pow, 1.525, 0.002, { isPerm: true, ID: 1 }),\r\n    14: (Pow) => powerFormula(Pow, 1.4, 0.01, { isPerm: true, ID: 1 }),\r\n    15: (Pow) => powerFormula(Pow, 1.3, 0.015, { isPerm: true, ID: 1 }),\r\n    16: (Pow) => powerFormula(Pow, 1.3, 0.02, { isPerm: true, ID: 1 }),\r\n    18: (Pow) => powerFormula(Pow, 1.525, 0.003, { isPerm: true, ID: 1 }),\r\n    19: (Pow) => powerFormula(Pow, 1.5, 0.002, { isPerm: true, ID: 1 }),\r\n    20: (Pow) => powerFormula(Pow, 1.55, 0.001, { isPerm: true, ID: 1 }),\r\n    23: (Pow) => powerFormula(Pow, 7.0, 0.18, { isPerm: true, ID: 23 }),\r\n    27: (Pow) => powerFormula(Pow, 7.0, 0.009, { isPerm: true, ID: 27 }),\r\n    28: (Pow) => powerFormula(Pow, 7.0, 0.045, { isPerm: true, ID: 28 }),\r\n    29: (Pow) => powerFormula(Pow, 7.0, 0.009, { isPerm: true, ID: 29 }),\r\n    34: (Pow) => powerFormula(Pow, 7.0, 0.027, { isPerm: true, ID: 34 }),\r\n    35: (Pow) => powerFormula(Pow, 7.0, 0.009, { isPerm: true, ID: 35 }),\r\n    // _: (Pow) => new Decimal(1.0)\r\n};\r\n\r\nconst CARD_DISPLAY_IDS = [\r\n    17, 1, 2, 3, 9,\r\n    7, 4, 14, 15, 16,\r\n    8, FRIESBONUS, PROTEINBONUS, GHBONUS, HEALTHYBONUS,\r\n    10, 11, 12, 13,\r\n    6, 5, 19, 18, 20, MININGEXP, MININGPWR\r\n];\r\n\r\nconst CardCard = ({\r\n    vertical,\r\n    displayMode,\r\n    data, card, weightMap, i, applyWeights, cardMap, setCardMap, resetWeights, cardWeightInner,\r\n    cardWeight, setCardWeightNew }) => {\r\n\r\n    const {\r\n        CurrentExp,\r\n        ExpNeeded,\r\n        Found,\r\n        ID,\r\n        Level,\r\n        PowerPermaBD,\r\n        PowerTempBD,\r\n    } = card;\r\n    const { ChargeTransfertPowerPerma, ChargeTransfertPowerTemp } = data;\r\n\r\n    // const [cardWeight, setCardWeight] = useLocalStorage(`cardWeight-${ID}`, -1);\r\n    // const [internalWeight, setInternalWeight] = useState(-1);\r\n\r\n    // useEffect(() => {\r\n    //     setInternalWeight(cardWeight);\r\n    // }, [cardWeight])\r\n\r\n    let defaultWeight = cardIDMap[ID].weights[data.AscensionCount];\r\n    if (data.AscensionCount >= 15) {\r\n        defaultWeight /= 2;\r\n    }\r\n    const finalWeight = cardWeight === -1 ? defaultWeight : cardWeight;\r\n    if (card.ID === 34) {\r\n        let bigsad = -1;\r\n    }\r\n\r\n    const [finalAfter, setFinalAfter] = useState(mathHelper.createDecimal(-1));\r\n    const [finalBefore, setFinalBefore] = useState(mathHelper.createDecimal(-1));\r\n    const [flatIncrease, setFlatIncrease] = useState(mathHelper.createDecimal(-1));\r\n    const [percIncrease, setPercentIncrease] = useState(mathHelper.createDecimal(-1));\r\n    const [weightIncrease, setWeightIncrease] = useState(mathHelper.createDecimal(-1));\r\n    const [finalTemp, setFinalTemp] = useState(mathHelper.createDecimal(-1));\r\n\r\n    const [refreshMath, setRefreshMath] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        setRefreshMath(false);\r\n\r\n        const permValueBefore = mathHelper.createDecimal(PowerPermaBD);\r\n        const tempValueBefore = mathHelper.createDecimal(PowerTempBD);\r\n\r\n        let permValueAfter = mathHelper.addDecimal(permValueBefore,\r\n            mathHelper.multiplyDecimal(tempValueBefore, ChargeTransfertPowerPerma)\r\n        );\r\n        let tempValueAfter = mathHelper.multiplyDecimal(tempValueBefore, (1 - ChargeTransfertPowerTemp));\r\n\r\n        let tempBonusBefore = tempPowerBonusFormula[ID](tempValueBefore);\r\n        let permBonusBefore = permPowerBonusFormula[ID](permValueBefore);\r\n\r\n        let finalBefore = mathHelper.multiplyDecimal(\r\n            mathHelper.subtractDecimal(\r\n                mathHelper.multiplyDecimal(tempBonusBefore, permBonusBefore),\r\n                1\r\n            ),\r\n            ((1.0 + Level * 0.02) * 100)\r\n        )\r\n\r\n        let temp1 = tempPowerBonusFormula[ID](mathHelper.multiplyDecimal(tempValueBefore, (1.0 - ChargeTransfertPowerTemp)))\r\n        let temp2 = permPowerBonusFormula[ID](\r\n            mathHelper.addDecimal(permValueBefore, mathHelper.multiplyDecimal(tempValueBefore, ChargeTransfertPowerPerma))\r\n        )\r\n        let finalAfter =\r\n            mathHelper.multiplyDecimal(\r\n                mathHelper.subtractDecimal(mathHelper.multiplyDecimal(temp1, temp2), 1),\r\n                (1.0 + Level * 0.02) * 100);\r\n\r\n\r\n\r\n        let percIncrease = mathHelper.divideDecimal(finalAfter, finalBefore);\r\n        let flatIncrease = mathHelper.subtractDecimal(finalAfter, finalBefore);\r\n        let weightIncrease = mathHelper.multiplyDecimal(mathHelper.divideDecimal(mathHelper.subtractDecimal(finalAfter, finalBefore), finalBefore), finalWeight);\r\n        if (ID === PROTEINBONUS) {\r\n            let bigsad = -1;\r\n        }\r\n\r\n        setFinalTemp(tempValueAfter);\r\n        setFinalAfter(finalAfter);\r\n        setFinalBefore(finalBefore);\r\n        setWeightIncrease(weightIncrease);\r\n        setFlatIncrease(flatIncrease);\r\n        setPercentIncrease(percIncrease);\r\n\r\n        if (resetWeights !== -3) {\r\n            if (!(ID in cardMap)) {\r\n                setCardMap((e) => {\r\n                    let tempy = { ...e };\r\n                    tempy[ID] = {\r\n                        ID: ID, finalAfter: finalAfter,\r\n                        percIncrease: percIncrease,\r\n                        flatIncrease: flatIncrease,\r\n                        weightIncrease: weightIncrease\r\n                    };\r\n                    return tempy;\r\n                })\r\n            }\r\n            else if (!cardMap[ID]?.finalAfter.equals(finalAfter) || !cardMap[ID]?.weightIncrease.equals(weightIncrease)) {\r\n                setCardMap((e) => {\r\n                    let tempy = { ...e };\r\n                    tempy[ID] = {\r\n                        ID: ID, finalAfter: finalAfter, percIncrease: percIncrease,\r\n                        flatIncrease: flatIncrease,\r\n                        weightIncrease: weightIncrease\r\n                    };\r\n                    return tempy;\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n    }, [cardMap, finalWeight, ChargeTransfertPowerPerma, ChargeTransfertPowerTemp, setCardMap,\r\n        cardWeight, setCardWeightNew,\r\n        resetWeights\r\n        ,\r\n        ID,\r\n        Level,\r\n        PowerPermaBD,\r\n        PowerTempBD,\r\n        refreshMath\r\n    ])\r\n\r\n\r\n\r\n    let displayTotalsRatio = 0;\r\n    let isPositiveChargeRatio = finalAfter.greaterThan(finalBefore);\r\n\r\n    let middleCard = false;\r\n    let num = i + 1;\r\n\r\n    if (Math.floor(num / 5) % 2 === 0) {\r\n        middleCard = (num > 1) && (num % 2 === 0) && (num % 5 !== 0)\r\n    }\r\n    else {\r\n        middleCard = (num > 1) && (num % 2 === 1) && (num % 5 !== 0)\r\n    }\r\n\r\n\r\n    let margin = ``;\r\n    if (vertical) {\r\n        margin = num % 2 === 0 && num + 1 ? '6px 0' : ''\r\n    }\r\n    else {\r\n        margin = middleCard ? `0 6px ${num > 1 && num % 5 === 0 ? '12px' : ''} 6px` : '';\r\n    }\r\n\r\n    let extraText = `(+${mathHelper.subtractDecimal(finalAfter, finalBefore).toExponential(2)})`;\r\n    if (displayMode === 'perc') {\r\n        let tempy = helper.roundTwoDecimal(mathHelper.divideDecimal(finalAfter, finalBefore).toNumber() * 100 - 100);\r\n        extraText = `(${tempy}%)`\r\n    }\r\n    else if (displayMode === 'flat') {\r\n        let tempy = mathHelper.subtractDecimal(finalAfter, finalBefore).toExponential(2).toString();\r\n        extraText = `(+${tempy})`\r\n    }\r\n    else if (displayMode === 'weight') {\r\n        try {\r\n\r\n            let tempy = mathHelper.multiplyDecimal(mathHelper.divideDecimal(mathHelper.subtractDecimal(finalAfter, finalBefore), finalBefore), finalWeight)\r\n            extraText = `(${tempy.toNumber().toExponential(2)})`\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            let bigsad = -1;\r\n        }\r\n    }\r\n    const multiplier = vertical ? 110 : 140;\r\n\r\n    return (\r\n        <div\r\n            key={i}\r\n            style={{\r\n                // border: isPositiveChargeRatio ? '2px solid green' : '1px solid black',\r\n                borderRadius: '5px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                width: `${227 / 227 * multiplier}px`,\r\n                height: `${316 / 227 * multiplier}px`,\r\n                // height: '190px',\r\n                // width: '195px',\r\n                // padding: '3px',\r\n                margin: margin,\r\n                boxSizing: 'border-box',\r\n                position: 'relative',\r\n                backgroundColor: 'rgba(255,255,255, 0.1)'\r\n            }}>\r\n            <MouseOverPopover\r\n                tooltip={\r\n                    <div style={{ padding: '6px' }}>\r\n                        <h3 style={{ margin: 0, textAlign: 'center' }}>\r\n                            {cardIDMap[ID].label}\r\n                        </h3>\r\n                        <div>\r\n                            Current Bonus: {finalBefore.toExponential(2).toString()}%\r\n                        </div>\r\n                        <div>\r\n                            Charged Bonus: {finalAfter.toExponential(2).toString()}%\r\n                        </div>\r\n                        <div>\r\n                            Absolute Increase: {flatIncrease.toExponential(2).toString()}\r\n                        </div>\r\n                        <div>\r\n                            Percentage Increase: {percIncrease.toExponential(2).toString()}\r\n                        </div>\r\n                        <div>\r\n                            Weighted Increase: {weightIncrease.toExponential(2).toString()}\r\n                        </div>\r\n                        <div>\r\n                            Current Weight:{finalWeight}\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n\r\n            >\r\n                <div>\r\n                    {/* Title */}\r\n                    {/* <div style={{ fontWeight: 'bold' }}>\r\n                        {cardIDMap[ID].label}\r\n                    </div> */}\r\n                    <div style={{\r\n                        width: `${227 / 227 * multiplier}px`,\r\n                        height: `${316 / 227 * multiplier}px`,\r\n                        margin: '0 auto', position: 'relative'\r\n                    }}>\r\n                        <Image\r\n                            alt={`picture of the in game ${cardIDMap[ID].label} card`}\r\n                            fill\r\n                            src={cardMapImg[ID].img}\r\n                            unoptimized={true}\r\n                            priority\r\n                        />\r\n\r\n                        {isPositiveChargeRatio && (\r\n                            <Image\r\n                                alt={`picture of the in game ${cardIDMap[ID].label} card`}\r\n                                fill\r\n                                src={greenBorder}\r\n                                unoptimized={true}\r\n                                priority\r\n                            />\r\n                        )}\r\n                        {!isPositiveChargeRatio && (\r\n                            <Image\r\n                                alt={`picture of the in game ${cardIDMap[ID].label} card`}\r\n                                fill\r\n                                src={redBorder}\r\n                                unoptimized={true}\r\n                                priority\r\n                            />\r\n                        )}\r\n\r\n\r\n                        {/* Final bonus */}\r\n                        <div\r\n                            style={{\r\n                                fontWeight: 'bold',\r\n                                position: 'absolute',\r\n                                fontSize: vertical ? '13px' : '16px',\r\n                                top: vertical ? '4px' : '6px',\r\n                                right: '8px',\r\n                            }}\r\n                        >\r\n                            {`${finalAfter.toExponential(2)}%`}\r\n                        </div>\r\n\r\n                        {/* Final temp */}\r\n                        <div\r\n                            style={{\r\n                                fontWeight: 'bold',\r\n                                position: 'absolute',\r\n                                fontSize: vertical ? '10px' : '13px',\r\n                                top: vertical ? '24px' : '32px',\r\n                                right: '8px',\r\n                            }}\r\n                        >\r\n                            {`${finalTemp.toExponential(2)}%`}\r\n                        </div>\r\n\r\n\r\n                        <div\r\n                            className='importantText'\r\n                            style={{\r\n                                fontWeight: 'bold',\r\n                                position: 'absolute',\r\n                                fontSize: vertical ? '12px' : '14px',\r\n                                bottom: vertical ? '2px' : '4px',\r\n                                width: '100%',\r\n                                textAlign: 'center'\r\n                            }}\r\n                        >\r\n                            {cardIDMap[ID].label}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </MouseOverPopover>\r\n\r\n            {\r\n                displayMode === 'original' && (\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            position: 'absolute',\r\n                            bottom: '23px',\r\n                            left: '30px',\r\n                            zIndex: '3',\r\n                        }}\r\n                    >\r\n                        <input\r\n                            aria-label='Specify the weight/importance for this card'\r\n                            style={{\r\n                                width: '55px',\r\n                                color: cardWeight !== defaultWeight && cardWeight !== -1 ? 'black' : 'gray',\r\n                                fontWeight: cardWeight !== defaultWeight && cardWeight !== -1 ? 'bold' : '',\r\n                                borderRadius: '6px',\r\n                                fontSize: '12px',\r\n                                padding: '0 0 0 0',\r\n                                margin: '0',\r\n                                textAlign: 'center'\r\n                            }}\r\n                            type='number'\r\n                            value={finalWeight}\r\n                            onChange={\r\n                                (e) => {\r\n                                    try {\r\n                                        let x = Number(e.target.value);\r\n                                        // x = Math.floor(x);\r\n                                        if (x < 0 || x > 999999) {\r\n                                            return;\r\n                                        }\r\n                                        setCardWeightNew(x);\r\n                                        setRefreshMath(true);\r\n\r\n                                        ReactGA.event({\r\n                                            category: \"card_interaction\",\r\n                                            action: `changed_card_weight`,\r\n                                            label: `${cardIDMap[ID].label}`,\r\n                                            value: x\r\n                                        })\r\n                                    }\r\n                                    catch (err) {\r\n                                        console.log(err);\r\n                                    }\r\n                                }}\r\n                            min=\"0\"\r\n                            max=\"999999\"\r\n                        />\r\n\r\n                        <MouseOverPopover tooltip={\r\n\r\n                            <div>\r\n                                {`The weight (importance) of this card/stat. Feel free to change this`}\r\n                            </div>\r\n                        }\r\n                            opacity={1}\r\n                        >\r\n                            <div style={{ position: 'relative', height: '16px', width: '16px', marginLeft: '2px' }}>\r\n                                <Image\r\n                                    alt='on hover I in a cirlce icon, shows more information on hover'\r\n                                    fill\r\n                                    src={infoIcon}\r\n                                    unoptimized={true}\r\n                                />\r\n                            </div>\r\n                            {/* <img alt='on hover I in a cirlce icon, shows more information on hover' style={{ height: '16px', marginLeft: '6px' }} src={infoIcon} /> */}\r\n                        </MouseOverPopover>\r\n                    </div>\r\n                )\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst defaultWeights = {\r\n    1: -1,\r\n    2: -1,\r\n    3: -1,\r\n    4: -1,\r\n    5: -1,\r\n    6: -1,\r\n    7: -1,\r\n    8: -1,\r\n    9: -1,\r\n    10: -1,\r\n    11: -1,\r\n    12: -1,\r\n    13: -1,\r\n    14: -1,\r\n    15: -1,\r\n    16: -1,\r\n    17: -1,\r\n    18: -1,\r\n    19: -1,\r\n    20: -1,\r\n    21: -1,\r\n    22: -1,\r\n    23: -1,\r\n    24: -1,\r\n    25: -1,\r\n    26: -1,\r\n    27: -1,\r\n    28: -1,\r\n    29: -1,\r\n    30: -1,\r\n    31: -1,\r\n    32: -1,\r\n    33: -1,\r\n    34: -1,\r\n    35: -1,\r\n    36: -1,\r\n    37: -1,\r\n    38: -1,\r\n    39: -1,\r\n    40: -1,\r\n    41: -1,\r\n    42: -1,\r\n    43: -1,\r\n    44: -1,\r\n    45: -1,\r\n    46: -1,\r\n    47: -1,\r\n    48: -1,\r\n    49: -1,\r\n}\r\n\r\nexport default function Cards() {\r\n\r\n    // useEffect(() => {\r\n\r\n\r\n    //     setTimeout(() => {\r\n    //         ReactGA.send({ hitType: \"pageview\", page: \"/cards_\", title: \"_Card Calculator Page\" });\r\n    //     }, 500);\r\n    // }, []);\r\n\r\n\r\n    const [clientData, setData] = useLocalStorage('userData', DefaultSave);\r\n    const [data, setRunTimeData] = useState(DefaultSave);\r\n\r\n\r\n    const [weightMap, setWeightMap] = useState(DefaultWeightMap);\r\n    const [cardMap, setCardMap] = useState({})\r\n    const [resetCardWeights, setResetCardWeights] = useState(-1);\r\n    const [forceRefresh, setForceRefresh] = useState(false);\r\n\r\n    const [newCardWeights, setNewCardWeightsRunTime] = useState(defaultWeights)\r\n    const [newCardWeightsClient, setNewCardWeights] = useLocalStorage('newCardWeights', defaultWeights)\r\n    useEffect(() => {\r\n\r\n        //Fixes issues with outdated caches\r\n        if(!newCardWeightsClient[40]){\r\n            setNewCardWeightsRunTime(defaultWeights);\r\n            return setNewCardWeights(defaultWeights);\r\n        }\r\n        setNewCardWeightsRunTime(newCardWeightsClient);\r\n    }, [newCardWeightsClient])\r\n\r\n    const { CardsCollection } = data;\r\n\r\n    useEffect(() => {\r\n        if (resetCardWeights > 10) {\r\n            setResetCardWeights(-2);\r\n        }\r\n    }, [resetCardWeights]);\r\n\r\n    useEffect(() => {\r\n        setRunTimeData(clientData);\r\n        let num = Math.random() * 1000 + 20;\r\n        setResetCardWeights(num);\r\n    }, [clientData]);\r\n\r\n\r\n\r\n    if (!data.PetsSpecial[74]) {\r\n        return (\r\n            <div>\r\n                <h1>{`Your save is most likely from an older version, please update your game and try with a new save. If that's not the case, please reach out on discord! Link can be found on the gratitude (heart) page`}</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // const foundCards = CardsCollection.filter(card => card.Found === 1);\r\n    const cardsById = CardsCollection.reduce((accum, card) => {\r\n        accum[card.ID] = card;\r\n        return accum;\r\n    }, {});\r\n\r\n    let weightedCardInfo = [];\r\n\r\n    for (let i = 0; i < CARD_DISPLAY_IDS.length; i++) {\r\n        weightedCardInfo.push(\r\n            <CardCard\r\n                cardWeight={newCardWeights[CARD_DISPLAY_IDS[i]]}\r\n                setCardWeightNew={(value) => {\r\n                    setNewCardWeights((e) => {\r\n                        let temp = { ...e };\r\n                        temp[CARD_DISPLAY_IDS[i]] = value;\r\n                        return temp;\r\n                    })\r\n                }}\r\n                resetWeights={resetCardWeights} displayMode='original' cardMap={cardMap} setCardMap={setCardMap} data={data} i={i} card={cardsById[CARD_DISPLAY_IDS[i]]} weightMap={weightMap} classes={classes} applyWeights={true} key={`${i}-orig`}></CardCard>\r\n        )\r\n    }\r\n\r\n    let baseCardArr = [];\r\n    Object.values(cardMap).forEach((inner_card) => {\r\n        baseCardArr.push(inner_card);\r\n    })\r\n    let topPercIncrease = baseCardArr.sort((a, b) => {\r\n        let res = b.percIncrease.greaterThan(a.percIncrease) ? 1 : -1;\r\n        return res;\r\n    });\r\n\r\n    let finalPercIncrease = topPercIncrease.slice(0, 5).map((value, index, arr) => {\r\n        return (\r\n            <div key={index} style={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                <div className='importantText' style={{ fontSize: '36px', margin: '0 6px 0 0', }}>\r\n                    {index + 1}\r\n                </div>\r\n                <CardCard\r\n                    cardWeight={newCardWeights[value.ID]}\r\n                    resetWeights={-3} displayMode='perc' vertical={true} cardMap={cardMap} setCardMap={null} data={data} i={index} card={cardsById[value.ID]} weightMap={weightMap} classes={classes} key={`${index}-perc`}></CardCard>\r\n            </div>\r\n        )\r\n    }, []);\r\n\r\n\r\n    let flatIncrease = baseCardArr.sort((a, b) => {\r\n        let res = b.flatIncrease.greaterThan(a.flatIncrease) ? 1 : -1;\r\n        return res;\r\n    });\r\n    let finalFlatIncrease = flatIncrease.slice(0, 5).map((value, index, arr) => {\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', width: '100%' }} key={index}>\r\n                <div style={{ fontSize: '36px', margin: '0 6px 0 0', }}>\r\n                    {index + 1}\r\n                </div>\r\n                <CardCard\r\n                    cardWeight={newCardWeights[value.ID]}\r\n                    resetWeights={-3} displayMode='flat' vertical={true} cardMap={cardMap} setCardMap={null} data={data} i={index} card={cardsById[value.ID]} weightMap={weightMap} classes={classes} key={`${index}-perc`}></CardCard>\r\n            </div>\r\n        )\r\n    }, []);\r\n\r\n    let weightIncrease = baseCardArr.sort((a, b) => {\r\n        let res = b.weightIncrease.greaterThan(a.weightIncrease) ? 1 : -1;\r\n        return res;\r\n    });\r\n    let finalWeightIncrease = weightIncrease.slice(0, 5).map((value, index, arr) => {\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center', width: '100%' }} key={index}>\r\n                <div\r\n                    className='importantText'\r\n                    style={{ fontSize: '36px', margin: '0 6px 0 0', }}>\r\n                    {index + 1}\r\n                </div>\r\n                <CardCard\r\n                    cardWeight={newCardWeights[value.ID]}\r\n                    resetWeights={-3}\r\n                    displayMode='weight'\r\n                    vertical={true}\r\n                    cardMap={cardMap}\r\n                    setCardMap={null}\r\n                    data={data}\r\n                    i={index}\r\n                    card={cardsById[value.ID]}\r\n                    weightMap={weightMap}\r\n                    classes={classes}\r\n                    key={`${index}-perc`\r\n                    }></CardCard>\r\n            </div>\r\n        )\r\n    }, []);\r\n\r\n    let classExp = mathHelper.multiplyDecimal(data.CurrentLevel, mathHelper.pow(1.001, mathHelper.min(1000.0, data.CurrentLevel)));\r\n    let class2 = mathHelper.max(1.0, mathHelper.subtractDecimal(mathHelper.logDecimal(data.CurrentLevel, 5.0), 2.0));\r\n    let class3 = mathHelper.max(1.0, 1.0 + (data.CurrentLevel / 2000.0 - 0.5));\r\n    let classTotal = mathHelper.multiplyDecimal(classExp, mathHelper.multiplyDecimal(class2, class3))\r\n    let timerBonuses = data.TimerReincBonuses;\r\n    let otherBonuses = mathHelper.createDecimal(data.ReincarnationBonusesBD);\r\n    let waves = (1.0 + data.BestProgress / 5000.0);\r\n\r\n    let confLog = mathHelper.logDecimal(data.ConfectionTotalLevel / 5000000.0, 2.0)\r\n    let confDiv = mathHelper.divideDecimal(confLog, 2)\r\n    let confection = mathHelper.addDecimal(\r\n        1,\r\n        mathHelper.min(\r\n            mathHelper.max(\r\n                1.0,\r\n                mathHelper.addDecimal(confDiv, 1)\r\n            )\r\n            ,\r\n            data.ConfectionTotalLevel / 5000000.0\r\n        )\r\n    )\r\n\r\n\r\n    let temp1 = mathHelper.multiplyDecimal(timerBonuses, otherBonuses)\r\n\r\n    let currentReincExp = mathHelper.multiplyDecimal(mathHelper.multiplyDecimal(mathHelper.multiplyDecimal(classTotal, temp1), waves), confection);\r\n    let requiredReincExp = mathHelper.createDecimal(data.ReincarnationExpRequiredBD);\r\n    let currentReincLevel = mathHelper.createDecimal(data.ReincarnationLevel).toNumber();\r\n    let calcedReincExp = reincHelper.calcRequiredReincExp(currentReincLevel, data)\r\n    let requiredReincLevel = data.AscensionReincLevelRequired;\r\n    let currReincTime = data.CurrentReincarnationTimer / (60 * 60);\r\n\r\n\r\n    let futureReincLevel = currentReincLevel;\r\n    let loopFlag = true;\r\n    while (loopFlag) {\r\n\r\n        let required = reincHelper.calcRequiredReincExp(futureReincLevel, data);\r\n        if (currentReincExp.greaterThan(required)) {\r\n            futureReincLevel++;\r\n            currentReincExp = mathHelper.subtractDecimal(currentReincExp, required);\r\n        }\r\n        else {\r\n            loopFlag = false;\r\n        }\r\n    }\r\n\r\n    let levelDiff = futureReincLevel - currentReincLevel;\r\n    if (levelDiff === 0) levelDiff = 1;\r\n\r\n    let reincHr = (levelDiff) / currReincTime;\r\n    let remTime = (requiredReincLevel - futureReincLevel) / reincHr;\r\n    let soulClock = data.SoulOldClock;\r\n    let chargeDuration = 12 * (1 - 0.25 * soulClock);\r\n    let tickRate = (1.0 + (data.PetsSpecial[67].Active + data.PetsSpecial[68].Active + data.PetsSpecial[74].Active) * 0.1)\r\n    let remainingCharges = Math.floor((remTime * tickRate) / chargeDuration);\r\n\r\n    const chargesMax = data.CurrentCardCharge === data.MaxCardCharge;\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flex: '1',\r\n                flexDirection: 'column',\r\n                paddingLeft: '6px',\r\n                backgroundColor: 'black',\r\n            }}\r\n        >\r\n            <div\r\n                className={chargesMax ? 'borderToFadeInAndOutRed' : 'whiteBorder' + ' importantText'}\r\n                style={{\r\n                    display: 'flex',\r\n                    height: '60px',\r\n                    alignSelf: 'flex-start',\r\n                    padding: chargesMax ? '0 6px' : '',\r\n                    alignItems: 'center',\r\n                    backgroundColor: 'rgba(255,255,255, 0.1)',\r\n                    borderRadius: '6px',\r\n                    marginBottom: '6px',\r\n                    marginTop: '6px',\r\n                    padding: '0 3px'\r\n                }}>\r\n                {chargesMax && (\r\n                    <MouseOverPopover tooltip={\r\n\r\n                        <div >\r\n                            {`You have max card charges!`}\r\n                        </div>\r\n                    }\r\n                        opacity={1}\r\n                    >\r\n                        <div className='elementToFadeInAndOut' style={{ position: 'relative', height: '32px', width: '32px', marginRight: '12px' }}>\r\n                            <Image\r\n                                alt='on hover I in a cirlce icon, shows more information on hover'\r\n                                fill\r\n                                src={infoIconRed}\r\n                                unoptimized={true}\r\n                            />\r\n                        </div>\r\n                        {/* <img\r\n                            className='elementToFadeInAndOut'\r\n                            alt='on hover I in a cirlce icon, shows more information on hover'\r\n                            style={{ height: '32px', marginLeft: '6px', marginRight: '12px' }}\r\n                            src={infoIconRed} /> */}\r\n                    </MouseOverPopover >\r\n                )}\r\n                {/* Current Charge */}\r\n                <div\r\n                    style={{\r\n                        display: 'flex', marginBottom: '0px', marginRight: '36px',\r\n                        // width: '455px', \r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{ display: 'flex', alignItems: 'center', fontSize: '48px' }}\r\n                    >\r\n                        {`Current Charges: `}\r\n                    </div>\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'center', fontSize: '48px' }}>\r\n                        <div style={{ marginRight: '6px' }}>{data?.CurrentCardCharge}</div>\r\n                        <Image\r\n                            alt='in game charge (battery) image'\r\n                            // fill\r\n                            style={{ height: '60px', width: 'auto' }}\r\n                            src={chargeImg}\r\n                            unoptimized={true}\r\n                        />\r\n                    </div>\r\n                    {/* <div style={{\r\n                        position: 'relative', height: '100%',\r\n                        // width: '30px', \r\n                    }}> */}\r\n                    {/* <Image\r\n                        alt='in game charge (battery) image'\r\n                        // fill\r\n                        style={{ height: '100%', width: 'auto' }}\r\n                        src={chargeImg}\r\n                        unoptimized={true}\r\n                    /> */}\r\n                    {/* </div> */}\r\n                    {/* <img \r\n                    alt='in game charge (battery) image' \r\n                    style={{ height: '55px' }}\r\n                     src={`/fapi_fork_personal/cards/charge.png`} \r\n                     /> */}\r\n                </div>\r\n\r\n                {/* Charges till Ascension */}\r\n                <MouseOverPopover tooltip={\r\n\r\n                    <div>\r\n                        {` ${requiredReincLevel - futureReincLevel} remaining levels at ${helper.roundTwoDecimal(reincHr)} levels/hr =  ${helper.roundTwoDecimal(remTime)} hours remaining`}\r\n                    </div>\r\n                }\r\n                    opacity={1}\r\n                >\r\n                    <div\r\n                        style={{ display: 'flex', marginBottom: '0px', marginleft: '36px', alignItems: 'center', }}\r\n                    >\r\n                        <div\r\n                            style={{ display: 'flex', alignItems: 'center', fontSize: '48px' }}\r\n                        >\r\n                            {`Remaining Charges in ascension: `}\r\n                        </div>\r\n                        <div style={{ display: 'flex', alignItems: 'center', fontSize: '48px' }}>\r\n                            <div style={{ marginRight: '6px' }}>{` ${remainingCharges}`}</div>\r\n                            <Image\r\n                                alt='in game charge (battery) image'\r\n                                // fill\r\n                                style={{ height: '60px', width: 'auto', maxHeight: '65px' }}\r\n                                src={chargeImg}\r\n                                unoptimized={true}\r\n                            />\r\n                        </div>\r\n\r\n\r\n\r\n                        {/* <img\r\n                            alt='in game charge (battery) image'\r\n                            style={{ height: '55px' }}\r\n                            src={`/fapi_fork_personal/cards/charge.png`}\r\n                        /> */}\r\n\r\n                        <div style={{ position: 'relative', height: '55px', width: '55px', marginLeft: '6px' }}>\r\n                            <Image\r\n                                alt='on hover I in a cirlce icon, shows more information on hover'\r\n                                fill\r\n                                src={infoIcon}\r\n                                unoptimized={true}\r\n                            />\r\n                        </div>\r\n                        {/* <img alt='on hover I in a cirlce icon, shows more information on hover' style={{ height: '32px', marginLeft: '6px' }} src={infoIcon} /> */}\r\n\r\n\r\n                    </div>\r\n\r\n                </MouseOverPopover >\r\n            </div>\r\n\r\n\r\n\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flex: '1',\r\n                    maxHeight: 'calc(100% - 82px)'\r\n                }}\r\n            >\r\n                {/* Original Cards */}\r\n                <div\r\n                    style={{\r\n                        maxWidth: '747px',\r\n                        padding: '6px 6px 0 6px',\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        alignContent: 'flex-start',\r\n                        border: '1.5px solid rgba(255,255,255,0.8)',\r\n                        // border: '1px solid black',\r\n                        borderRadius: '6px',\r\n                        backgroundColor: 'rgba(255,255,255, 0.1)',\r\n                        overflow: 'auto'\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            width: '100%',\r\n                            justifyContent: 'center'\r\n                        }}\r\n                    >\r\n\r\n                        <h3\r\n                            className='importantText'\r\n                            style={{ marginTop: '0', marginBottom: '0', marginRight: '12px' }}\r\n                        >\r\n                            Current Cards\r\n                        </h3>\r\n                        <div>\r\n                            <button\r\n                                onClick={() => {\r\n                                    let num = Math.random() * 1000 + 20;\r\n                                    setNewCardWeights({\r\n                                        1: -1,\r\n                                        2: -1,\r\n                                        3: -1,\r\n                                        4: -1,\r\n                                        5: -1,\r\n                                        6: -1,\r\n                                        7: -1,\r\n                                        8: -1,\r\n                                        9: -1,\r\n                                        10: -1,\r\n                                        11: -1,\r\n                                        12: -1,\r\n                                        13: -1,\r\n                                        14: -1,\r\n                                        15: -1,\r\n                                        16: -1,\r\n                                        17: -1,\r\n                                        18: -1,\r\n                                        19: -1,\r\n                                        20: -1,\r\n                                        21: -1,\r\n                                        22: -1,\r\n                                        23: -1,\r\n                                        24: -1,\r\n                                        25: -1,\r\n                                        26: -1,\r\n                                        27: -1,\r\n                                    })\r\n\r\n                                }}\r\n                            >Reset Weights</button>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexWrap: 'wrap',\r\n                            alignContent: 'flex-start',\r\n                            maxHeight: 'calc(100% - 22px)',\r\n                            overflow: 'auto'\r\n                        }}\r\n                    >\r\n                        {weightedCardInfo}\r\n                    </div>\r\n                </div>\r\n                {/* Top 5 Weighted increase */}\r\n                <div\r\n                    style={{\r\n                        maxWidth: '474px',\r\n                        padding: '6px',\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        alignContent: 'flex-start',\r\n                        border: '1.5px solid rgba(255,255,255,0.8)',\r\n                        borderRadius: '6px',\r\n                        margin: '0 12px 0 24px',\r\n                        backgroundColor: 'rgba(255,255,255, 0.1)',\r\n                        overflow: 'auto'\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            width: '100%',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center'\r\n                        }}\r\n                    >\r\n\r\n                        <h3\r\n                            className='importantText'\r\n                            style={{ marginTop: '-3px', marginBottom: '6px' }}\r\n                        >Best Weight</h3>\r\n\r\n                        {finalWeightIncrease}\r\n                    </div>\r\n\r\n                </div>\r\n                {/* Top 5 % increase */}\r\n                <div\r\n                    style={{\r\n                        maxWidth: '474px',\r\n                        padding: '6px',\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        alignContent: 'flex-start',\r\n                        border: '1.5px solid rgba(255,255,255,0.8)',\r\n                        borderRadius: '6px',\r\n                        margin: '0 24px 0 12px',\r\n                        backgroundColor: 'rgba(255,255,255, 0.1)',\r\n                        overflow: 'auto'\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            width: '100%',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center'\r\n                        }}\r\n                    >\r\n                        <h3\r\n                            className='importantText'\r\n                            style={{ marginTop: '-3px', marginBottom: '6px' }}\r\n                        >Best Percen.</h3>\r\n                        {finalPercIncrease}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\n","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\PetItem.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\PetItemCoin.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\farmingWorker.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\FarmPlant.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\graph.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\Timer.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\layout.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page_card.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\PetItem.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\teamSuggestions.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\AssemblyItem.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\AssemblyLine.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\BlinkingDot.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\Dot.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\farmingHelper.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\header.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\helper.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\itemMapping.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\ItemSelection.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\math.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\navBar.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\petHelper.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\reincHelper.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\search.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\Tooltip.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\ItemSelection copy.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\gratitude\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\gratitude\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\residueMapping.js",[],[],{"ruleId":"234","severity":1,"message":"235","line":1638,"column":8,"nodeType":"236","endLine":1638,"endColumn":30,"suggestions":"237"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setNewCardWeights'. Either include it or remove the dependency array.","ArrayExpression",["238"],{"desc":"239","fix":"240"},"Update the dependencies array to be: [newCardWeightsClient, setNewCardWeights]",{"range":"241","text":"242"},[44617,44639],"[newCardWeightsClient, setNewCardWeights]"]