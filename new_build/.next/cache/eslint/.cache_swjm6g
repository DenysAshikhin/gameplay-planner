[{"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\cardMapping.js":"1","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\page.js":"2","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\page_content.jsx":"3","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\page.js":"4","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\page_content.jsx":"5","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\PetItem.js":"6","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\PetItemCoin.jsx":"7","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\farmingWorker.js":"8","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\FarmPlant.jsx":"9","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\graph.jsx":"10","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\page.js":"11","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\page_content.jsx":"12","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\Timer.jsx":"13","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\layout.js":"14","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page.js":"15","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_content.jsx":"16","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page.js":"17","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page_card.jsx":"18","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page_content.jsx":"19","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\page.js":"20","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\page_content.jsx":"21","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\PetItem.js":"22","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\teamSuggestions.js":"23","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\AssemblyItem.jsx":"24","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\AssemblyLine.jsx":"25","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\page.js":"26","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\page_content.jsx":"27","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\BlinkingDot.jsx":"28","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\Dot.jsx":"29","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\farmingHelper.js":"30","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\header.jsx":"31","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\helper.js":"32","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\itemMapping.js":"33","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\ItemSelection.js":"34","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\math.js":"35","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\navBar.jsx":"36","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\petHelper.js":"37","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\reincHelper.js":"38","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\search.jsx":"39","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\Tooltip.jsx":"40","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\ItemSelection copy.js":"41","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\gratitude\\page.js":"42","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\gratitude\\page_content.jsx":"43","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\page.js":"44","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\page_content.jsx":"45","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\residueMapping.js":"46"},{"size":2060,"mtime":1699498367504,"results":"47","hashOfConfig":"48"},{"size":535,"mtime":1699206951135,"results":"49","hashOfConfig":"48"},{"size":54631,"mtime":1700084189813,"results":"50","hashOfConfig":"48"},{"size":684,"mtime":1699484623632,"results":"51","hashOfConfig":"48"},{"size":125328,"mtime":1700590037196,"results":"52","hashOfConfig":"48"},{"size":13082,"mtime":1700513419016,"results":"53","hashOfConfig":"48"},{"size":13390,"mtime":1699583337567,"results":"54","hashOfConfig":"48"},{"size":9592,"mtime":1698849505218,"results":"55","hashOfConfig":"48"},{"size":24720,"mtime":1700458980790,"results":"56","hashOfConfig":"48"},{"size":14336,"mtime":1700450970226,"results":"57","hashOfConfig":"48"},{"size":624,"mtime":1699206951135,"results":"58","hashOfConfig":"48"},{"size":174854,"mtime":1700458831390,"results":"59","hashOfConfig":"48"},{"size":8067,"mtime":1699162746129,"results":"60","hashOfConfig":"48"},{"size":3882,"mtime":1700882343125,"results":"61","hashOfConfig":"48"},{"size":140,"mtime":1699108764428,"results":"62","hashOfConfig":"48"},{"size":8578,"mtime":1699932724284,"results":"63","hashOfConfig":"48"},{"size":365,"mtime":1699158751671,"results":"64","hashOfConfig":"48"},{"size":3950,"mtime":1700891658095,"results":"65","hashOfConfig":"48"},{"size":2675,"mtime":1700881584918,"results":"66","hashOfConfig":"48"},{"size":654,"mtime":1699206951135,"results":"67","hashOfConfig":"48"},{"size":84197,"mtime":1700863370643,"results":"68","hashOfConfig":"48"},{"size":21443,"mtime":1699072929196,"results":"69","hashOfConfig":"48"},{"size":94048,"mtime":1700880189945,"results":"70","hashOfConfig":"48"},{"size":4225,"mtime":1699163121040,"results":"71","hashOfConfig":"48"},{"size":6523,"mtime":1699498367500,"results":"72","hashOfConfig":"48"},{"size":552,"mtime":1699287646541,"results":"73","hashOfConfig":"48"},{"size":23533,"mtime":1700084182826,"results":"74","hashOfConfig":"48"},{"size":572,"mtime":1699061430156,"results":"75","hashOfConfig":"48"},{"size":315,"mtime":1698849505297,"results":"76","hashOfConfig":"48"},{"size":40454,"mtime":1700450596280,"results":"77","hashOfConfig":"48"},{"size":1664,"mtime":1699498174255,"results":"78","hashOfConfig":"48"},{"size":4091,"mtime":1700603484820,"results":"79","hashOfConfig":"48"},{"size":23209,"mtime":1699498367498,"results":"80","hashOfConfig":"48"},{"size":3682,"mtime":1698938060827,"results":"81","hashOfConfig":"48"},{"size":1998,"mtime":1698849505306,"results":"82","hashOfConfig":"48"},{"size":6168,"mtime":1700889351697,"results":"83","hashOfConfig":"48"},{"size":88828,"mtime":1700700406843,"results":"84","hashOfConfig":"48"},{"size":3502,"mtime":1698849505364,"results":"85","hashOfConfig":"48"},{"size":3177,"mtime":1698898389355,"results":"86","hashOfConfig":"48"},{"size":3296,"mtime":1699844042637,"results":"87","hashOfConfig":"48"},{"size":4032,"mtime":1699582591361,"results":"88","hashOfConfig":"48"},{"size":486,"mtime":1699471188929,"results":"89","hashOfConfig":"48"},{"size":12689,"mtime":1699412549470,"results":"90","hashOfConfig":"48"},{"size":552,"mtime":1700590266467,"results":"91","hashOfConfig":"48"},{"size":24507,"mtime":1700892462315,"results":"92","hashOfConfig":"48"},{"size":23858,"mtime":1700892517851,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17kfkn8",{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\cardMapping.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\cards\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\PetItem.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\expeditions\\PetItemCoin.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\farmingWorker.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\FarmPlant.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\graph.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\farming\\Timer.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\layout.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page_card.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\page_selection\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\PetItem.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\pets\\teamSuggestions.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\AssemblyItem.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\AssemblyLine.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\protein\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\BlinkingDot.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\Dot.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\farmingHelper.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\header.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\helper.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\itemMapping.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\ItemSelection.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\math.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\navBar.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\petHelper.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\reincHelper.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\search.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\Tooltip.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\util\\ItemSelection copy.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\gratitude\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\gratitude\\page_content.jsx",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\page.js",[],[],"C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\page_content.jsx",["233"],[],"\"use client\"\r\n\r\nimport pagecss from './page.css';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport ReactGA from \"react-ga4\";\r\nimport { BonusMap } from '../util/itemMapping.js';\r\nimport farmingHelper from '../util/farmingHelper.js';\r\nimport mathHelper from '../util/math.js';\r\nimport helper from \"../util/helper.js\";\r\n\r\n\r\nimport { residueMap } from './residueMapping.js';\r\nimport MouseOverPopover from \"../util/Tooltip.jsx\";\r\n\r\nimport infoIcon from '../../../public/images/icons/info_white_thick.svg';\r\nimport RefreshIcon from '../../../public/images/icons/refresh_lightgray.svg';\r\nimport greenBorder from '../../../public/images/residue/ShopUpgradeSelected.png';\r\nimport StillBuying from '../../../public/images/residue/StillBuying.png';\r\nimport rightArrow from '../../../public/images/icons/right_arrow_white.svg';\r\nimport DefaultSave from '../util/tempSave.json';\r\nimport useLocalStorage from \"use-local-storage\";\r\n\r\nimport Image from 'next/image';\r\n\r\nReactGA.initialize([{\r\n    trackingId: \"G-GGLPK02VH8\"\r\n}]);\r\n\r\n\r\nconst ResidueCard = ({ data, params, desiredLevels, setDesiredLevels, forceReinc }) => {\r\n    // const weight = params.weight(asc_level);\r\n    const [clientWeight, setClientWeight] = useLocalStorage(`${params.label}_residue_weight`, -1);\r\n    const [runTimeWeight, setRunTimeWeight] = useState(1);\r\n    useEffect(() => {\r\n        setRunTimeWeight(clientWeight)\r\n    }, [clientWeight])\r\n\r\n    const [hovering, setHovering] = useState(false);\r\n\r\n    const level = data[params.key];\r\n    const asc_level = data.AscensionCount;\r\n    const weight = runTimeWeight === -1 ? params.weight(asc_level) : runTimeWeight;\r\n    const locked = (!hovering) && asc_level < params.unlock;\r\n\r\n    const cost = params.cost(level);\r\n\r\n    const reinc = residueMap['reinc'];\r\n    const reincLevel = data[reinc.key];\r\n    const reincWeight = reinc.weight(asc_level);\r\n    const reincCost = reinc.cost(reincLevel);\r\n\r\n\r\n    const ratio = weight / reincWeight;\r\n    const weightedCost = mathHelper.multiplyDecimal(reincCost, ratio);\r\n\r\n\r\n    let highestKey = params.highestKey(params.key);\r\n    let highestPurchase = data[highestKey];\r\n\r\n    const finishedBuying = level >= highestPurchase;\r\n\r\n    let desiredLevel = level;\r\n    let needToIncrease = true;\r\n    let purchaseOrders = [];\r\n\r\n    while (needToIncrease) {\r\n        needToIncrease = false;\r\n\r\n        let newCost = params.cost(desiredLevel);\r\n        if (newCost.lessThan(weightedCost)) {\r\n            desiredLevel++;\r\n            needToIncrease = true;\r\n            purchaseOrders.push({ desiredLevel, newCost, weightedCost: mathHelper.divideDecimal(newCost, weight), weight: weight, params: params });\r\n        }\r\n    }\r\n\r\n    let needPurchase = desiredLevel > level;\r\n\r\n    useEffect(() => {\r\n        if (locked) { return; }\r\n        if (needPurchase && !desiredLevels[params.key]) {\r\n            setDesiredLevels((curr_levels) => {\r\n                let temp = { ...curr_levels };\r\n                temp[params.key] = {\r\n                    ...params,\r\n                    purchaseOrders: purchaseOrders,\r\n                    desiredLevel: desiredLevel, level: level, weight: weight\r\n                };\r\n                return temp;\r\n            })\r\n        }\r\n        else if (desiredLevels[params.key]?.desiredLevel !== desiredLevel) {\r\n            setDesiredLevels((curr_levels) => {\r\n                let temp = { ...curr_levels };\r\n                temp[params.key] = {\r\n                    ...params,\r\n                    purchaseOrders: purchaseOrders,\r\n                    desiredLevel: desiredLevel, level: level, weight: weight\r\n                };\r\n                return temp;\r\n            })\r\n        }\r\n    }, [desiredLevels, needPurchase, clientWeight, runTimeWeight, weight, locked])\r\n\r\n    let reincOverride = forceReinc && params.key_inner === 'reinc';\r\n\r\n    return (\r\n        <div className='importantText residueCard'\r\n            onMouseEnter={() => { setHovering(true); }}\r\n            onMouseLeave={() => { setHovering(false); }}\r\n        >\r\n            <div className='residueCardHeader'>\r\n                <div>\r\n                    {locked ? `?????` : `${params.label}: ${level}`}\r\n                </div>\r\n                {((finishedBuying && needPurchase) || (reincOverride)) && !locked && (\r\n                    <div className='futurePurchase'>\r\n                        <div>\r\n                            {`${reincOverride ? 1 + desiredLevel : desiredLevel}`}\r\n                        </div>\r\n                        <div>\r\n                            {`+${reincOverride ? desiredLevel - level + 1 : desiredLevel - level}`}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className='residueCardBody'>\r\n\r\n                <div style={{ position: 'absolute', right: '9px', top: '9px', zIndex: '2' }}>\r\n\r\n                    <MouseOverPopover tooltip={\r\n                        <div>\r\n                            <div>\r\n                                {`Cost: ${params.cost(level).toExponential(2)}`}\r\n                            </div>\r\n                            <div>\r\n                                {`Bonus: ${helper.numberWithCommas(params.bonus(level).ceil().toString())}%`}\r\n                            </div>\r\n                        </div>\r\n                    }>\r\n                        <div style={{ position: 'relative', width: '30px', height: '30px' }}>\r\n                            <Image src={infoIcon} fill unoptimized alt=\"letter i in a circle\" />\r\n                        </div>\r\n                    </MouseOverPopover>\r\n                </div>\r\n                {!locked && (\r\n                    <div style={{ position: 'absolute', left: '8px', bottom: '8px', zIndex: '2', display: 'flex', alignItems: 'center' }}>\r\n                        <div>\r\n                            Weight:\r\n                        </div>\r\n                        <div\r\n                            style={{ marginLeft: '6px' }}\r\n                        >\r\n                            <input\r\n                                aria-label='Specify how important this bonus is'\r\n                                className='importantText textMedium2'\r\n                                style={{ borderRadius: '4px', width: '48px', height: '12px', backgroundColor: '#1D1D1D' }}\r\n                                type='number'\r\n                                value={weight}\r\n                                onChange={\r\n                                    (inner_e) => {\r\n\r\n                                        try {\r\n                                            let x = Number(inner_e.target.value);\r\n                                            // x = Math.floor(x);\r\n                                            if (x < 0 || x > 9999) {\r\n                                                return;\r\n                                            }\r\n                                            setClientWeight(x);\r\n\r\n                                            ReactGA.event({\r\n                                                category: \"residue_interaction\",\r\n                                                action: `changed_residue_weight`,\r\n                                                label: `${params.label}`,\r\n                                                value: x\r\n                                            })\r\n\r\n                                        }\r\n                                        catch (err) {\r\n                                            console.log(err);\r\n                                        }\r\n                                    }}\r\n                                min=\"0\"\r\n                                max=\"9999\"\r\n                            />\r\n                        </div>\r\n                        {(weight !== params.weight(asc_level)) && (\r\n                            <div className='hover'\r\n                                style={{ position: 'relative', width: '18px', height: '18px', marginLeft: '6px' }}\r\n                                onClick={() => {\r\n                                    setClientWeight(-1);\r\n                                }}\r\n                            >\r\n                                <Image src={RefreshIcon} fill unoptimized alt='reset, 2 arrows in a circle' />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {!!locked && (\r\n                    <Image src={residueMap['locked'].img} fill unoptimized alt={`locked bonus image from in game`} />\r\n                )}\r\n                {!locked && (\r\n                    <Image src={params.img} fill unoptimized alt={`${params.key} bonus from in game`} />\r\n                )}\r\n                {(!!needPurchase || (reincOverride)) && !locked && (\r\n                    <Image src={greenBorder} fill unoptimized alt={`Green border to indicate an upgrade should be purchased`} />\r\n                )}\r\n                {!finishedBuying && (\r\n                    <Image src={StillBuying} fill unoptimized alt={`Yellow border to indicate an upgrade is still autobuying`} />\r\n                )}\r\n            </div>\r\n            <div className='residueCardFooter'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ResideOrderCard = ({ data }) => {\r\n\r\n    return (\r\n        <div className='importantText suggestionCard'>\r\n            <div className='suggestionCardHeader'>\r\n                <div>\r\n                    {`${data.params.label}`}\r\n                </div>\r\n                <div style={{ marginLeft: 'auto' }}>\r\n                    {`Cost: ${data.totalCost.toExponential(2).toString()}`}\r\n                </div>\r\n            </div>\r\n            <div className='suggestionCardBody'>\r\n                <div style={{\r\n                    position: 'relative',\r\n                    height: '45px'\r\n                }}>\r\n                    <Image\r\n                        alt={`${data.params.label} bonus holder`}\r\n                        style={{ width: 'auto', height: '100%' }}\r\n                        src={data.params.label_img} unoptimized\r\n                    />\r\n\r\n\r\n                    <div className='blackTextStroke1'\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            position: 'absolute',\r\n                            top: 'calc(50% - 14px)',\r\n                            left: '48px',\r\n                            fontSize: '27px',\r\n                            fontWeight: 'bold',\r\n                            width: 'calc(100% - 52px)'\r\n                        }}>\r\n\r\n                        <div>\r\n                            {`${data.start}`}\r\n                        </div>\r\n                        <div style={{ height: '32px', width: '32px', position: 'relative', margin: '0 3px' }}>\r\n                            <Image\r\n                                alt='arrow point to the left'\r\n                                src={rightArrow}\r\n                                fill\r\n                                unoptimized\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {`${data.desiredLevel}`}\r\n                        </div>\r\n                        <div style={{ marginLeft: 'auto' }}>\r\n                            {`+${data.desiredLevel - data.start}`}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default function Residue() {\r\n\r\n    const [clientData, setData] = useLocalStorage('userData', DefaultSave);\r\n    const [data, setRunTimeData] = useState(DefaultSave);\r\n    const dataLoaded = useRef(false);\r\n    useEffect(() => {\r\n        setRunTimeData(clientData);\r\n        dataLoaded.current = true;\r\n    }, [clientData]);\r\n\r\n    const [desiredLevels, setDesiredLevels] = useState({});\r\n    const [forceReinc, setForceReinc] = useState(false);\r\n\r\n    let suggestedPurchases = [];\r\n    let reincParams = residueMap['reinc'];\r\n    let objToIterate = forceReinc ?\r\n        {\r\n            'reinc': {\r\n                ...reincParams,\r\n                purchaseOrders: [\r\n                    {\r\n                        desiredLevel: data[reincParams.key] + 1,\r\n                        newCost: reincParams.cost(data[reincParams.key]),\r\n                        weightedCost: mathHelper.divideDecimal(reincParams.cost(data[reincParams.key]), reincParams.weight(data.AscensionCount)),\r\n                        weight: reincParams.weight(data.AscensionCount),\r\n                        params: reincParams\r\n                    }\r\n                ],\r\n                desiredLevel: data[reincParams.key] + 1, level: data[reincParams.key], weight: reincParams.weight(data.AscensionCount)\r\n            }\r\n        }\r\n        : desiredLevels\r\n    Object.entries(objToIterate).map((val) => {\r\n\r\n        val[1].purchaseOrders.forEach((inner_val) => suggestedPurchases.push(inner_val));\r\n\r\n        return val[1];\r\n    });\r\n\r\n    let stillBuying = data[reincParams.highestKey(reincParams.key)] > data[reincParams.key];\r\n\r\n    let currentResidue = mathHelper.createDecimal(data.CurrentResidueBD);\r\n\r\n    let runningCost = mathHelper.createDecimal(0);\r\n    let affordableCost = mathHelper.createDecimal(0);\r\n    let affordablePurchases = [];\r\n    let futurePurchases = [];\r\n\r\n    suggestedPurchases.sort((a, b) => a.weightedCost.lessThan(b.weightedCost) ? -1 : 1);\r\n\r\n    let runningLevels = {};\r\n\r\n    suggestedPurchases.forEach((suggestion) => {\r\n\r\n        runningCost = mathHelper.addDecimal(runningCost, suggestion.newCost);\r\n\r\n        if (runningCost.lessThan(currentResidue)) {\r\n            affordableCost = mathHelper.addDecimal(affordableCost, suggestion.newCost);\r\n            if (affordablePurchases.length === 0) {\r\n                affordablePurchases.push({ ...suggestion, start: suggestion.desiredLevel - 1, totalCost: suggestion.newCost });\r\n                runningLevels[suggestion.params.key] = suggestion.desiredLevel;\r\n            }\r\n            else {\r\n                let current = affordablePurchases[affordablePurchases.length - 1];\r\n                if (current.params.key === suggestion.params.key) {\r\n                    current.desiredLevel++;\r\n                    current.totalCost = mathHelper.addDecimal(current.totalCost, suggestion.newCost);\r\n                    runningLevels[suggestion.params.key] = current.desiredLevel;\r\n                }\r\n                else {\r\n                    affordablePurchases.push({ ...suggestion, start: suggestion.desiredLevel - 1, totalCost: suggestion.newCost });\r\n                    runningLevels[suggestion.params.key] = suggestion.desiredLevel;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (futurePurchases.length === 0) {\r\n\r\n                futurePurchases.push({\r\n                    ...suggestion,\r\n                    start: runningLevels[suggestion.params.key] ? runningLevels[suggestion.params.key] : suggestion.desiredLevel - 1,\r\n                    totalCost: suggestion.newCost\r\n                });\r\n            }\r\n            else {\r\n                let current = futurePurchases[futurePurchases.length - 1];\r\n                if (current.params.key === suggestion.params.key) {\r\n                    current.desiredLevel++;\r\n                    current.totalCost = mathHelper.addDecimal(current.totalCost, suggestion.newCost);\r\n                }\r\n                else {\r\n                    futurePurchases.push({\r\n                        ...suggestion,\r\n                        start: runningLevels[suggestion.params.key] ? runningLevels[suggestion.params.key] : suggestion.desiredLevel - 1,\r\n                        totalCost: suggestion.newCost\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!dataLoaded.current) return;\r\n        let inner_arr = [];\r\n\r\n        Object.entries(desiredLevels).map((val) => {\r\n            val[1].purchaseOrders.forEach((inner_val) => inner_arr.push(inner_val));\r\n            return val[1];\r\n        });\r\n\r\n        if (inner_arr.length === 0) {\r\n            setForceReinc(true);\r\n        }\r\n        else {\r\n            setForceReinc(false);\r\n        }\r\n\r\n    }, [desiredLevels, dataLoaded])\r\n\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flex: '1',\r\n                backgroundColor: 'black',\r\n                position: 'relative',\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flex: '1',\r\n                    backgroundColor: 'rgba(255,255,255, 0.05)',\r\n                    paddingLeft: '12px'\r\n                }}\r\n            >\r\n                {/* Current Card + Wanted Levels */}\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignSelf: 'start',\r\n                        width: '900px',\r\n                        border: \"2px solid rgba(255,255,255,0.8)\",\r\n                        margin: '12px 36px 0 0px',\r\n                        borderRadius: '12px',\r\n                        height: 'calc(100vh - 68px)',\r\n                        paddingBottom: '12px'\r\n                    }}\r\n                >\r\n                    {/* header */}\r\n                    <div\r\n                        style={{ backgroundColor: 'rgba(255,255,255, 0.05)', }}\r\n                    >\r\n                        <div\r\n                            className='importantText'\r\n                            style={{ fontSize: '36px', display: 'flex', alignItems: 'center', justifyContent: 'center', margin: '12px 0' }}\r\n                        >\r\n                            {`Current Residue${stillBuying ? ` - STILL BUYING` : ``}`}\r\n                        </div >\r\n                    </div >\r\n\r\n                    {/* Card List */}\r\n                    <div style={{\r\n                        height: 'calc(100% - 42px)', padding: '0 6px 0 0'\r\n                    }}>\r\n\r\n                        <div style={{\r\n                            display: 'flex', flexWrap: 'wrap', maxHeight: '100%',\r\n                            overflowY: 'auto',\r\n                        }}>\r\n                            {Object.entries(residueMap).filter((value) => value[0] !== 'locked').sort((a, b) => a[1].order - b[1].order).map((value, index) => {\r\n                                let key = value[0];\r\n                                let params = value[1];\r\n\r\n                                return <ResidueCard\r\n                                    data={data}\r\n                                    desiredLevels={desiredLevels}\r\n                                    setDesiredLevels={setDesiredLevels}\r\n                                    params={{ ...params, key_inner: key, currentResidue: currentResidue }}\r\n                                    key={index}\r\n                                    forceReinc={forceReinc}\r\n                                />\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n\r\n                {/* Suggested Purchase Order */}\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignSelf: 'start',\r\n                        width: '445px',\r\n                        border: \"2px solid rgba(255,255,255,0.8)\",\r\n                        margin: '12px 36px 12px 0px',\r\n                        borderRadius: '12px',\r\n                        height: 'calc(100vh - 68px)',\r\n                        paddingBottom: '12px',\r\n                        overflow: 'hidden',\r\n                    }}\r\n                >\r\n                    {/* header */}\r\n                    <div\r\n                        style={{ backgroundColor: 'rgba(255,255,255, 0.05)', }}\r\n                    >\r\n                        <div\r\n                            className='importantText'\r\n                            style={{ fontSize: '36px', display: 'flex', alignItems: 'center', justifyContent: 'center', margin: '12px 0' }}\r\n                        >\r\n                            Suggested Purchase Order\r\n                        </div >\r\n                    </div >\r\n\r\n                    {/* Card List */}\r\n                    <div style={{\r\n                        height: 'calc(100% - 42px)', padding: '0 6px 0 0'\r\n                    }}>\r\n                        {!stillBuying && (\r\n                            <div className='suggestedOrder importantText'\r\n                                style={{\r\n                                    display: 'flex', flexDirection: 'column', height: 'calc(100% - 11px)',\r\n                                    overflowY: 'auto', alignItems: 'center'\r\n                                }}\r\n                            >\r\n                                <h2 style={{ marginBottom: '3px' }}>Affordable Purchase Order</h2>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        let finalLevels = {};\r\n                                        affordablePurchases.forEach((purchase) => {\r\n                                            finalLevels[purchase.params.key] = purchase.desiredLevel\r\n                                        });\r\n                                        setDesiredLevels({});\r\n                                        setRunTimeData((curData) => {\r\n                                            let temp_data = { ...curData };\r\n                                            let leftoverRes = mathHelper.subtractDecimal(currentResidue, affordableCost);\r\n                                            temp_data.CurrentResidueBD = { mantissa: leftoverRes.mantissa, exponent: leftoverRes.exponent };\r\n                                            for (const [key, value] of Object.entries(finalLevels)) {\r\n                                                temp_data[key] = value;\r\n                                            }\r\n                                            return temp_data;\r\n                                        });\r\n\r\n                                    }}\r\n                                >Accept</button>\r\n                                {affordablePurchases.map((val, index) => {\r\n                                    // return <ResideOrderCard data={val} key={index} />\r\n                                    return <ResideOrderCard data={val} key={index} />\r\n                                })}\r\n                                <h2 style={{ marginBottom: '3px' }}>Future Purchase Order</h2>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        let finalLevels = {};\r\n                                        futurePurchases.forEach((purchase) => {\r\n                                            finalLevels[purchase.params.key] = purchase.desiredLevel\r\n                                        });\r\n                                        setDesiredLevels({});\r\n                                        setRunTimeData((curData) => {\r\n                                            let temp_data = { ...curData };\r\n                                            let leftoverRes = mathHelper.subtractDecimal(currentResidue, runningCost);\r\n                                            temp_data.CurrentResidueBD = { mantissa: leftoverRes.mantissa, exponent: leftoverRes.exponent };\r\n                                            for (const [key, value] of Object.entries(finalLevels)) {\r\n                                                temp_data[key] = value;\r\n                                            }\r\n                                            return temp_data;\r\n                                        });\r\n\r\n                                    }}\r\n                                >Accept</button>\r\n                                {futurePurchases.map((val, index) => {\r\n                                    // return <ResideOrderCard data={val} key={index} />\r\n                                    return <ResideOrderCard data={val} key={index} />\r\n                                })}\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","C:\\Users\\denys\\Documents\\GitHub\\gameplay-planner\\src\\app\\residue\\residueMapping.js",[],[],{"ruleId":"234","severity":1,"message":"235","line":103,"column":8,"nodeType":"236","endLine":103,"endColumn":82,"suggestions":"237"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'desiredLevel', 'level', 'params', 'purchaseOrders', and 'setDesiredLevels'. Either include them or remove the dependency array. If 'setDesiredLevels' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["238"],{"desc":"239","fix":"240"},"Update the dependencies array to be: [desiredLevels, needPurchase, clientWeight, runTimeWeight, weight, locked, params, desiredLevel, setDesiredLevels, purchaseOrders, level]",{"range":"241","text":"242"},[3698,3772],"[desiredLevels, needPurchase, clientWeight, runTimeWeight, weight, locked, params, desiredLevel, setDesiredLevels, purchaseOrders, level]"]