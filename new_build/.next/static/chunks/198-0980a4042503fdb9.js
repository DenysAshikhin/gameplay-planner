"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[198],{37790:function(e,t){t.Z={roundTwoDecimal:function(e){return Math.round((e+Number.EPSILON)*100)/100},roundThreeDecimal:function(e){return Math.round((e+Number.EPSILON)*1e3)/1e3},roundFiveDecimal:function(e){return Math.round((e+Number.EPSILON)*1e5)/1e5},roundInt:function(e){return Math.round((e+Number.EPSILON)*1)/1},calculateLogarithm:function(e,t){return Math.log(t)/Math.log(e)},calcPOW:function(e){return e.mantissa*Math.pow(10,e.exponent)},secondsToStringWithS:function(e){let t="",a=0,n=0,l=0,o=0;return(a=Math.floor(e/86400),n=Math.floor(e%86400/3600),l=Math.floor(e%3600/60),o=this.roundInt(e%86400%60),a==Number.POSITIVE_INFINITY||a==Number.NEGATIVE_INFINITY)?""+a:(60===o&&(o=0,l++),60===l&&(l=0,n++),24===n&&(n=0,a++),a>0&&(t+="".concat(a<10?"0"+a:a,"d:")),n>0&&(t+="".concat(n<10?"0"+n:n,"h:")),l>0&&(t+="".concat(l<10?"0"+l:l,"m:")),o>0?t+="".concat(o<10?"0"+o:o,"s"):t+="0s",t)},secondsToString:function(e){let t="",a=0,n=0,l=0;return(a=Math.floor(e/86400),n=Math.floor(e%86400/3600),60===(l=this.roundInt(e%3600/60))&&(l=0,n++),24===n&&(n=0,a++),a==Number.POSITIVE_INFINITY||a==Number.NEGATIVE_INFINITY)?""+a:(a>0&&(t+="".concat(a<10?"0"+a:a,"d:"),0===n&&(t+="00h")),(n>0||0===n&&0===a)&&(t+="".concat(n<10?"0"+n:n,"h")),0===a&&(t+=":",l>0?t+="".concat(l<10?"0"+l:l,"m"):t+="0s"),t)},bonusColorMap:{1009:{color:"cyan"},1010:{color:"maroon"},1011:{color:"purple"},1012:{color:"yellow"},1013:{color:"red"},1014:{color:"blue"},1015:{color:"gray"},1016:{color:"green"}}}},62109:function(e,t,a){var n=a(37790);t.Z={EXP_DMG_MOD:.1,EXP_TIME_MOD:.05,SYNERGY_MOD_STEP:.25,EXP_TOKEN_MOD:.05,SOUL_CLOVER_STEP:.25,calculatePetBaseDamage:function(e,t){let a=t||(null==e?void 0:e.Rank),n=(null==e?void 0:e.BaseDungeonDamage)*(1+.05*a);return Number(n)},calculateBestHours:function(e,t,a,n){let l;(null==a?void 0:a.residueToken)&&a.residueToken;let o=a.data.ExpeditionTokenBonuses;t||(t=[1,2,3,4,5,6,7,8,9,10,11,12]),l||(l=(null==a?void 0:a.clover)?a.clover:0),n||(n=1);let s=this.calculateGroupScore(e),i=s.tokenMult*Math.pow(1+this.SOUL_CLOVER_STEP,l)*o*n,r=[];for(let e=0;e<t.length;e++){let a=t[e],n=i*a,l=Math.floor(n),o=l/n,s=n-l,u={wastedHR:s/a,tokenHR:i,wasted:s,hours:a,totalTokens:n,floored:l,effeciency:o};r.push(u)}return r},calculateGroupScore:function(e,t){let a=0,n=0,l=0,o=0,s=0,i=0,r=0,u=0,c=0,m=0,h=0,p=0,g={},D=0;e.forEach(e=>{a+=this.calculatePetBaseDamage(e,t),D+=this.calculatePetBaseDamage(e,0),e.BonusList.some(e=>1013===e.ID)&&n++,e.BonusList.some(e=>1010===e.ID)&&i++,e.BonusList.some(e=>1011===e.ID)&&r++,e.BonusList.some(e=>1014===e.ID)&&c++,e.BonusList.some(e=>1012===e.ID)&&l++,e.BonusList.some(e=>1015===e.ID)&&u++,e.BonusList.some(e=>1016===e.ID)&&m++,g[e.Type]?g[e.Type]++:g[e.Type]=1,e.ID&&(o+=this.SYNERGY_MOD_STEP)}),s=a;let[d,I]=Object.values(g);return d>0&&I>0&&(o+=this.SYNERGY_MOD_STEP),d>1&&I>1&&(o+=this.SYNERGY_MOD_STEP),a*=1+n*this.EXP_DMG_MOD,D*=1+n*this.EXP_DMG_MOD,a*=1+l*this.EXP_TIME_MOD,D*=1+l*this.EXP_TIME_MOD,a*=o,D*=o,p=m*this.EXP_TOKEN_MOD,h=o+o*p,{groupScore:a,baseGroupScore:s,groupScoreMax:D,dmgCount:n,timeCount:l,synergyBonus:o,cardPowerCount:i,expRewardCount:r,cardXpCount:c,rpRewardCount:u,tokenRewardCount:m,tokenModif:p,tokenMult:h}},getBestDamagePets:function(e,t,a){let n={},l=JSON.parse(JSON.stringify(e)),o=[],s=[],updateStrongest=e=>{1===e.Type?0===o.length?o.push(e):1===o.length?this.calculatePetBaseDamage(o[0],t)<this.calculatePetBaseDamage(e,t)?(o[1]=o[0],o[0]=e):o[1]=e:this.calculatePetBaseDamage(o[0],t)<this.calculatePetBaseDamage(e,t)?(o[1]=o[0],o[0]=e):this.calculatePetBaseDamage(o[1],t)<this.calculatePetBaseDamage(e,t)&&(o[1]=e):2===e.Type&&(0===s.length?s.push(e):1===s.length?this.calculatePetBaseDamage(s[0],t)<this.calculatePetBaseDamage(e,t)?(s[1]=s[0],s[0]=e):s[1]=e:this.calculatePetBaseDamage(s[0],t)<this.calculatePetBaseDamage(e,t)?(s[1]=s[0],s[0]=e):this.calculatePetBaseDamage(s[1],t)<this.calculatePetBaseDamage(e,t)&&(s[1]=e))},i=[],r={};if(a&&a.requiredPets)for(let e=0;e<a.requiredPets.length;e++)r[a.requiredPets[e].ID]=a.requiredPets[e];for(let e=0;e<l.length;e++){let t=l[e],a=!1;for(let e=0;e<t.BonusList.length;e++){let l=t.BonusList[e];t.ID in r?(n[t.ID]=t,a=!0):1013!==l.ID||n[t.ID]||(n[t.ID]=t,a=!0),1012!==l.ID||n[t.ID]||(n[t.ID]=t,a=!0)}a?updateStrongest(t):i.push(t)}i.sort((e,a)=>this.calculatePetBaseDamage(a,t)-this.calculatePetBaseDamage(e,t));let u=0,c=0;i.map(e=>{1===e.Type&&c++,2===e.Type&&u++});let m=0,h=0,p=0;if(c<2){let e=[];c=0,i.map(t=>{1===t.Type&&(e.push(t),n[t.ID]=t,i=i.filter(e=>e.ID!==t.ID))})}if(u<2){let e=[];u=0,i.map(t=>{2===t.Type&&(e.push(t),n[t.ID]=t,i=i.filter(e=>e.ID!==t.ID))})}for(let e=0;e<i.length;e++){let a=i[e];if(m<2&&1===a.Type||u<=0){if(o.length>0){let e=0;for(;o.length>0&&e<=o.length;){let l=o[e];l&&this.calculatePetBaseDamage(l,t)>=this.calculatePetBaseDamage(a,t)&&(o.splice(e,1),n[a.ID]=a,m++,p++,e--),e++}}(m<2||p<4&&u<=0)&&(n[a.ID]=a,m++,p++,c--)}else if(h<2&&2===a.Type||c<=0){if(s.length>0){let e=0;for(;s.length>0&&e<=s.length;){let l=s[e];l&&this.calculatePetBaseDamage(l,t)>=this.calculatePetBaseDamage(a,t)&&(s.splice(e,1),n[a.ID]=a,h++,p++,e--),e++}}(h<2||p<4&&c<=0)&&(n[a.ID]=a,h++,p++,u--)}if(p>3)break}let g=Object.values(n);return g.sort((e,t)=>t.ID-e.ID),g},calcBestDamageGroup:function(e,t,a,n){a=a||7;let l={},o={},s={};for(let t=0;t<e.length;t++)s[e[t].ID]=JSON.parse(JSON.stringify(e[t]));let i=null==n?void 0:n.activeBonuses;i||(i=[]);let memoizedGroupScore=e=>{let a=e.ID;if(!l[a]||l[a]){let n=this.calculateGroupScore(e.team,t),o=n.tokenMult;l[a]={token:o,damage:n.groupScore,other:n}}return l[a]},r={},u={},c={};if(null==n?void 0:n.petWhiteList)for(let e=0;e<n.petWhiteList.length;e++){let t=n.petWhiteList[e];"blacklist"===t.placement?r[t.id]=t:"team"===t.placement?u[t.id]=t:"rel"===t.placement&&(c[t.id]=t)}let getCombinationsInner=(e,t,a)=>{let n=-1,l=0,o=0;e.forEach(e=>{1===e.Type?o++:l++});let s=!0;l>1&&o>1&&(s=!1);let i={},r={},u={},c={};for(let e=0;e<a.length;e++){let t=a[e];"team"!==t.placement||(t.parameters.fake?2!==t.pet.Type||u[t.pet.ID]?c[t.pet.ID]||(c[t.pet.ID]=!0):u[t.pet.ID]=!0:(1!==t.pet.Type||r[t.pet.ID])&&r[t.pet.ID]||(r[t.pet.ID]=!0))}let f=(l,o)=>{if(o.length>0){let e=!0,t=0,l=0,m=0,h=0,p=0,g=0;for(let e=0;e<o.length;e++){let t=o[e];1===t.Type?p++:g++,1===t.Type&&c[t.ID]?h++:u[t.ID]&&m++}let D=Object.entries(i).length,d=Object.entries(r).length,I=Object.entries(u).length,b=Object.entries(c).length,M=2>D?2-D:0,P=2>d?2-d:0,E=0;if(I>0){let t=I<M?I:M;m>M?e=!1:m!==t?e=!1:E+=t}if(b>0){let t=b<P?b:P;h>P?e=!1:h!==t?e=!1:E+=t}let T=d>2?d-2:0;if((g>2+(D>2?D-2:0)||p>2+T)&&!s&&(e=!1),e){a.length;for(let n=0;n<a.length;n++){let s=a[n],i=!1;if("team"===s.placement){let a=0;for(let e=0;e<o.length;e++){let n=o[e];n.ID===s.pet.ID&&(s.parameters.fake?t++:(l++,1===n.Type?d++:D++),a++)}if(a>0)i=!0;else if(!s.parameters.fake){e=!1,i=!1;break}}else if(s.requiredNumber>0){let t=0;for(let e=0;e<o.length;e++)o[e].BonusList.find(e=>e.ID===s.bonus.id)&&(t++,l++);if(t>=s.requiredNumber)i=!0;else{e=!1,i=!1;break}}else if(s.exactNumber>-1){let t=0;for(let e=0;e<o.length;e++)o[e].BonusList.find(e=>e.ID===s.bonus.id)&&(t++,l++);if(t===s.exactNumber)i=!0;else{e=!1,i=!1;break}}else if("rel"===s.bonus.placement){let a=0;for(let e=0;e<o.length;e++)o[e].BonusList.find(e=>e.ID===s.bonus.id)&&(a++,t++);if(a<=s.bonus.amount){if(s.tempRequired>0){if(s.bonus.amount<s.tempRequired&&a===s.bonus.amount||a>=s.tempRequired)i=!0;else{e=!1,i=!1;break}}else i=!0}else{e=!1,i=!1;break}}else s.placement;if(s.tempMax||0===s.tempMax&&!s.disabled&&void 0!==s.disabled){let t=0;for(let e=0;e<o.length;e++){let a=o[e];s.pets.find(e=>e.ID===a.ID)&&t++}if(t<=s.tempMax)i=!0;else{e=!1,i=!1;break}}i&&s.passed++}if(E>0&&e&&(E+l>4&&(E=4-l),e=!(t<E)),e){let e="";for(let t=0;t<o.length;t++)e+=o[t].ID,t+1!==o.length&&(e+=",");let t={ID:e,team:o};if(-1===n)n={ID:e,team:o,score:memoizedGroupScore(t)};else{let a=memoizedGroupScore(t);a.damage===n.score.damage?a.token>n.score.token&&(n={ID:e,team:o,score:a}):a.damage>n.score.damage&&(n={ID:e,team:o,score:a})}}}}if(o.length!==t)for(let t=l;t<e.length;t++)f(t+1,[...o,e[t]])};return f(0,[]),n.team&&n.team.sort((e,t)=>e.Type===t.Type?e.ID-t.ID:e.Type-t.Type),n},m=new Date,h=new Date,p=new Date,g=new Date,D=[],d=e.filter(e=>(e.ID in u&&(u[e.ID].pet=e),!(e.ID in r)&&!(e.ID in u)));for(let e=0;e<a;e++){let n=a-e,l=[],p={},g={},I=[];for(let[t,a]of Object.entries(u))if(a.parameters.team===e){if(!s[a.pet.ID])continue;I.push(a),d.push(a.pet),l.push(a.pet)}if(i.length>0){for(let e=0;e<i.length;e++)p[i[e].id]=i[e],g[i[e].id]={bonus:i[e],pets:[],active:!0};d.forEach(e=>{e.ID in r||e.BonusList.forEach(t=>{t.ID in p&&("top"===p[t.ID].placement&&l.push(e),g[t.ID].pets.push(e))})});for(let t=0;t<i.length;t++){let a=g[i[t].id];if("bottom"===a.bonus.placement){let t,o=a.pets.length,s=0,i=!1,r=0;switch(a.bonus.equation){case"min":o<a.bonus.amount?(t=0,i=!0):(o<=n*a.bonus.amount&&(r=a.bonus.amount),t=o%a.bonus.amount,o-=t,s=o>=0?Math.ceil(o/a.bonus.amount):0);break;case"max":break;case"eq":o<a.bonus.amount?(t=0,i=!0):(o<=n*a.bonus.amount&&(r=a.bonus.amount),t=o%a.bonus.amount,o-=t,s=a.pets.length>=a.bonus.amount?Math.ceil(o/a.bonus.amount):0)}if(n<=s)g[a.bonus.id].tempMax=r,a.pets.forEach(e=>{l.push(e)});else{let n=[];for(let t=0;t<g[a.bonus.id].pets.length;t++){let l=g[a.bonus.id].pets[t];l.ID in u&&"team"===u[l.ID].placement&&u[l.ID].parameters.team===e||n.push(l)}g[a.bonus.id].pets=n,g[a.bonus.id].active=!1,g[a.bonus.id].tempMax=t,g[a.bonus.id].disabled=i}}else if("top"===a.bonus.placement){let e=a.pets.length,t=0;e<=n*a.bonus.amount&&(t=a.bonus.amount),g[a.bonus.id].tempMax=t}}for(let e=0;e<i.length;e++){let t=g[i[e].id];if(!t.active)continue;let a=0,n=-1;switch(t.hardFail=!1,t.bonus.equation){case"min":t.bonus.amount>t.pets.length?(a=0,t.hardFail=!0):a=t.bonus.amount;break;case"max":break;case"eq":t.bonus.amount>t.pets.length?(n=-1,t.hardFail=!0):n=t.bonus.amount}t.requiredNumber=a,t.exactNumber=n}}let b=this.getBestDamagePets(d,t,{requiredPets:l});for(let[e,t]of Object.entries(g))t.passed=0;m=new Date;let M=!1,P=!1,E=Object.values(g);for(let e=0;e<I.length;e++)E.push(I[e]);let T=getCombinationsInner(b,Math.min(4,b.length),E);if(h=new Date,console.log("time to get combinations ".concat(T.length,": ").concat((h-m)/1e3," seconds")),-1===T&&I.length>0){E=[];for(let e=0;e<I.length;e++)E.push(I[e]);-1===(T=getCombinationsInner(b,Math.min(4,b.length),E))?P=!0:M=!0}for(let[t,a]of(-1===T&&(P=!0),Object.entries(g)))if(!(t in o)&&(!a.passed||a.hardFail)){let n="Filter failed on group ".concat(e+1,":\n");switch(a.bonus.equation){case"min":n+="not enough pets, min ".concat(a.bonus.amount," but ").concat(a.pets.length," remain");break;case"max":break;case"eq":n+="not enough pets, req. ".concat(a.bonus.amount," but ").concat(a.pets.length," remain");break;default:throw Error("impossible case")}o[t]=n}if(P){!(Object.values(g).length>0)||"generic"in o||(o.generic="Individual filters all succeeded, but the combination of all is impossible starting group ".concat(e+1));break}if(M){D.push(T.team);for(let e=0;e<T.team.length;e++)T.team[e].ID in c&&delete c[T.team[e].ID];d=d.filter(e=>{let t=!0;for(let a=0;a<T.team.length;a++)if(T.team[a].ID===e.ID){t=!1;break}return t})}else{let a=this.calculateGroupScore(T.team,t),n=a.groupScore,l=Object.values(c);if(i.length>0||l.length>0){let r=!1;for(let o=0;o<l.length;o++){let i=l[o],u=i.parameters.damageBias/100,c=n*u,m=T.team.length,h=0,p=s[i.id],g=this.calculatePetBaseDamage(p,t);if(p&&(p.BonusList.forEach(e=>{let n=0;1013===e.ID?(g*=1+this.EXP_DMG_MOD,m>1?n+=a.baseGroupScore/m*(m-1)*u*this.EXP_DMG_MOD:n=a.baseGroupScore*u*this.EXP_DMG_MOD,h+=n):1012===e.ID&&(g*=1+this.EXP_TIME_MOD,m>1?n+=3*this.calculatePetBaseDamage(p,t)*u*this.EXP_TIME_MOD:n=a.baseGroupScore*u*this.EXP_TIME_MOD,h+=n)}),(g+=h)>c)){r=!0;let t=JSON.parse(JSON.stringify(i));t.placement="team",t.parameters.team=e,t.pet=p,t.parameters.fake=!0,I.push(t),b.find(e=>e.ID===p.ID)||b.push(p)}}for(let e=0;e<i.length;e++){let l=i[e],o=l.relThresh/100,s=n*o,u=!1,c=g[l.id];"rel"!==l.placement||(c.pets.forEach(e=>{let n=this.calculatePetBaseDamage(e,t),l=T.team.length,i=0;e.BonusList.forEach(e=>{let t=0;1013===e.ID?(n*=1+this.EXP_DMG_MOD,l>1?t+=a.baseGroupScore/l*(l-1)*o*this.EXP_DMG_MOD:t=a.baseGroupScore*o*this.EXP_DMG_MOD,i+=t):1012===e.ID&&(n*=1+this.EXP_TIME_MOD,l>1?t+=a.baseGroupScore/l*(l-1)*o*this.EXP_TIME_MOD:t=a.baseGroupScore*o*this.EXP_TIME_MOD,i+=t)}),(n+=i)>s&&(r=!0,u=!0,c.active=!0,c.tempMin=!0,c.tempRequired=0!==c.tempRequired&&c.tempRequired?c.tempRequired+1:1,c.tempRequiredPets||(c.tempRequiredPets=[]),c.tempRequiredPets.push(e),b.find(t=>t.ID===e.ID)||b.push(e))}),u||(c.tempMin=null,c.tempRequired=0,c.tempRequiredPets=[],c.active=!1))}if(r){m=new Date;let t=Object.values(g);for(let e=0;e<I.length;e++)t.push(I[e]);let a=getCombinationsInner(b,Math.min(4,b.length),t);if(console.log("got new combinations after the rel calcs"),-1!==a&&(I=I.filter(e=>!e.parameters.fake||!a.team.find(t=>t.ID===e.id))),-1===a&&0===I.length){"generic"in o||(o.generic="Individual filters all succeeded, but the combination of all is impossible starting group ".concat(e+1," (too many relative pets in one team)"));break}if(-1!==a){T=a;for(let e=0;e<t.length;e++)t[e].id in c&&a.team.find(a=>a.ID===t[e].id)&&delete c[t[e].id]}}}D.push(T.team);for(let e=0;e<T.team.length;e++)T.team[e].ID in c&&delete c[T.team[e].ID];d=d.filter(e=>{let t=!0;for(let a=0;a<T.team.length;a++)if(T.team[a].ID===e.ID){t=!1;break}return t})}}return g=new Date,console.log("time to get best combo: ".concat((g-p)/1e3," seconds")),(null==n?void 0:n.setFailedFilters)&&n.setFailedFilters(o),D},calcBestTokenGroup:function(e,t,a,n){a=a||7;let l=1,o={},memoizedGroupScore=e=>{let a=e.ID;if(!o[a]||o[a]){let n=this.calculateGroupScore(e.team,t),l=n.tokenMult;o[a]={token:l,damage:n.groupScore,other:n}}return o[a]},getCombinationsInner=(e,t,a)=>{let n=-1,f=(o,s)=>{let i=0,r=0,u=[],c=[];a&&(i=a.min?a.min:0,u=a.pets?a.pets:[],c=a.ignoredPets?a.ignoredPets:[]);let m=0;if(s.length>0){let e="";for(let t=0;t<s.length;t++){if(e+=s[t].ID,t+1!==s.length&&(e+=","),i>0)for(let e=0;e<u.length;e++)s[t].ID==u[e].ID&&m++;if(c.length>0)for(let e=0;e<c.length;e++)s[t].ID==c[e].ID&&r++}if(m===i&&0===r){let t={ID:e,team:s};if(-1===n)n={ID:e,team:s,score:memoizedGroupScore(t)};else{let a=memoizedGroupScore(t);1===l?a.damage>n.score.damage&&(n={ID:e,team:s,score:a}):a.token===n.score.token?a.other.tokenRewardCount>0?a.damage<n.score.damage&&(n={ID:e,team:s,score:a}):a.damage>n.score.damage&&(n={ID:e,team:s,score:a}):a.token>n.score.token&&(n={ID:e,team:s,score:a})}}}if(s.length!==t)for(let t=o;t<e.length;t++)f(t+1,[...s,e[t]])};return f(0,[]),n.team&&n.team.sort((e,t)=>e.Type===t.Type?e.ID-t.ID:e.Type-t.Type),n},s=new Date,i=new Date,r=[];for(let o=0;o<a;o++){let s=-1,i=JSON.parse(JSON.stringify(e)),u=0,c=0,m=[],h=0,p=0,g=0;i.forEach(e=>{e.BonusList.forEach(a=>{1016===a.ID&&(m.push(e),c+=this.calculatePetBaseDamage(e,t),u++,1===e.Type?g++:2===e.Type&&p++)})}),c/=u,i=(i=this.getBestDamagePets(i,t,{requiredPets:m})).sort((e,a)=>this.calculatePetBaseDamage(a,t)-this.calculatePetBaseDamage(e,t));for(let e=0;e<2;e++)h+=this.calculatePetBaseDamage(i[e],t);h/=2;let D=this.calcBestDamageGroup(i,t,1)[0];if(h=D?this.calculateGroupScore(D,t):[],u>=4&&p>=2&&g>=2)l=2,s=getCombinationsInner(i,Math.min(4,i.length),{pets:m,min:4}),l=1;else if(1===u)s=o===a-1?getCombinationsInner(i,Math.min(4,i.length),{pets:m,min:m.length}):getCombinationsInner(i,Math.min(4,i.length));else if(u>1){let e=(100-n.tokenDamageBias)/100*h.groupScore;e/=5.75;let t=2;(p>1&&g>0||g>1&&p>0)&&(t=3);let r=Math.ceil(u/t);r>=a-o?(l=r-(a-o)>=0?1:2,s=getCombinationsInner(i,Math.min(4,i.length),{pets:m,min:t}),l=1):c>e?(l=a-o-r>=0?1:2,s=getCombinationsInner(i,Math.min(4,i.length),{pets:m,min:t}),l=1):s=getCombinationsInner(i,Math.min(4,i.length),{pets:[],min:0,ignoredPets:m})}else s=getCombinationsInner(i,Math.min(4,i.length));if(-1===s)break;memoizedGroupScore(s),r.push(s.team),e=e.filter(e=>{let t=!0;for(let a=0;a<s.team.length;a++)if(s.team[a].ID===e.ID){t=!1;break}return t})}return i=new Date,console.log("time to get best combo: ".concat((i-s)/1e3," seconds")),r},findBestGroups:function(e,t,a,n,l){switch(a){case 1:case 3:return this.calcBestDamageGroup(e,t,n,l);case 2:return this.calcBestTokenGroup(e,t,n,l)}},calcEquipBonus:function(e,t){let a=1;return 100*(23===t.ID?.5*((Math.pow(1+t.Gain,e.Level)-1+Math.max(0,(.005*n.Z.calculateLogarithm(1.0125,e.Level+1)-1)*.5))*(1+.005*n.Z.calculateLogarithm(1.075,e.Rank+1))):28===t.ID?(Math.pow(1+t.Gain,e.Level)-1+Math.max(0,(.005*n.Z.calculateLogarithm(1.0125,e.Level+1)-1)*.25))*(1+.005*n.Z.calculateLogarithm(1.075,e.Rank+1)):29===t.ID?(Math.pow(1+t.Gain,e.Level)-1+Math.max(0,(.005*n.Z.calculateLogarithm(1.0125,e.Level+1)-1)*.125))*(1+.005*n.Z.calculateLogarithm(1.075,e.Rank+1)):(Math.pow(1+t.Gain,e.Level)-1)*(1+.02*e.Rank))}}},39768:function(e,t,a){var n=a(57437),l=a(2265);a(65947);var o=a(38606),s=a(60731);t.Z=e=>{let{data:t,onSelect:a,placeholder:i,updateBox:r,margin:u}=e,[c,m]=(0,l.useState)(null);return(0,n.jsx)("div",{style:{width:(null==t?void 0:t.width)?t.width:"288px",minHeight:"0px",height:"36px",margin:u||""},children:(0,n.jsx)(o.Z,{options:t.list,renderInput:e=>{let t=e.key;return delete e.key,(0,l.createElement)(s.Z,{...e,key:t,placeholder:(null==c?void 0:c.label)&&r?c.label:i||"Enter a pet"})},ListboxProps:{style:{maxHeight:150}},value:c,clearOnBlur:!0,isOptionEqualToValue:(e,t)=>-1!==t.id&&e.label===t.label,onChange:(e,t)=>{t&&(a(t),r&&m(t))}})})}},33187:function(e,t){t.Z={src:"/_next/static/media/x_icon.2c19be28.svg",height:800,width:800,blurWidth:0,blurHeight:0}}}]);