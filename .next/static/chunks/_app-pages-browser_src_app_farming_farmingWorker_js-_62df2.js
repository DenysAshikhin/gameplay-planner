/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	// runtime can't be in strict mode because a global variable is assign and maybe created.
/******/ 	var __webpack_modules__ = ({

/***/ "(app-pages-browser)/./node_modules/break_infinity.js/dist/break_infinity.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/break_infinity.js/dist/break_infinity.esm.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var pad_end__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pad-end */ \"(app-pages-browser)/./node_modules/pad-end/index.js\");\n/* harmony import */ var pad_end__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pad_end__WEBPACK_IMPORTED_MODULE_0__);\nvar n=9e15,e=function(){for(var t=[],n=-323;n<=308;n++)t.push(Number(\"1e\"+n));return function(n){return t[n+323]}}(),r=function(t){return t instanceof a?t:new a(t)},i=function(t,n){return(new a).fromMantissaExponent(t,n)},o=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)};function u(t,n,e,r){var i=n.mul(e.pow(r));return a.floor(t.div(i).mul(e.sub(1)).add(1).log10()/e.log10())}function s(t,n,e,r){return n.mul(e.pow(r)).mul(a.sub(1,e.pow(t))).div(a.sub(1,e))}var a=function(){function a(t){this.mantissa=NaN,this.exponent=NaN,void 0===t?(this.m=0,this.e=0):t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):this.fromString(t)}return Object.defineProperty(a.prototype,\"m\",{get:function(){return this.mantissa},set:function(t){this.mantissa=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"e\",{get:function(){return this.exponent},set:function(t){this.exponent=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"s\",{get:function(){return this.sign()},set:function(t){if(0===t)return this.e=0,void(this.m=0);this.sgn()!==t&&(this.m=-this.m)},enumerable:!1,configurable:!0}),a.fromMantissaExponent=function(t,n){return(new a).fromMantissaExponent(t,n)},a.fromMantissaExponent_noNormalize=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)},a.fromDecimal=function(t){return(new a).fromDecimal(t)},a.fromNumber=function(t){return(new a).fromNumber(t)},a.fromString=function(t){return(new a).fromString(t)},a.fromValue=function(t){return(new a).fromValue(t)},a.fromValue_noAlloc=function(t){return t instanceof a?t:new a(t)},a.abs=function(t){return r(t).abs()},a.neg=function(t){return r(t).neg()},a.negate=function(t){return r(t).neg()},a.negated=function(t){return r(t).neg()},a.sign=function(t){return r(t).sign()},a.sgn=function(t){return r(t).sign()},a.round=function(t){return r(t).round()},a.floor=function(t){return r(t).floor()},a.ceil=function(t){return r(t).ceil()},a.trunc=function(t){return r(t).trunc()},a.add=function(t,n){return r(t).add(n)},a.plus=function(t,n){return r(t).add(n)},a.sub=function(t,n){return r(t).sub(n)},a.subtract=function(t,n){return r(t).sub(n)},a.minus=function(t,n){return r(t).sub(n)},a.mul=function(t,n){return r(t).mul(n)},a.multiply=function(t,n){return r(t).mul(n)},a.times=function(t,n){return r(t).mul(n)},a.div=function(t,n){return r(t).div(n)},a.divide=function(t,n){return r(t).div(n)},a.recip=function(t){return r(t).recip()},a.reciprocal=function(t){return r(t).recip()},a.reciprocate=function(t){return r(t).reciprocate()},a.cmp=function(t,n){return r(t).cmp(n)},a.compare=function(t,n){return r(t).cmp(n)},a.eq=function(t,n){return r(t).eq(n)},a.equals=function(t,n){return r(t).eq(n)},a.neq=function(t,n){return r(t).neq(n)},a.notEquals=function(t,n){return r(t).notEquals(n)},a.lt=function(t,n){return r(t).lt(n)},a.lte=function(t,n){return r(t).lte(n)},a.gt=function(t,n){return r(t).gt(n)},a.gte=function(t,n){return r(t).gte(n)},a.max=function(t,n){return r(t).max(n)},a.min=function(t,n){return r(t).min(n)},a.clamp=function(t,n,e){return r(t).clamp(n,e)},a.clampMin=function(t,n){return r(t).clampMin(n)},a.clampMax=function(t,n){return r(t).clampMax(n)},a.cmp_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.compare_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.eq_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.equals_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.neq_tolerance=function(t,n,e){return r(t).neq_tolerance(n,e)},a.notEquals_tolerance=function(t,n,e){return r(t).notEquals_tolerance(n,e)},a.lt_tolerance=function(t,n,e){return r(t).lt_tolerance(n,e)},a.lte_tolerance=function(t,n,e){return r(t).lte_tolerance(n,e)},a.gt_tolerance=function(t,n,e){return r(t).gt_tolerance(n,e)},a.gte_tolerance=function(t,n,e){return r(t).gte_tolerance(n,e)},a.log10=function(t){return r(t).log10()},a.absLog10=function(t){return r(t).absLog10()},a.pLog10=function(t){return r(t).pLog10()},a.log=function(t,n){return r(t).log(n)},a.log2=function(t){return r(t).log2()},a.ln=function(t){return r(t).ln()},a.logarithm=function(t,n){return r(t).logarithm(n)},a.pow10=function(t){return Number.isInteger(t)?o(1,t):i(Math.pow(10,t%1),Math.trunc(t))},a.pow=function(t,n){return\"number\"==typeof t&&10===t&&\"number\"==typeof n&&Number.isInteger(n)?o(1,n):r(t).pow(n)},a.exp=function(t){return r(t).exp()},a.sqr=function(t){return r(t).sqr()},a.sqrt=function(t){return r(t).sqrt()},a.cube=function(t){return r(t).cube()},a.cbrt=function(t){return r(t).cbrt()},a.dp=function(t){return r(t).dp()},a.decimalPlaces=function(t){return r(t).dp()},a.affordGeometricSeries=function(t,n,e,i){return u(r(t),r(n),r(e),i)},a.sumGeometricSeries=function(t,n,e,i){return s(t,r(n),r(e),i)},a.affordArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e)).sub(e.div(2)),o=i.pow(2);return i.neg().add(o.add(e.mul(t).mul(2)).sqrt()).div(e).floor()}(r(t),r(n),r(e),r(i))},a.sumArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e));return t.div(2).mul(i.mul(2).plus(t.sub(1).mul(e)))}(r(t),r(n),r(e),r(i))},a.efficiencyOfPurchase=function(t,n,e){return function(t,n,e){return t.div(n).add(t.div(e))}(r(t),r(n),r(e))},a.randomDecimalForTesting=function(t){if(20*Math.random()<1)return o(0,0);var n=10*Math.random();10*Math.random()<1&&(n=Math.round(n)),n*=Math.sign(2*Math.random()-1);var e=Math.floor(Math.random()*t*2)-t;return i(n,e)},a.prototype.normalize=function(){if(this.m>=1&&this.m<10)return this;if(0===this.m)return this.m=0,this.e=0,this;var t=Math.floor(Math.log10(Math.abs(this.m)));return this.m=-324===t?10*this.m/1e-323:this.m/e(t),this.e+=t,this},a.prototype.fromMantissaExponent=function(t,n){return isFinite(t)&&isFinite(n)?(this.m=t,this.e=n,this.normalize(),this):(t=Number.NaN,n=Number.NaN,this)},a.prototype.fromMantissaExponent_noNormalize=function(t,n){return this.m=t,this.e=n,this},a.prototype.fromDecimal=function(t){return this.m=t.m,this.e=t.e,this},a.prototype.fromNumber=function(t){return isNaN(t)?(this.m=Number.NaN,this.e=Number.NaN):t===Number.POSITIVE_INFINITY?(this.m=1,this.e=n):t===Number.NEGATIVE_INFINITY?(this.m=-1,this.e=n):0===t?(this.m=0,this.e=0):(this.e=Math.floor(Math.log10(Math.abs(t))),this.m=-324===this.e?10*t/1e-323:t/e(this.e),this.normalize()),this},a.prototype.fromString=function(t){if(-1!==t.indexOf(\"e\")){var n=t.split(\"e\");this.m=parseFloat(n[0]),this.e=parseFloat(n[1]),this.normalize()}else if(\"NaN\"===t)this.m=Number.NaN,this.e=Number.NaN;else if(this.fromNumber(parseFloat(t)),isNaN(this.m))throw Error(\"[DecimalError] Invalid argument: \"+t);return this},a.prototype.fromValue=function(t){return t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):\"string\"==typeof t?this.fromString(t):(this.m=0,this.e=0,this)},a.prototype.toNumber=function(){if(!isFinite(this.e))return Number.NaN;if(this.e>308)return this.m>0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;if(this.e<-324)return 0;if(-324===this.e)return this.m>0?5e-324:-5e-324;var t=this.m*e(this.e);if(!isFinite(t)||this.e<0)return t;var n=Math.round(t);return Math.abs(n-t)<1e-10?n:t},a.prototype.mantissaWithDecimalPlaces=function(t){if(isNaN(this.m)||isNaN(this.e))return Number.NaN;if(0===this.m)return 0;var n=t+1,e=Math.ceil(Math.log10(Math.abs(this.m))),r=Math.round(this.m*Math.pow(10,n-e))*Math.pow(10,e-n);return parseFloat(r.toFixed(Math.max(n-e,0)))},a.prototype.toString=function(){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\":this.e<21&&this.e>-7?this.toNumber().toString():this.m+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toExponential=function(e){if(isNaN(this.m)||isNaN(this.e))return\"NaN\";if(this.e>=n)return this.m>0?\"Infinity\":\"-Infinity\";if(this.e<=-n||0===this.m)return\"0\"+(e>0?pad_end__WEBPACK_IMPORTED_MODULE_0___default()(\".\",e+1,\"0\"):\"\")+\"e+0\";if(this.e>-324&&this.e<308)return this.toNumber().toExponential(e);isFinite(e)||(e=17);var r=e+1,i=Math.max(1,Math.ceil(Math.log10(Math.abs(this.m))));return(Math.round(this.m*Math.pow(10,r-i))*Math.pow(10,i-r)).toFixed(Math.max(r-i,0))+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toFixed=function(e){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\"+(e>0?pad_end__WEBPACK_IMPORTED_MODULE_0___default()(\".\",e+1,\"0\"):\"\"):this.e>=17?this.m.toString().replace(\".\",\"\").padEnd(this.e+1,\"0\")+(e>0?pad_end__WEBPACK_IMPORTED_MODULE_0___default()(\".\",e+1,\"0\"):\"\"):this.toNumber().toFixed(e)},a.prototype.toPrecision=function(t){return this.e<=-7?this.toExponential(t-1):t>this.e?this.toFixed(t-this.e-1):this.toExponential(t-1)},a.prototype.valueOf=function(){return this.toString()},a.prototype.toJSON=function(){return this.toString()},a.prototype.toStringWithDecimalPlaces=function(t){return this.toExponential(t)},a.prototype.abs=function(){return o(Math.abs(this.m),this.e)},a.prototype.neg=function(){return o(-this.m,this.e)},a.prototype.negate=function(){return this.neg()},a.prototype.negated=function(){return this.neg()},a.prototype.sign=function(){return Math.sign(this.m)},a.prototype.sgn=function(){return this.sign()},a.prototype.round=function(){return this.e<-1?new a(0):this.e<17?new a(Math.round(this.toNumber())):this},a.prototype.floor=function(){return this.e<-1?Math.sign(this.m)>=0?new a(0):new a(-1):this.e<17?new a(Math.floor(this.toNumber())):this},a.prototype.ceil=function(){return this.e<-1?Math.sign(this.m)>0?new a(1):new a(0):this.e<17?new a(Math.ceil(this.toNumber())):this},a.prototype.trunc=function(){return this.e<0?new a(0):this.e<17?new a(Math.trunc(this.toNumber())):this},a.prototype.add=function(t){var n,o,u=r(t);if(0===this.m)return u;if(0===u.m)return this;if(this.e>=u.e?(n=this,o=u):(n=u,o=this),n.e-o.e>17)return n;var s=Math.round(1e14*n.m+1e14*o.m*e(o.e-n.e));return i(s,n.e-14)},a.prototype.plus=function(t){return this.add(t)},a.prototype.sub=function(t){return this.add(r(t).neg())},a.prototype.subtract=function(t){return this.sub(t)},a.prototype.minus=function(t){return this.sub(t)},a.prototype.mul=function(t){if(\"number\"==typeof t)return t<1e307&&t>-1e307?i(this.m*t,this.e):i(1e-307*this.m*t,this.e+307);var n=\"string\"==typeof t?new a(t):t;return i(this.m*n.m,this.e+n.e)},a.prototype.multiply=function(t){return this.mul(t)},a.prototype.times=function(t){return this.mul(t)},a.prototype.div=function(t){return this.mul(r(t).recip())},a.prototype.divide=function(t){return this.div(t)},a.prototype.divideBy=function(t){return this.div(t)},a.prototype.dividedBy=function(t){return this.div(t)},a.prototype.recip=function(){return i(1/this.m,-this.e)},a.prototype.reciprocal=function(){return this.recip()},a.prototype.reciprocate=function(){return this.recip()},a.prototype.cmp=function(t){var n=r(t);if(0===this.m){if(0===n.m)return 0;if(n.m<0)return 1;if(n.m>0)return-1}if(0===n.m){if(this.m<0)return-1;if(this.m>0)return 1}if(this.m>0)return n.m<0||this.e>n.e?1:this.e<n.e?-1:this.m>n.m?1:this.m<n.m?-1:0;if(this.m<0)return n.m>0||this.e>n.e?-1:this.e<n.e||this.m>n.m?1:this.m<n.m?-1:0;throw Error(\"Unreachable code\")},a.prototype.compare=function(t){return this.cmp(t)},a.prototype.eq=function(t){var n=r(t);return this.e===n.e&&this.m===n.m},a.prototype.equals=function(t){return this.eq(t)},a.prototype.neq=function(t){return!this.eq(t)},a.prototype.notEquals=function(t){return this.neq(t)},a.prototype.lt=function(t){var n=r(t);return 0===this.m?n.m>0:0===n.m?this.m<=0:this.e===n.e?this.m<n.m:this.m>0?n.m>0&&this.e<n.e:n.m>0||this.e>n.e},a.prototype.lte=function(t){return!this.gt(t)},a.prototype.gt=function(t){var n=r(t);return 0===this.m?n.m<0:0===n.m?this.m>0:this.e===n.e?this.m>n.m:this.m>0?n.m<0||this.e>n.e:n.m<0&&this.e<n.e},a.prototype.gte=function(t){return!this.lt(t)},a.prototype.max=function(t){var n=r(t);return this.lt(n)?n:this},a.prototype.min=function(t){var n=r(t);return this.gt(n)?n:this},a.prototype.clamp=function(t,n){return this.max(t).min(n)},a.prototype.clampMin=function(t){return this.max(t)},a.prototype.clampMax=function(t){return this.min(t)},a.prototype.cmp_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)?0:this.cmp(e)},a.prototype.compare_tolerance=function(t,n){return this.cmp_tolerance(t,n)},a.prototype.eq_tolerance=function(t,n){var e=r(t);return a.lte(this.sub(e).abs(),a.max(this.abs(),e.abs()).mul(n))},a.prototype.equals_tolerance=function(t,n){return this.eq_tolerance(t,n)},a.prototype.neq_tolerance=function(t,n){return!this.eq_tolerance(t,n)},a.prototype.notEquals_tolerance=function(t,n){return this.neq_tolerance(t,n)},a.prototype.lt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.lt(e)},a.prototype.lte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.lt(e)},a.prototype.gt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.gt(e)},a.prototype.gte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.gt(e)},a.prototype.log10=function(){return this.e+Math.log10(this.m)},a.prototype.absLog10=function(){return this.e+Math.log10(Math.abs(this.m))},a.prototype.pLog10=function(){return this.m<=0||this.e<0?0:this.log10()},a.prototype.log=function(t){return Math.LN10/Math.log(t)*this.log10()},a.prototype.log2=function(){return 3.321928094887362*this.log10()},a.prototype.ln=function(){return 2.302585092994045*this.log10()},a.prototype.logarithm=function(t){return this.log(t)},a.prototype.pow=function(t){var n,e=t instanceof a?t.toNumber():t,r=this.e*e;if(Number.isSafeInteger(r)&&(n=Math.pow(this.m,e),isFinite(n)&&0!==n))return i(n,r);var o=Math.trunc(r),u=r-o;if(n=Math.pow(10,e*Math.log10(this.m)+u),isFinite(n)&&0!==n)return i(n,o);var s=a.pow10(e*this.absLog10());return-1===this.sign()?1===Math.abs(e%2)?s.neg():0===Math.abs(e%2)?s:new a(Number.NaN):s},a.prototype.pow_base=function(t){return r(t).pow(this)},a.prototype.factorial=function(){var t=this.toNumber()+1;return a.pow(t/Math.E*Math.sqrt(t*Math.sinh(1/t)+1/(810*Math.pow(t,6))),t).mul(Math.sqrt(2*Math.PI/t))},a.prototype.exp=function(){var t=this.toNumber();return-706<t&&t<709?a.fromNumber(Math.exp(t)):a.pow(Math.E,t)},a.prototype.sqr=function(){return i(Math.pow(this.m,2),2*this.e)},a.prototype.sqrt=function(){return this.m<0?new a(Number.NaN):this.e%2!=0?i(3.16227766016838*Math.sqrt(this.m),Math.floor(this.e/2)):i(Math.sqrt(this.m),Math.floor(this.e/2))},a.prototype.cube=function(){return i(Math.pow(this.m,3),3*this.e)},a.prototype.cbrt=function(){var t=1,n=this.m;n<0&&(t=-1,n=-n);var e=t*Math.pow(n,1/3),r=this.e%3;return i(1===r||-1===r?2.154434690031883*e:0!==r?4.641588833612778*e:e,Math.floor(this.e/3))},a.prototype.sinh=function(){return this.exp().sub(this.negate().exp()).div(2)},a.prototype.cosh=function(){return this.exp().add(this.negate().exp()).div(2)},a.prototype.tanh=function(){return this.sinh().div(this.cosh())},a.prototype.asinh=function(){return a.ln(this.add(this.sqr().add(1).sqrt()))},a.prototype.acosh=function(){return a.ln(this.add(this.sqr().sub(1).sqrt()))},a.prototype.atanh=function(){return this.abs().gte(1)?Number.NaN:a.ln(this.add(1).div(new a(1).sub(this)))/2},a.prototype.ascensionPenalty=function(t){return 0===t?this:this.pow(Math.pow(10,-t))},a.prototype.egg=function(){return this.add(9)},a.prototype.lessThanOrEqualTo=function(t){return this.cmp(t)<1},a.prototype.lessThan=function(t){return this.cmp(t)<0},a.prototype.greaterThanOrEqualTo=function(t){return this.cmp(t)>-1},a.prototype.greaterThan=function(t){return this.cmp(t)>0},a.prototype.decimalPlaces=function(){return this.dp()},a.prototype.dp=function(){if(!isFinite(this.mantissa))return NaN;if(this.exponent>=17)return 0;for(var t=this.mantissa,n=-this.exponent,e=1;Math.abs(Math.round(t*e)/e-t)>1e-10;)e*=10,n++;return n>0?n:0},Object.defineProperty(a,\"MAX_VALUE\",{get:function(){return h},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"MIN_VALUE\",{get:function(){return c},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MAX_VALUE\",{get:function(){return p},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MIN_VALUE\",{get:function(){return f},enumerable:!1,configurable:!0}),a}(),h=o(1,n),c=o(1,-n),p=r(Number.MAX_VALUE),f=r(Number.MIN_VALUE);/* harmony default export */ __webpack_exports__[\"default\"] = (a);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/break_infinity.js/dist/break_infinity.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/farming/farmingWorker.js":
/*!******************************************!*\
  !*** ./src/app/farming/farmingWorker.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_farmingHelper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/farmingHelper.js */ \"(app-pages-browser)/./src/app/util/farmingHelper.js\");\n/* harmony import */ var _util_math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/math.js */ \"(app-pages-browser)/./src/app/util/math.js\");\n/* harmony import */ var _util_helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/helper.js */ \"(app-pages-browser)/./src/app/util/helper.js\");\n\n\n\n// eslint-disable-next-line no-restricted-globals\nself.onmessage = (param)=>{\n    let { data: { data, id, data1 } } = param;\n    try {\n        let finalPlants = data.finalPlants;\n        //for some reason the break-infinity values get changed into {mantissa: x, exponent: y} objects, revert\n        for(let i = 0; i < finalPlants.length; i++){\n            let cur = finalPlants[i];\n            cur.created = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(cur.created);\n            cur.totalMade = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(cur.totalMade);\n            cur.production = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(cur.production);\n        }\n        let modifiers = data.modifiers;\n        //Same thing for modifiers\n        modifiers.shopProdBonus = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.shopProdBonus);\n        modifiers.hpBonus = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.hpBonus);\n        modifiers.curPotatoes = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.curPotatoes);\n        modifiers.totalPotatoes = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.totalPotatoes);\n        const mode = data.mode;\n        const secondsHour = 3600;\n        let futureTime = data.time;\n        const numSimulatedAutos = data.numSimulatedAutos ? data.numSimulatedAutos : 1;\n        // let totalNumAutos = data.FarmingShopAutoPlotBought;\n        // let numPlants = finalPlants.length;\n        let combinations = data.combinations;\n        let totalPot = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(0);\n        let totalPotCombo = {};\n        let bestProd = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(0);\n        let bestProdCombo = {};\n        let bestPIC = 0;\n        let bestPicCombo = {\n            potatoeProduction: 0\n        };\n        let bestPICPerc = 0;\n        let bestPICPercCombo = {\n            potatoeProduction: 0\n        };\n        let dataObj = {\n            ...modifiers,\n            time: secondsHour * futureTime\n        };\n        let top10DataPointsPotatoes = [];\n        let top10DataPointsFries = [];\n        let counter = 0;\n        let counterMax = data.end - data.start;\n        for(let i = data.start; i <= data.end; i++){\n            counterMax--;\n            counter++;\n            let combo = combinations[i];\n            dataObj.numAutos = combo;\n            let result;\n            switch(mode){\n                case \"afk\":\n                    result = _util_farmingHelper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calcHPProd(finalPlants, dataObj);\n                    break;\n                case \"carlo\":\n                    result = _util_farmingHelper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calcStepHPProd(finalPlants, {\n                        ...dataObj,\n                        steps: combo\n                    });\n                    break;\n                case \"step\":\n                    if (combo[0] === 0 && combo[1] === 0 && combo[2] === 0 && combo[3] === 0 && combo[4] === 0) {\n                        let bigsad = -1;\n                    }\n                    let steps = [];\n                    let curStep = 0;\n                    let numSteps = 0;\n                    let minTime = 0;\n                    for(let j = 0; j < combo.length; j++){\n                        if (combo[j] > 0) {\n                            numSteps++;\n                            minTime += combo[j] * data.baseTimers[j];\n                        }\n                    }\n                    let remaining = secondsHour * futureTime - minTime;\n                    for(let j = 0; j < data.baseTimers.length; j++){\n                        if (combo[j] > 0) {\n                            curStep++;\n                        }\n                        let autos = Array(data.baseTimers.length).fill(0);\n                        autos[j] = numSimulatedAutos;\n                        autos.reverse();\n                        let runTime = combo[j] * data.baseTimers[j];\n                        //If its the last plant that will be grown, give the remaining time to it\n                        if (curStep === numSteps && combo[j] > 0) {\n                            runTime += remaining;\n                        } else if (combo[j] > 0) {\n                            let curPlant = finalPlants[finalPlants.length - 1 - j];\n                            let remainder = runTime % curPlant.growthTime;\n                            //Round down, add run time\n                            if (remainder <= curPlant.growthTime * 0.5) {\n                                runTime -= remainder;\n                                remaining += remainder;\n                            } else {\n                                let diff = curPlant.growthTime - remainder;\n                                //Only subtract time from final plant IF there is enough remaining time\n                                if (remaining >= diff) {\n                                    runTime += diff;\n                                    remaining -= diff;\n                                }\n                            }\n                        }\n                        steps.push({\n                            time: _util_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].roundInt(runTime),\n                            autos: autos\n                        });\n                    }\n                    result = _util_farmingHelper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calcStepHPProd(finalPlants, {\n                        ...dataObj,\n                        steps: steps\n                    });\n                    break;\n                default:\n                    result = _util_farmingHelper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calcHPProd(finalPlants, dataObj);\n                    break;\n            }\n            let picGained = 0;\n            let picPercent = 0;\n            let temp;\n            for(let j = 0; j < result.plants.length; j++){\n                let picIncrease = _util_farmingHelper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calcMaxPrestige(result.plants[j]);\n                picGained += picIncrease;\n                picPercent += Math.pow(1.02, result.plants[j].prestige + picIncrease) - Math.pow(1.02, result.plants[j].prestige);\n                result.plants[j].picIncrease = picIncrease;\n            }\n            if (result.totalPotatoes.greaterThanOrEqualTo(totalPot) === true) {\n                totalPot = result.totalPotatoes;\n                totalPotCombo = {\n                    combo: combo,\n                    result: result,\n                    plants: result.plants\n                };\n                top10DataPointsPotatoes.unshift({\n                    data: result.dataPointsPotatoes,\n                    result: totalPot\n                });\n                if (top10DataPointsPotatoes.length > 10) {\n                    top10DataPointsPotatoes.pop();\n                }\n                top10DataPointsFries.unshift({\n                    data: result.dataPointsFries,\n                    result: totalPot\n                });\n                if (top10DataPointsFries.length > 10) {\n                    top10DataPointsFries.pop();\n                }\n            }\n            if (result.potatoeProduction.greaterThanOrEqualTo(bestProd) === true) {\n                bestProd = result.potatoeProduction;\n                bestProdCombo = {\n                    combo: combo,\n                    result: result,\n                    plants: result.plants\n                };\n            }\n            if (picGained > bestPIC) {\n                temp = {\n                    combo: combo,\n                    result: result,\n                    plants: result.plants,\n                    potatoeProduction: result.potatoeProduction,\n                    picGain: picGained,\n                    picStats: {\n                        picLevel: picGained,\n                        picPercent: picPercent\n                    }\n                };\n                bestPIC = picGained;\n                bestPicCombo = temp;\n            } else if (picGained === bestPIC) {\n                if (result.potatoeProduction.greaterThanOrEqualTo(bestPicCombo.potatoeProduction)) {\n                    temp = {\n                        combo: combo,\n                        result: result,\n                        plants: result.plants,\n                        potatoeProduction: result.potatoeProduction,\n                        picGain: picGained,\n                        picStats: {\n                            picLevel: picGained,\n                            picPercent: picPercent\n                        }\n                    };\n                    bestPIC = picGained;\n                    bestPicCombo = temp;\n                }\n            }\n            if (picPercent > bestPICPerc) {\n                temp = {\n                    combo: combo,\n                    result: result,\n                    plants: result.plants,\n                    potatoeProduction: result.potatoeProduction,\n                    picGain: picPercent,\n                    picStats: {\n                        picLevel: picGained,\n                        picPercent: picPercent\n                    }\n                };\n                bestPICPerc = picPercent;\n                bestPICPercCombo = temp;\n            } else if (picPercent === bestPICPerc) {\n                if (result.potatoeProduction.greaterThanOrEqualTo(bestPICPercCombo.potatoeProduction)) {\n                    temp = {\n                        combo: combo,\n                        result: result,\n                        plants: result.plants,\n                        potatoeProduction: result.potatoeProduction,\n                        picGain: picPercent,\n                        picStats: {\n                            picLevel: picGained,\n                            picPercent: picPercent\n                        }\n                    };\n                    bestPICPerc = picPercent;\n                    bestPICPercCombo = temp;\n                }\n            }\n            if (counter % 100 === 0) {\n                // eslint-disable-next-line no-restricted-globals\n                self.postMessage({\n                    update: true,\n                    temp: temp,\n                    updateAmount: 100\n                });\n            }\n        }\n        // eslint-disable-next-line no-restricted-globals\n        self.postMessage({\n            update: true,\n            updateAmount: counterMax\n        });\n        // eslint-disable-next-line no-restricted-globals\n        self.postMessage({\n            success: true,\n            totalPotCombo: totalPotCombo,\n            bestProdCombo: bestProdCombo,\n            bestPicCombo: bestPicCombo,\n            bestPICPercCombo: bestPICPercCombo,\n            top10DataPointsPotatoes: top10DataPointsPotatoes,\n            top10DataPointsFries: top10DataPointsFries\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/farming/farmingWorker.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/util/farmingHelper.js":
/*!***************************************!*\
  !*** ./src/app/util/farmingHelper.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper.js */ \"(app-pages-browser)/./src/app/util/helper.js\");\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ \"(app-pages-browser)/./src/app/util/math.js\");\n\n\nvar farmingHelper = {\n    findMultipliersWithMinPercentage: function(sum, numbers, minPercentage) {\n        const multipliers = [];\n        let count = 0;\n        function backtrack(index, currentSum, currentMultipliers) {\n            count++;\n            if (index === numbers.length) {\n                const productSum = currentMultipliers.reduce((acc, multiplier, i)=>acc + multiplier * numbers[i], 0);\n                if (productSum >= minPercentage * sum) {\n                    multipliers.push([\n                        ...currentMultipliers\n                    ]);\n                }\n                return;\n            }\n            let max = Math.floor((sum - currentSum) / numbers[index]);\n            for(let multiplier = 0; multiplier <= max; multiplier++){\n                currentMultipliers[index] = multiplier;\n                let tempSum = currentSum + multiplier * numbers[index];\n                if (tempSum < sum) {\n                    backtrack(index + 1, currentSum + multiplier * numbers[index], currentMultipliers);\n                }\n            }\n        }\n        backtrack(0, 0, []);\n        console.log(count);\n        return multipliers;\n    },\n    calcGrowthTime: function(plant, modifiers) {\n        let growingBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.originalShopGrowingBonus);\n        growingBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divideDecimal(growingBonus, 1 + 0.05 * modifiers.originalShopGrowingLevel);\n        growingBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(growingBonus, 1 + 0.05 * modifiers.shopGrowingSpeed).toNumber();\n        let num = Math.floor(plant.TimeNeeded / plant.prestigeBonus / growingBonus);\n        return num < 10 ? 10 : num;\n    },\n    calcPlantHarvest: function(plant, modifiers) {\n        let num = _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].roundInt((1 + plant.Rank) * Math.pow(1.05, plant.Rank)) * Math.pow(1.02, plant.prestige) * modifiers.manualHarvestBonus;\n        return num;\n    },\n    calcShopProdBonus: function(modifiers_input, shopLevel) {\n        shopLevel = shopLevel || shopLevel === 0 ? shopLevel : modifiers_input.FarmingShopPlantTotalProduction;\n        return _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(1.25, shopLevel);\n    },\n    calcProdOutput: function(plant_input, modifiers_input) {\n        let TotalCreated = plant_input.totalMade;\n        // let ManuallyCreated = plant_input.created;\n        // let shovel = modifiers_input.manualHarvestFormula;\n        let shopProdBonus = modifiers_input.shopProdBonus;\n        //note bigsad = -1 -> need to take into account assumbly in the future\n        // const assemblyBonus = modifiers_input.assemblyProduction;\n        let prestige = plant_input.prestige;\n        // GM.PD.PlantTotalProductionBonus = 1 * BigDouble.Pow(1.25, GM.PD.FarmingShopPlantTotalProduction) * GM.ASMA.GetAssemblerBonus(26) * GM.GHLM.GetBonus(3) * Math.Pow(1.01, Math.Max(0, GM.PD.CurrentEventPoint - 75));\n        // let PlantTotalProductionBonus = mathHelper.multiplyDecimal(mathHelper.multiplyDecimal(shopProdBonus, assemblyBonus), modifiers_input.contagionPlantProd);\n        let PlantTotalProductionBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers_input.originalShopProdBonus);\n        PlantTotalProductionBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divideDecimal(PlantTotalProductionBonus, this.calcShopProdBonus(null, modifiers_input.originalShopProdLevel));\n        PlantTotalProductionBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(shopProdBonus, PlantTotalProductionBonus);\n        let plantMult = plant_input.futureMult;\n        let output = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(TotalCreated, plantMult), PlantTotalProductionBonus), _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(Math.pow(1.02, prestige)));\n        if (plant_input.ID === 1) {\n            output = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(output, modifiers_input.hpBonus);\n        }\n        return output;\n    },\n    calcFryOutput: function(potatoes, modifiers) {\n        if (potatoes.lessThan(10000000000000000)) return 0;\n        let timerBonus = 0;\n        let timePassed = modifiers.timePassed ? modifiers.timePassed : 0;\n        if (timePassed > 1800) {\n            if (timePassed < 86400) {\n                timerBonus = timePassed / 86400;\n            } else {\n                // 1.0 + (timePassed - 86400.0) / (172800.0 + (timePassed - 86400.0) * 0.5);\n                //1 + (step1) / (172800 + (step2) * 0.5)\n                let step1 = timePassed - 86400;\n                let step2 = timePassed - 86400;\n                let step3 = 172800 + step2 * 0.5;\n                let step4 = step1 / step3;\n                timerBonus = 1 + step4;\n            }\n        }\n        // BigDouble.Round(\n        // (Log10(HealthyPotatoTotal) - 15.75)\n        //  * (36 - Min(Log10(HealthyPotatoTotal), 31))\n        //  * Pow(1.15, Log10(HealthyPotatoTotal) - 16.0)\n        //  * FrenchFriesBonus \n        //  * TimerFriesPrestigeBonuses);\n        // BigDouble.Round(step1 * step2 * step3  * GM.PD.FrenchFriesBonus * GM.PD.TimerFriesPrestigeBonuses);\n        let log10 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].logDecimal(potatoes, 10);\n        let step1 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(log10, 15.75);\n        let log2 = log10;\n        log2 = log2.lessThan(31) ? log2 : 31;\n        let step2 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(36, log2);\n        let log3 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(log10, 16);\n        let step3 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(1.15, log3);\n        let inter1 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(step1, step2);\n        let inter2 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(inter1, step3);\n        let frenchBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.fryBonus);\n        let step4 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(inter2, frenchBonus);\n        let step5 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(step4, timerBonus);\n        return step5;\n    },\n    calcCarryOverEXP_OLD: function(param) {\n        let { plant, numAutos, expTick } = param;\n        let leftOver = 0;\n        let numLevels = 1;\n        if (numAutos > 1) {\n            let individualEXP = expTick / numAutos;\n            let ticksNeededEXP = Math.ceil((plant.reqExp - plant.curExp) / individualEXP);\n            if (numAutos > ticksNeededEXP) {\n                leftOver = (numAutos - ticksNeededEXP) * individualEXP;\n                let futureReq = 10 + 5 * (plant.Rank + numLevels) * Math.pow(1.05, plant.Rank + numLevels);\n                while(leftOver > futureReq){\n                    leftOver -= futureReq;\n                    numLevels++;\n                    futureReq = 10 + 5 * (plant.Rank + numLevels) * Math.pow(1.05, plant.Rank + numLevels);\n                }\n            } else {\n                leftOver = 0;\n            }\n        } else {\n            leftOver = 0;\n        }\n        let reqExp = 10 + 5 * (plant.Rank + numLevels) * Math.pow(1.05, plant.Rank + numLevels);\n        return {\n            leftOver,\n            numLevels,\n            reqExp\n        };\n    },\n    calcCarryOverEXP: function(param) {\n        let { plant, numAutos, expTick } = param;\n        let leftOver = 0;\n        let numLevels = 0;\n        let numEXP = plant.curExp + numAutos * expTick;\n        let reqExp = 10 + 5 * (plant.Rank + numLevels) * Math.pow(1.05, plant.Rank + numLevels);\n        //need to handle two cases: 1 auto, just go up as much as you can\n        // >1 autos\n        while(numEXP >= reqExp){\n            numEXP -= reqExp;\n            numLevels++;\n            reqExp = 10 + 5 * (plant.Rank + numLevels) * Math.pow(1.05, plant.Rank + numLevels);\n        }\n        leftOver = numEXP;\n        return {\n            leftOver,\n            numLevels,\n            reqExp\n        };\n    },\n    calcEXPBonus: function(modifiers) {\n        let originalBonus = modifiers.originalRankLevelBonus;\n        let originalLevel = modifiers.originalShopRankLevel;\n        let currentShopLevel = modifiers.shopRankLevel;\n        let originalPotion = modifiers.originalPotionRank;\n        let currentPotion = modifiers.potionRank;\n        let expBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(originalBonus);\n        expBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divideDecimal(expBonus, 1 + originalLevel * 0.1);\n        expBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divideDecimal(expBonus, originalPotion > 0 ? 1.5 : 1);\n        expBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(expBonus, 1 + currentShopLevel * 0.1);\n        expBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(expBonus, currentPotion);\n        expBonus = expBonus.toNumber();\n        return expBonus;\n    },\n    futureMultBD: function(plant, modifiers) {\n        return _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(1 + 0.05 * (1 + modifiers.manualHarvestFormula * 0.02), _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].logDecimal(plant.created, 1.25));\n    },\n    calcFutureMult: function(plant_input, modifiers_input) {\n        //bigsad = -1 need to make costs big decimal as well now\n        // console.log(`calcing future mult${plant_input.ID}`)\n        let plant = modifiers_input.string === false ? plant_input : JSON.parse(JSON.stringify(plant_input));\n        let modifiers = modifiers_input.string === false ? modifiers_input : JSON.parse(JSON.stringify(modifiers_input));\n        let remainingTime = modifiers.time;\n        let numAutos = modifiers.numAuto || (modifiers === null || modifiers === void 0 ? void 0 : modifiers.numAuto) === 0 ? modifiers.numAuto : 1;\n        let newExpBonus = this.calcEXPBonus(modifiers);\n        let expTick = plant.prestigeBonus * newExpBonus;\n        plant.growthTime = this.calcGrowthTime(plant, modifiers);\n        if (numAutos === 0) {\n            let newOutPut = this.calcProdOutput(plant, modifiers);\n            plant.production = newOutPut;\n            return plant;\n        }\n        while(remainingTime > 0){\n            plant.timeToLevel = this.calcTimeTillLevel(plant, modifiers);\n            let elapsedTime = 0;\n            let rankIncrease = false;\n            if (plant.timeToLevel > remainingTime) {\n                elapsedTime = remainingTime;\n            } else {\n                elapsedTime = plant.timeToLevel;\n                rankIncrease = true;\n            }\n            remainingTime -= elapsedTime;\n            plant.elapsedTime += elapsedTime;\n            let numHarvests = 0;\n            if (plant.elapsedTime >= plant.growthTime) {\n                numHarvests = Math.floor(plant.elapsedTime / plant.growthTime);\n                let toCreate = plant.perHarvest * numHarvests * numAutos;\n                plant.created = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(plant.created, toCreate);\n                plant.totalMade = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(plant.totalMade, toCreate);\n                plant.futureMult = this.futureMultBD(plant, modifiers);\n                if (rankIncrease) {\n                    let leftOver = this.calcCarryOverEXP({\n                        plant,\n                        expTick: expTick * numHarvests,\n                        numAutos\n                    });\n                    // let leftOver = this.calcCarryOverEXP({ plant, expTick: expTick , numAutos });\n                    plant.curExp = leftOver.leftOver;\n                    plant.Rank += leftOver.numLevels;\n                    plant.perHarvest = this.calcPlantHarvest(plant, modifiers);\n                    // plant.reqExp = 10 + 5 * plant.Rank * Math.pow(1.05, plant.Rank);\n                    plant.reqExp = leftOver.reqExp;\n                } else {\n                    let gainedEXP = numHarvests * expTick * numAutos;\n                    let totalExp = plant.curExp + gainedEXP;\n                    plant.curExp = totalExp;\n                }\n                plant.elapsedTime = plant.elapsedTime % plant.growthTime;\n            }\n        }\n        let newOutPut = this.calcProdOutput(plant, modifiers);\n        plant.production = newOutPut;\n        return plant;\n    },\n    calcTimeTillLevel: function(plant_input, modifiers_input) {\n        let plant = plant_input;\n        let modifiers = modifiers_input;\n        let numAutos = modifiers.numAuto || (modifiers === null || modifiers === void 0 ? void 0 : modifiers.numAuto) === 0 ? modifiers.numAuto : 1;\n        if (numAutos === 0) return Infinity;\n        let remExp = plant.reqExp - plant.curExp;\n        let newExpBonus = this.calcEXPBonus(modifiers);\n        let expBonus = plant.prestigeBonus * newExpBonus * numAutos;\n        let ticksTillLevel = Math.ceil(remExp / expBonus);\n        return ticksTillLevel * plant.growthTime - plant.elapsedTime;\n    },\n    getNextShopCosts: function(data) {\n        let prodCost = 1;\n        let prodLevel = data.FarmingShopPlantTotalProduction || data.FarmingShopPlantTotalProduction === 0 ? data.FarmingShopPlantTotalProduction : data.shopProdLevel;\n        let growthCost = 1;\n        let growthLevel = data.FarmingShopPlantGrowingSpeed || data.FarmingShopPlantGrowingSpeed === 0 ? data.FarmingShopPlantGrowingSpeed : data.shopGrowingSpeed;\n        let expCost = 1;\n        let expLevel = data.FarmingShopPlantRankExpEarned || data.FarmingShopPlantRankExpEarned === 0 ? data.FarmingShopPlantRankExpEarned : data.shopRankLevel;\n        let temp1 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(1.05, prodLevel - 50);\n        let temp2 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(100, temp1);\n        let temp3 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(temp2, prodLevel);\n        let temp4 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(100000000, temp3);\n        prodCost = prodLevel > 50 ? temp4 : _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(100000000, _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(100, prodLevel));\n        growthCost = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(500, growthLevel), 10000000000);\n        expCost = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(250, expLevel), 1000000000000000);\n        return {\n            prodCost,\n            growthCost,\n            expCost\n        };\n    },\n    calcMaxPrestige: function(plant_input) {\n        let start = plant_input.prestige;\n        let runningHarvests = 0;\n        let flag = true;\n        while(flag){\n            let requiredPerPic = 10 * Math.pow(2, start);\n            let requiredHarvests = runningHarvests + requiredPerPic;\n            if (plant_input.created.greaterThanOrEqualTo(requiredHarvests)) {\n                start++;\n                runningHarvests += requiredPerPic;\n            } else {\n                flag = false;\n            }\n        }\n        return start - plant_input.prestige;\n    },\n    calcTimeTillPrestige: function(plant_input, modifiers_input) {\n        let plant = JSON.parse(JSON.stringify(plant_input));\n        this.resetPlantBD(plant);\n        let modifiers = JSON.parse(JSON.stringify(modifiers_input));\n        this.resetModifiersBD(modifiers);\n        let numAutos = modifiers.numAuto || (modifiers === null || modifiers === void 0 ? void 0 : modifiers.numAuto) === 0 ? modifiers.numAuto : 1;\n        let prestiged = false;\n        let totalTime = 0;\n        let runningHarvests = 0;\n        let newExpBonus = this.calcEXPBonus(modifiers);\n        let expTick = plant.prestigeBonus * newExpBonus;\n        while(!prestiged){\n            let timeToLevel = this.calcTimeTillLevel(plant, modifiers);\n            let requiredPerPic = 10 * Math.pow(2, plant.prestige);\n            let requiredHarvests = runningHarvests + requiredPerPic;\n            let remainingHarvests = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(requiredHarvests, plant.created); //minimum number of ticks\n            let timeTillPrestige = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divideDecimal(remainingHarvests, plant.perHarvest * numAutos).ceil(), plant.growthTime).ceil().toNumber();\n            if (numAutos === 0 && remainingHarvests.greaterThan(0)) {\n                prestiged = true;\n                totalTime = Infinity;\n            } else if (timeTillPrestige <= 0) {\n                prestiged = true;\n                if (totalTime <= 0) {\n                    plant.prestige++;\n                    prestiged = false;\n                    runningHarvests += requiredPerPic;\n                }\n            } else if (timeTillPrestige > timeToLevel) {\n                plant.elapsedTime += timeToLevel;\n                let ticks = Math.floor(plant.elapsedTime / plant.growthTime);\n                plant.created = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(plant.created, ticks * plant.perHarvest * numAutos);\n                plant.totalMade = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(plant.totalMade, ticks * plant.perHarvest * numAutos);\n                let rankRes = this.calcCarryOverEXP({\n                    plant,\n                    numAutos,\n                    expTick: expTick * ticks\n                });\n                plant.Rank += rankRes.numLevels;\n                plant.curExp = rankRes.leftOver;\n                plant.reqExp = rankRes.reqExp;\n                plant.perHarvest = this.calcPlantHarvest(plant, modifiers);\n                totalTime += timeToLevel;\n                plant.elapsedTime = plant.elapsedTime % plant.growthTime;\n            } else {\n                prestiged = true;\n                plant.elapsedTime += timeTillPrestige;\n                let ticks = Math.floor(plant.elapsedTime / plant.growthTime);\n                plant.created = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(plant.created, ticks * plant.perHarvest * numAutos);\n                plant.totalMade = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(plant.totalMade, ticks * plant.perHarvest * numAutos);\n                totalTime += timeTillPrestige;\n                plant.elapsedTime = plant.elapsedTime % plant.growthTime;\n            }\n        }\n        return {\n            remainingTime: totalTime,\n            prestige: plant.prestige,\n            prestiged: prestiged\n        };\n    },\n    resetPlantBD: function(plant) {\n        var _plant_totalMade, _plant_totalMade1, _plant_created, _plant_created1, _plant_production, _plant_production1;\n        plant.totalMade = (plant === null || plant === void 0 ? void 0 : (_plant_totalMade = plant.totalMade) === null || _plant_totalMade === void 0 ? void 0 : _plant_totalMade.mantissa) || (plant === null || plant === void 0 ? void 0 : (_plant_totalMade1 = plant.totalMade) === null || _plant_totalMade1 === void 0 ? void 0 : _plant_totalMade1.mantissa) === 0 ? plant.totalMade : _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(plant.totalMade);\n        plant.created = (plant === null || plant === void 0 ? void 0 : (_plant_created = plant.created) === null || _plant_created === void 0 ? void 0 : _plant_created.mantissa) || (plant === null || plant === void 0 ? void 0 : (_plant_created1 = plant.created) === null || _plant_created1 === void 0 ? void 0 : _plant_created1.mantissa) === 0 ? plant.created : _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(plant.created);\n        plant.production = (plant === null || plant === void 0 ? void 0 : (_plant_production = plant.production) === null || _plant_production === void 0 ? void 0 : _plant_production.mantissa) || (plant === null || plant === void 0 ? void 0 : (_plant_production1 = plant.production) === null || _plant_production1 === void 0 ? void 0 : _plant_production1.mantissa) === 0 ? plant.production : _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(plant.production);\n        plant.futureMult = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(plant.futureMult);\n    },\n    resetModifiersBD: function(modifiers) {\n        var _modifiers_shopProdBonus, _modifiers_shopProdBonus1, _modifiers_hpBonus, _modifiers_hpBonus1, _modifiers_curPotatoes, _modifiers_totalPotatoes, _modifiers_totalPotatoes1;\n        modifiers.shopProdBonus = (modifiers === null || modifiers === void 0 ? void 0 : (_modifiers_shopProdBonus = modifiers.shopProdBonus) === null || _modifiers_shopProdBonus === void 0 ? void 0 : _modifiers_shopProdBonus.mantissa) || (modifiers === null || modifiers === void 0 ? void 0 : (_modifiers_shopProdBonus1 = modifiers.shopProdBonus) === null || _modifiers_shopProdBonus1 === void 0 ? void 0 : _modifiers_shopProdBonus1.mantissa) === 0 ? modifiers.shopProdBonus : _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.shopProdBonus);\n        modifiers.hpBonus = (modifiers === null || modifiers === void 0 ? void 0 : (_modifiers_hpBonus = modifiers.hpBonus) === null || _modifiers_hpBonus === void 0 ? void 0 : _modifiers_hpBonus.mantissa) || (modifiers === null || modifiers === void 0 ? void 0 : (_modifiers_hpBonus1 = modifiers.hpBonus) === null || _modifiers_hpBonus1 === void 0 ? void 0 : _modifiers_hpBonus1.mantissa) === 0 ? modifiers.hpBonus : _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.hpBonus);\n        modifiers.curPotatoes = (modifiers === null || modifiers === void 0 ? void 0 : (_modifiers_curPotatoes = modifiers.curPotatoes) === null || _modifiers_curPotatoes === void 0 ? void 0 : _modifiers_curPotatoes.mantissa) || (modifiers === null || modifiers === void 0 ? void 0 : modifiers.curPotatoes.mantissa) === 0 ? modifiers.curPotatoes : _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.curPotatoes);\n        modifiers.totalPotatoes = (modifiers === null || modifiers === void 0 ? void 0 : (_modifiers_totalPotatoes = modifiers.totalPotatoes) === null || _modifiers_totalPotatoes === void 0 ? void 0 : _modifiers_totalPotatoes.mantissa) || (modifiers === null || modifiers === void 0 ? void 0 : (_modifiers_totalPotatoes1 = modifiers.totalPotatoes) === null || _modifiers_totalPotatoes1 === void 0 ? void 0 : _modifiers_totalPotatoes1.mantissa) === 0 ? modifiers.totalPotatoes : _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.totalPotatoes);\n    },\n    calcHPProd: function(plants_input, modifiers_input) {\n        let plants = JSON.parse(JSON.stringify(plants_input));\n        for(let i = 0; i < plants.length; i++){\n            this.resetPlantBD(plants[i]);\n        }\n        let modifiers = JSON.parse(JSON.stringify(modifiers_input));\n        this.resetModifiersBD(modifiers);\n        modifiers.nextCosts.prodCost = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.nextCosts.prodCost);\n        modifiers.nextCosts.growthCost = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.nextCosts.growthCost);\n        modifiers.nextCosts.expCost = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(modifiers.nextCosts.expCost);\n        let numAutos = modifiers.numAutos;\n        let simulationTime = modifiers.time; //time in seconds\n        let startTime = modifiers.startTime ? modifiers.startTime : 0; //used for consistent tick timings\n        const runningTime = modifiers.runningTime ? modifiers.runningTime : 0; //Used for calculating end timings if necessary\n        const dataPointsMax = modifiers.maxSteps ? modifiers.maxSteps : 100;\n        const tickStart = modifiers.tickStart ? modifiers.tickStart : 0;\n        let tickRate = modifiers.tickRate ? modifiers.tickRate : 60 * 1;\n        let dataPointThreshold = modifiers.dataPointThreshold ? modifiers.dataPointThreshold : simulationTime / tickRate < dataPointsMax ? 1 : _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].roundInt(simulationTime / tickRate / dataPointsMax);\n        let dataPointsPotatoes = [];\n        let dataPointsFries = [];\n        let totalPotatoes = modifiers.totalPotatoes;\n        let currPotatoes = modifiers.curPotatoes;\n        let prevPlantsProd = Array(plants.length).fill(0);\n        for(let i = 0; i < plants.length; i++){\n            prevPlantsProd[i] = plants[i].production;\n        }\n        // let runTime = 0;\n        let i = 0;\n        let finalPass = false;\n        // tickRate = 2;\n        let prodMult = 1;\n        if (tickRate > 2) {\n            if (tickRate >= 2592) {\n                prodMult = 0.95;\n            } else if (tickRate >= 1728) {\n                prodMult = 0.95;\n            } else if (tickRate >= 864) {\n                prodMult = 0.95;\n            } else if (tickRate >= 140) {\n                prodMult = 0.95;\n            } else {\n                prodMult = 0.95;\n            }\n        }\n        //Iterate over each second\n        for(; i < simulationTime / tickRate || finalPass; i++){\n            //Calculate new values for each plant\n            let HPInitial = 0;\n            for(let j = plants.length - 1; j >= 0; j--){\n                let curr = plants[j];\n                let toAdd = j === plants.length - 1 ? 0 : tickRate > 1 ? //Some basic calculus to find total assuming linear growth\n                _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(prevPlantsProd[j + 1], plants[j + 1].production), 0.55 * tickRate * prodMult) : _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(plants[j + 1].production, tickRate);\n                curr.totalMade = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(curr.totalMade, toAdd);\n                let res = this.calcFutureMult(curr, {\n                    ...modifiers,\n                    time: tickRate,\n                    numAuto: numAutos[j],\n                    string: false\n                });\n                curr = res;\n                if (curr.ID === 1) {\n                    HPInitial = prevPlantsProd[j];\n                }\n                prevPlantsProd[j] = curr.production;\n            }\n            modifiers.passedTime += tickRate;\n            //Reduce plant rank potion timer, or set it the bonus to 0 if necessary\n            if (modifiers.potionRank > 1 && !modifiers.forceRankPotion) {\n                modifiers.potionRankTime -= tickRate;\n                if (modifiers.potionRankTime < 0) {\n                    modifiers.potionRank = 1;\n                }\n            }\n            let curTime = _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].roundInt(i * tickRate + startTime);\n            let HPToAdd = tickRate > 1 ? _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(HPInitial, plants[0].production), 0.55 * tickRate * prodMult) : plants[0].production;\n            totalPotatoes = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(totalPotatoes, HPToAdd);\n            currPotatoes = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(currPotatoes, HPToAdd);\n            if (modifiers.autoBuyPBC) {\n                let updateCosts = false;\n                let boughtUpgrade = true;\n                while(boughtUpgrade){\n                    boughtUpgrade = false;\n                    if (currPotatoes.greaterThanOrEqualTo(modifiers.nextCosts.prodCost) === true) {\n                        currPotatoes = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(currPotatoes, modifiers.nextCosts.prodCost);\n                        modifiers.shopProdLevel++;\n                        modifiers.shopProdBonus = this.calcShopProdBonus(modifiers, modifiers.shopProdLevel);\n                        updateCosts = true;\n                        boughtUpgrade = true;\n                    }\n                    if (currPotatoes.greaterThanOrEqualTo(modifiers.nextCosts.growthCost) === true) {\n                        // currPotatoes -= modifiers.nextCosts.growthCost;\n                        currPotatoes = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(currPotatoes, modifiers.nextCosts.growthCost);\n                        modifiers.shopGrowingSpeed++;\n                        updateCosts = true;\n                        boughtUpgrade = true;\n                    }\n                    if (currPotatoes.greaterThanOrEqualTo(modifiers.nextCosts.expCost) === true) {\n                        currPotatoes = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(currPotatoes, modifiers.nextCosts.expCost);\n                        modifiers.shopRankLevel++;\n                        modifiers.shopRankEXP = 1 + modifiers.shopRankLevel * 0.1;\n                        updateCosts = true;\n                        boughtUpgrade = true;\n                    }\n                    if (updateCosts) {\n                        let nextCosts = this.getNextShopCosts(modifiers);\n                        modifiers.nextCosts = nextCosts;\n                    }\n                }\n            }\n            if (i % dataPointThreshold === 0 && curTime >= tickStart && curTime <= simulationTime + runningTime) {\n                dataPointsPotatoes.push({\n                    \"time\": curTime,\n                    \"production\": totalPotatoes\n                });\n                dataPointsFries.push({\n                    \"time\": curTime,\n                    \"fries\": farmingHelper.calcFryOutput(totalPotatoes, modifiers)\n                });\n            }\n            if (!modifiers.skipFinal) {\n                if (finalPass && curTime >= simulationTime + runningTime) {\n                    break;\n                }\n                if (!finalPass && curTime < simulationTime + runningTime) {\n                    finalPass = true;\n                }\n            }\n        }\n        if (i > 0 && !modifiers.skipFinal) {\n            let curTime = _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].roundInt(i * tickRate + startTime);\n            modifiers.passedTime = i * tickRate + startTime;\n            //Handling rare case when you have to add, but only once due to intervals duration, but only at the end, and didn't fit in the for loop above\n            if (dataPointsPotatoes.length === 0) {\n                dataPointsPotatoes.push({\n                    \"time\": curTime,\n                    \"production\": totalPotatoes\n                });\n                dataPointsFries.push({\n                    \"time\": curTime,\n                    \"fries\": farmingHelper.calcFryOutput(totalPotatoes, modifiers)\n                });\n            } else if (dataPointsPotatoes[dataPointsPotatoes.length - 1].production !== totalPotatoes) {\n                if (curTime > simulationTime + runningTime) {\n                    let timeIncrease = curTime - dataPointsPotatoes[dataPointsPotatoes.length - 1].time;\n                    let increase = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divideDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(totalPotatoes, dataPointsPotatoes[dataPointsPotatoes.length - 1].production), timeIncrease);\n                    // let temp_increase =  mathHelper.multiplyDecimal(mathHelper.addDecimal(HPInitial, plants[0].production), 0.5 * tickRate * prodMult);\n                    let trueTimeIncrease = simulationTime + runningTime - dataPointsPotatoes[dataPointsPotatoes.length - 1].time;\n                    let finalPotatoes = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(dataPointsPotatoes[dataPointsPotatoes.length - 1].production, _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(increase, trueTimeIncrease));\n                    let newObj = {\n                        time: dataPointsPotatoes[dataPointsPotatoes.length - 1].time + trueTimeIncrease,\n                        production: finalPotatoes\n                    };\n                    dataPointsPotatoes.push(newObj);\n                    dataPointsFries.push({\n                        \"time\": dataPointsPotatoes[dataPointsPotatoes.length - 1].time + trueTimeIncrease,\n                        \"fries\": farmingHelper.calcFryOutput(finalPotatoes, modifiers)\n                    });\n                    //This means the `current` potatoes aren't updated to reflect the backwards fill/fix but it shouldn't be a big deal, and not used for anything atm\n                    totalPotatoes = finalPotatoes;\n                }\n            }\n        }\n        return {\n            totalPotatoes: totalPotatoes,\n            potatoeProduction: plants[0].production,\n            plants: plants,\n            nextCosts: modifiers.nextCosts,\n            dataPointsPotatoes: dataPointsPotatoes,\n            dataPointsFries: dataPointsFries,\n            finalModifiers: modifiers\n        };\n    },\n    calcStepHPProd: function(plants_input, modifiers_input) {\n        let plants = JSON.parse(JSON.stringify(plants_input));\n        for(let i = 0; i < plants.length; i++){\n            this.resetPlantBD(plants[i]);\n        }\n        let modifiers = JSON.parse(JSON.stringify(modifiers_input));\n        this.resetModifiersBD(modifiers);\n        let steps = modifiers.steps;\n        let res = -1;\n        let potatoeSteps = [];\n        let frySteps = [];\n        let runningTime = 0;\n        const dataPointsMax = modifiers.maxSteps ? modifiers.maxSteps : 100;\n        let tickRate = modifiers.tickRate ? modifiers.tickRate : 60 * 1;\n        let dataPointThreshold = modifiers_input.time / tickRate < dataPointsMax ? 1 : _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].roundInt(modifiers_input.time / tickRate / dataPointsMax);\n        for(let i = 0; i < steps.length; i++){\n            if (steps[i].time === 0) continue;\n            res = this.calcHPProd(plants, {\n                ...modifiers,\n                numAutos: steps[i].autos,\n                time: steps[i].time,\n                dataPointThreshold: dataPointThreshold,\n                startTime: potatoeSteps.length > 0 ? potatoeSteps[potatoeSteps.length - 1].time : 0,\n                runningTime: runningTime,\n                skipFinal: i < steps.length - 1,\n                tickStart: potatoeSteps.length > 0 ? potatoeSteps[potatoeSteps.length - 1].time + dataPointThreshold * tickRate : 0\n            });\n            modifiers = res.finalModifiers;\n            modifiers.totalPotatoes = res.totalPotatoes;\n            plants = res.plants;\n            potatoeSteps = potatoeSteps.concat(res.dataPointsPotatoes);\n            frySteps = frySteps.concat(res.dataPointsFries);\n            steps[i].obj = {\n                text: \"P\".concat(steps.length - i, \" for \").concat(steps[i].time),\n                numAutos: steps[i].autos,\n                time: steps[i].time\n            };\n            runningTime += steps[i].time;\n        }\n        res.dataPointsPotatoes = potatoeSteps;\n        res.dataPointsFries = frySteps;\n        res.steps = steps;\n        return res;\n    },\n    calcAssemblyHP: function(data) {\n        let bonus = 1;\n        if ((data === null || data === void 0 ? void 0 : data.AssemblerCollection[0].BonusList[0].StartingLevel) <= (data === null || data === void 0 ? void 0 : data.AssemblerCollection[0].Level)) {\n            let gain = data === null || data === void 0 ? void 0 : data.AssemblerCollection[0].BonusList[0].Gain;\n            let level = (data === null || data === void 0 ? void 0 : data.AssemblerCollection[0].Level) - (data === null || data === void 0 ? void 0 : data.AssemblerCollection[0].BonusList[0].StartingLevel);\n            bonus = Math.pow(1 + gain, level);\n        }\n        return bonus;\n    },\n    calcAssembly: function(data, line_num, bonus_num) {\n        let bonus = 1;\n        if ((data === null || data === void 0 ? void 0 : data.AssemblerCollection[line_num].BonusList[bonus_num].StartingLevel) <= (data === null || data === void 0 ? void 0 : data.AssemblerCollection[line_num].Level)) {\n            let gain = data === null || data === void 0 ? void 0 : data.AssemblerCollection[line_num].BonusList[bonus_num].Gain;\n            let level = Math.max(0, data.AssemblerCollection[line_num].Level - (data.AssemblerCollection[line_num].BonusList[bonus_num].StartingLevel - 1));\n            bonus = Math.pow(1 + gain, level);\n        }\n        return bonus;\n    },\n    calcAssemblyLine: function(line, al_level) {\n        let bonus = 1;\n        if (line.StartingLevel <= al_level) {\n            let gain = line.Gain;\n            let level = Math.max(0, al_level - (line.StartingLevel - 1));\n            bonus = Math.pow(1 + gain, level);\n        }\n        return bonus;\n    },\n    calcAssemblyCost: function(id, data) {\n        let finalCost = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(-1);\n        let costReduction = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(data.AssemblyCostReductionBonus);\n        let assembly = data.AssemblerCollection[id];\n        let baseCost = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(assembly.BaseCost);\n        let step1 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addDecimal(baseCost, _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(baseCost, assembly.Level));\n        let temp = 1 + assembly.CostExpo + assembly.CostExpo * assembly.Level * 0.02;\n        let powStepBase = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(temp);\n        let step2 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(powStepBase, assembly.Level);\n        finalCost = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divideDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(step1, step2), costReduction);\n        // finalCost =\n        //     (level + startingCost * level)\n        //     * pow(1 + assembly.CostExpo + assembly.CostExpo * assembly.BaseCost * 0.02, assembly.BaseCost)\n        //     / costReduction;\n        return finalCost;\n    },\n    calcProteinPerSecond: function(data) {\n        let proteinBonus = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(data.ProteinBonus);\n        let frenchTotal = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(data.FrenchFriesTotal);\n        let result = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createDecimal(1);\n        if (frenchTotal.greaterThan(10000000000.0)) {\n            let log1 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].logDecimal(frenchTotal, 5);\n            log1 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(log1, 13.48);\n            let log2 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].logDecimal(frenchTotal, 10.0);\n            log2 = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtractDecimal(log2, 8);\n            result = _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(_math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiplyDecimal(log1, _math_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pow(1.1, log2)), proteinBonus);\n        }\n        return result;\n    },\n    calcContagionBonus: function(data, index) {\n        let bonus = 1;\n        if (data.GrasshopperCollection[index].Locked > 0) {\n            let base = _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calcPOW(data.GrasshopperCollection[index].BaseBonus);\n            let level = _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calcPOW(data.GrasshopperCollection[index].Level);\n            bonus *= Math.pow(1 + base * 0.01, level);\n        }\n        return bonus;\n    },\n    calcExpeditionHP: function(data) {\n        let bonus = 1;\n        if (data.ExpeditionsCollection[16].Locked > 0) {\n            let temp = data.ExpeditionsCollection[16];\n            let res = Math.pow(1 + temp.BonusPower, temp.Room - 1);\n            bonus = res;\n        }\n        return bonus;\n    },\n    calcUniqueHPBonus: function(data) {\n        let bonus = 1;\n        for(let i = 0; i < data.FarmingShopUniqueHealthy.length; i++){\n            bonus *= data.FarmingShopUniqueHealthy[i] + 1;\n        }\n        return bonus;\n    },\n    calcFriesHPBonus: function(data) {\n        let bonus = 1;\n        let totalFries = _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calcPOW(data.FrenchFriesTotal);\n        let shopFryBonus = 0.01 * data.FarmingShopFriesHealthyBonus + 0.1;\n        let contagionFryBonus = this.calcContagionBonus(data, 5);\n        let fryBonus = shopFryBonus * contagionFryBonus;\n        bonus *= 1 + totalFries * fryBonus;\n        return bonus;\n    },\n    calcPetHPBonus: function(data) {\n        let bonus = 1;\n        let activePets = data.EquipedPetID;\n        let allPets = data.PetsCollection;\n        let neededMap = {};\n        for(let i = 0; i < activePets.length; i++){\n            if (activePets[i] > 0) {\n                neededMap[activePets[i]] = true;\n            }\n        }\n        for(let i = 0; i < allPets.length; i++){\n            let curr = allPets[i];\n            if (curr.ID in neededMap) {\n                // let rank = curr.Rank;\n                // let bonusInner = 0;\n                for(let j = 0; j < curr.BonusList.length; j++){\n                    let bonusInner = curr.BonusList[j];\n                    if (bonusInner.ID === 23) {\n                        //public double GetPetBonus(int Bonus)\n                        //(Math.Pow(1.0 + petDataBonus.Gain, petData.Level) - 1.0 + Math.Max(0.0, (Math.Log(petData.Level + 1, 1.0125) * 0.005 - 1.0) * 0.5)) * (1.0 + Math.Log(petData.Rank + 1, 1.075) * 0.005) * 0.5\n                        //(x1                                                     + x3) * (x5) * 0.5\n                        // (\n                        //     Math.Pow(1.0 + petDataBonus.Gain, petData.Level)\n                        //     - 1.0\n                        //     + Math.Max(\n                        //         0.0, \n                        //         (Math.Log(petData.Level + 1, 1.0125) * 0.005 - 1.0) * 0.5)\n                        // )\n                        let x1 = Math.pow(1.0 + bonusInner.Gain, curr.Level) - 1.0;\n                        let x2 = _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calculateLogarithm(1.0125, curr.Level + 1);\n                        let x3 = Math.max(0.0, (x2 * 0.005 - 1.0) * 0.5);\n                        let x4 = _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calculateLogarithm(1.075, curr.Rank + 1);\n                        let x5 = 1.0 + x4 * 0.005;\n                        let tot1 = x1 + x3;\n                        let tot2 = tot1 * x5;\n                        let tot3 = tot2 * 0.5;\n                        bonus += tot3;\n                    }\n                }\n            }\n        }\n        return bonus;\n    },\n    calcHPBonus: function(data) {\n        // let bonus = 1;\n        // let assemblyHP = this.calcAssemblyHP(data);\n        // bonus *= assemblyHP;\n        // let contagionHP = this.calcContagionBonus(data, 0);\n        // bonus *= contagionHP;\n        // let soulBonus = Math.pow(1.25, data.SoulFertilizer);\n        // bonus *= soulBonus;\n        // let expeditionBonus = this.calcExpeditionHP(data);\n        // bonus *= expeditionBonus;\n        // let FarmingShopPlantHealthyPotatoEarning = Math.pow(1.1, data.FarmingShopPlantHealthyPotatoEarning);\n        // bonus *= FarmingShopPlantHealthyPotatoEarning;\n        // let uniqueHPBonus = this.calcUniqueHPBonus(data);\n        // bonus *= uniqueHPBonus;\n        // let fryHPBonus = this.calcFriesHPBonus(data);\n        // bonus *= fryHPBonus;\n        // let petHPBonus = this.calcPetHPBonus(data);\n        // bonus *= petHPBonus;\n        // let residueHPBonus = Math.pow(1.05, data.CowShopHealthyPotato ? data.CowShopHealthyPotato : 0);\n        // bonus *= residueHPBonus;\n        // //(1 + \n        // // milk: \n        // let step1 = Math.max(0,\n        //     helper.calcPOW(data.BoostHealthyPotatoMilkBD) >= 1E+20 ?\n        //         helper.calculateLogarithm(Math.max(1.001, helper.calculateLogarithm(helper.calcPOW(data.BoostHealthyPotatoMilkBD) + 1, 1.001) - 10.0), helper.calcPOW(data.BoostHealthyPotatoMilkBD) + 1)\n        //         :\n        //         0\n        // );\n        // let temp2 = (1.0 + data.BrewingHealthyPotatoLevel * 0.005) * ((helper.calcPOW(data.BoostHealthyPotatoCalciumBD) >= 1E+20)\n        //     ? (Math.pow(1.05, helper.calculateLogarithm(Math.max(1.001, helper.calculateLogarithm(1.001, helper.calcPOW(data.BoostHealthyPotatoCalciumBD) + 1) - 10.0), helper.calcPOW(data.BoostHealthyPotatoCalciumBD) + 1)) - 0.228)\n        //     : 1)\n        // let tempy = (Math.pow(1.05, helper.calculateLogarithm(helper.calcPOW(Math.max(1.001, helper.calculateLogarithm(1.001, helper.calcPOW(data.BoostHealthyPotatoCalciumBD) + 1) - 10.0), data.BoostHealthyPotatoCalciumBD) + 1)) - 0.228);\n        // let temp3 = helper.calculateLogarithm(data.BoostHealthyPotatoMilkBD + 1, 1.001)\n        // //brewing:  \n        // //fermenting: (1.0 + GM.PD.HealthyPotatoPetRankExpFermentingLevel * 0.0025)))\n        // let milkHPBonus = helper.calcPOW(data.BoostHealthyPotatoMilkBD);\n        // // bonus *= milkHPBonus;\n        let legitBonus = _helper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].calcPOW(data.HealthyPotatoBonus);\n        return legitBonus;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (farmingHelper);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/util/farmingHelper.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/util/helper.js":
/*!********************************!*\
  !*** ./src/app/util/helper.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nvar helper = {\n    roundTwoDecimal: function(number) {\n        return Math.round((number + Number.EPSILON) * 100) / 100;\n    },\n    roundThreeDecimal: function(number) {\n        return Math.round((number + Number.EPSILON) * 1000) / 1000;\n    },\n    roundFiveDecimal: function(number) {\n        return Math.round((number + Number.EPSILON) * 100000) / 100000;\n    },\n    roundInt: function(num) {\n        return Math.round((num + Number.EPSILON) * 1) / 1;\n    },\n    calculateLogarithm: function(base, x) {\n        var a = Math.log(x);\n        var b = Math.log(base);\n        return a / b;\n    },\n    calcPOW: function(val) {\n        return val.mantissa * Math.pow(10, val.exponent);\n    },\n    secondsToStringWithS: function(seconds) {\n        let string = \"\";\n        let numDays = 0;\n        let numHours = 0;\n        let numMinutes = 0;\n        let numSeconds = 0;\n        numDays = Math.floor(seconds / (3600 * 24));\n        numHours = Math.floor(seconds % (3600 * 24) / 3600);\n        numMinutes = Math.floor(seconds % 3600 / 60);\n        numSeconds = this.roundInt(seconds % (3600 * 24) % 60);\n        if (numDays == Number.POSITIVE_INFINITY || numDays == Number.NEGATIVE_INFINITY) {\n            return \"\" + numDays;\n        }\n        if (numSeconds === 60) {\n            numSeconds = 0;\n            numMinutes++;\n        }\n        if (numMinutes === 60) {\n            numMinutes = 0;\n            numHours++;\n        }\n        if (numHours === 24) {\n            numHours = 0;\n            numDays++;\n        }\n        if (numDays > 0) {\n            string = string + \"\".concat(numDays < 10 ? \"0\" + numDays : numDays, \"d:\");\n        }\n        if (numHours > 0) {\n            string = string + \"\".concat(numHours < 10 ? \"0\" + numHours : numHours, \"h:\");\n        }\n        if (numMinutes > 0) {\n            string = string + \"\".concat(numMinutes < 10 ? \"0\" + numMinutes : numMinutes, \"m:\");\n        }\n        if (numSeconds > 0) {\n            string = string + \"\".concat(numSeconds < 10 ? \"0\" + numSeconds : numSeconds, \"s\");\n        } else {\n            string = string + \"0s\";\n        }\n        return string;\n    },\n    secondsToString: function(seconds) {\n        let string = \"\";\n        let numDays = 0;\n        let numHours = 0;\n        let numMinutes = 0;\n        numDays = Math.floor(seconds / (3600 * 24));\n        numHours = Math.floor(seconds % (3600 * 24) / 3600);\n        numMinutes = this.roundInt(seconds % 3600 / 60);\n        if (numMinutes === 60) {\n            numMinutes = 0;\n            numHours++;\n        }\n        if (numHours === 24) {\n            numHours = 0;\n            numDays++;\n        }\n        if (numDays == Number.POSITIVE_INFINITY || numDays == Number.NEGATIVE_INFINITY) {\n            return \"\" + numDays;\n        }\n        if (numDays > 0) {\n            string = string + \"\".concat(numDays < 10 ? \"0\" + numDays : numDays, \"d:\");\n            if (numHours === 0) {\n                string = string + \"00h\";\n            }\n        }\n        if (numHours > 0 || numHours === 0 && numDays === 0) {\n            string = string + \"\".concat(numHours < 10 ? \"0\" + numHours : numHours, \"h\");\n        }\n        if (numDays === 0) {\n            string = string + \":\";\n            if (numMinutes > 0) {\n                string = string + \"\".concat(numMinutes < 10 ? \"0\" + numMinutes : numMinutes, \"m\");\n            } else {\n                string = string + \"0s\";\n            }\n        }\n        return string;\n    },\n    bonusColorMap: {\n        // 1001: { color: 'maroon' },\n        // 1002: { color: 'orange' },\n        // 1003: { color: 'purple' },\n        1009: {\n            color: \"cyan\"\n        },\n        1010: {\n            color: \"maroon\"\n        },\n        1011: {\n            color: \"purple\"\n        },\n        1012: {\n            color: \"yellow\"\n        },\n        1013: {\n            color: \"red\"\n        },\n        1014: {\n            color: \"blue\"\n        },\n        1015: {\n            color: \"gray\"\n        },\n        1016: {\n            color: \"green\"\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (helper);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/util/helper.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/util/math.js":
/*!******************************!*\
  !*** ./src/app/util/math.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"(app-pages-browser)/./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n\nvar helper = {\n    createDecimal: function(number) {\n        let deci = number.mantissa || number.mantissa === 0 ? new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"\".concat(number.mantissa, \"e\").concat(number.exponent)) : new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](number);\n        return deci;\n    },\n    multiplyDecimal: function(a, b) {\n        a = a.mantissa || a.mantissa === 0 ? a : this.createDecimal(a);\n        return a.times(b);\n    },\n    divideDecimal: function(a, b) {\n        a = a.mantissa || a.mantissa === 0 ? a : this.createDecimal(a);\n        return a.dividedBy(b);\n    },\n    addDecimal: function(a, b) {\n        a = a.mantissa || a.mantissa === 0 ? a : this.createDecimal(a);\n        return a.plus(b);\n    },\n    subtractDecimal: function(a, b) {\n        a = a.mantissa || a.mantissa === 0 ? a : this.createDecimal(a);\n        return a.minus(b);\n    },\n    logDecimal: function(number, base) {\n        number = number.mantissa || number.mantissa === 0 ? number : this.createDecimal(number);\n        return this.createDecimal(number.log(base));\n    },\n    pow: function(number, exp) {\n        number = number.mantissa || number.mantissa === 0 ? number : this.createDecimal(number);\n        return number.pow(exp);\n    },\n    min: function(number1, number2) {\n        number1 = number1.mantissa || number1.mantissa === 0 ? number1 : this.createDecimal(number1);\n        number2 = number2.mantissa || number2.mantissa === 0 ? number2 : this.createDecimal(number2);\n        if (number1.greaterThan(number2)) {\n            return number2;\n        }\n        return number1;\n    },\n    max: function(number1, number2) {\n        number1 = number1.mantissa || number1.mantissa === 0 ? number1 : this.createDecimal(number1);\n        number2 = number2.mantissa || number2.mantissa === 0 ? number2 : this.createDecimal(number2);\n        if (number1.greaterThan(number2)) {\n            return number1;\n        }\n        return number2;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (helper);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvdXRpbC9tYXRoLmpzIiwibWFwcGluZ3MiOiI7O0FBQXdDO0FBQ3hDLElBQUlDLFNBQVM7SUFDVEMsZUFBZSxTQUFVQyxNQUFNO1FBQzNCLElBQUlDLE9BQU9ELE9BQU9FLFFBQVEsSUFBSUYsT0FBT0UsUUFBUSxLQUFLLElBQUksSUFBSUwseURBQU9BLENBQUMsR0FBc0JHLE9BQW5CQSxPQUFPRSxRQUFRLEVBQUMsS0FBbUIsT0FBaEJGLE9BQU9HLFFBQVEsS0FBTSxJQUFJTix5REFBT0EsQ0FBQ0c7UUFFekgsT0FBT0M7SUFDWDtJQUNBRyxpQkFBaUIsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQzNCRCxJQUFJQSxFQUFFSCxRQUFRLElBQUlHLEVBQUVILFFBQVEsS0FBSyxJQUFJRyxJQUFJLElBQUksQ0FBQ04sYUFBYSxDQUFDTTtRQUM1RCxPQUFPQSxFQUFFRSxLQUFLLENBQUNEO0lBQ25CO0lBQ0FFLGVBQWUsU0FBVUgsQ0FBQyxFQUFFQyxDQUFDO1FBQ3pCRCxJQUFJQSxFQUFFSCxRQUFRLElBQUlHLEVBQUVILFFBQVEsS0FBSyxJQUFJRyxJQUFJLElBQUksQ0FBQ04sYUFBYSxDQUFDTTtRQUM1RCxPQUFPQSxFQUFFSSxTQUFTLENBQUNIO0lBQ3ZCO0lBQ0FJLFlBQVksU0FBVUwsQ0FBQyxFQUFFQyxDQUFDO1FBQ3RCRCxJQUFJQSxFQUFFSCxRQUFRLElBQUlHLEVBQUVILFFBQVEsS0FBSyxJQUFJRyxJQUFJLElBQUksQ0FBQ04sYUFBYSxDQUFDTTtRQUM1RCxPQUFPQSxFQUFFTSxJQUFJLENBQUNMO0lBQ2xCO0lBQ0FNLGlCQUFpQixTQUFVUCxDQUFDLEVBQUVDLENBQUM7UUFDM0JELElBQUlBLEVBQUVILFFBQVEsSUFBSUcsRUFBRUgsUUFBUSxLQUFLLElBQUlHLElBQUksSUFBSSxDQUFDTixhQUFhLENBQUNNO1FBQzVELE9BQU9BLEVBQUVRLEtBQUssQ0FBQ1A7SUFDbkI7SUFDQVEsWUFBWSxTQUFVZCxNQUFNLEVBQUVlLElBQUk7UUFDOUJmLFNBQVNBLE9BQU9FLFFBQVEsSUFBSUYsT0FBT0UsUUFBUSxLQUFLLElBQUlGLFNBQVMsSUFBSSxDQUFDRCxhQUFhLENBQUNDO1FBQ2hGLE9BQU8sSUFBSSxDQUFDRCxhQUFhLENBQUNDLE9BQU9nQixHQUFHLENBQUNEO0lBQ3pDO0lBQ0FFLEtBQUssU0FBVWpCLE1BQU0sRUFBRWtCLEdBQUc7UUFDdEJsQixTQUFTQSxPQUFPRSxRQUFRLElBQUlGLE9BQU9FLFFBQVEsS0FBSyxJQUFJRixTQUFTLElBQUksQ0FBQ0QsYUFBYSxDQUFDQztRQUNoRixPQUFPQSxPQUFPaUIsR0FBRyxDQUFDQztJQUN0QjtJQUNBQyxLQUFLLFNBQVVDLE9BQU8sRUFBRUMsT0FBTztRQUMzQkQsVUFBVUEsUUFBUWxCLFFBQVEsSUFBSWtCLFFBQVFsQixRQUFRLEtBQUssSUFBSWtCLFVBQVUsSUFBSSxDQUFDckIsYUFBYSxDQUFDcUI7UUFDcEZDLFVBQVVBLFFBQVFuQixRQUFRLElBQUltQixRQUFRbkIsUUFBUSxLQUFLLElBQUltQixVQUFVLElBQUksQ0FBQ3RCLGFBQWEsQ0FBQ3NCO1FBRXBGLElBQUlELFFBQVFFLFdBQVcsQ0FBQ0QsVUFBVTtZQUM5QixPQUFPQTtRQUNYO1FBQ0EsT0FBT0Q7SUFDWDtJQUNBRyxLQUFLLFNBQVVILE9BQU8sRUFBRUMsT0FBTztRQUMzQkQsVUFBVUEsUUFBUWxCLFFBQVEsSUFBSWtCLFFBQVFsQixRQUFRLEtBQUssSUFBSWtCLFVBQVUsSUFBSSxDQUFDckIsYUFBYSxDQUFDcUI7UUFDcEZDLFVBQVVBLFFBQVFuQixRQUFRLElBQUltQixRQUFRbkIsUUFBUSxLQUFLLElBQUltQixVQUFVLElBQUksQ0FBQ3RCLGFBQWEsQ0FBQ3NCO1FBRXBGLElBQUlELFFBQVFFLFdBQVcsQ0FBQ0QsVUFBVTtZQUM5QixPQUFPRDtRQUNYO1FBQ0EsT0FBT0M7SUFDWDtBQUNKO0FBR0EsK0RBQWV2QixNQUFNQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvdXRpbC9tYXRoLmpzPzc3ZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERlY2ltYWwgZnJvbSAnYnJlYWtfaW5maW5pdHkuanMnO1xyXG52YXIgaGVscGVyID0ge1xyXG4gICAgY3JlYXRlRGVjaW1hbDogZnVuY3Rpb24gKG51bWJlcikge1xyXG4gICAgICAgIGxldCBkZWNpID0gbnVtYmVyLm1hbnRpc3NhIHx8IG51bWJlci5tYW50aXNzYSA9PT0gMCA/IG5ldyBEZWNpbWFsKGAke251bWJlci5tYW50aXNzYX1lJHtudW1iZXIuZXhwb25lbnR9YCkgOiBuZXcgRGVjaW1hbChudW1iZXIpO1xyXG5cclxuICAgICAgICByZXR1cm4gZGVjaTtcclxuICAgIH0sXHJcbiAgICBtdWx0aXBseURlY2ltYWw6IGZ1bmN0aW9uIChhLCBiKSB7XHJcbiAgICAgICAgYSA9IGEubWFudGlzc2EgfHwgYS5tYW50aXNzYSA9PT0gMCA/IGEgOiB0aGlzLmNyZWF0ZURlY2ltYWwoYSk7XHJcbiAgICAgICAgcmV0dXJuIGEudGltZXMoYik7XHJcbiAgICB9LFxyXG4gICAgZGl2aWRlRGVjaW1hbDogZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgICAgICBhID0gYS5tYW50aXNzYSB8fCBhLm1hbnRpc3NhID09PSAwID8gYSA6IHRoaXMuY3JlYXRlRGVjaW1hbChhKTtcclxuICAgICAgICByZXR1cm4gYS5kaXZpZGVkQnkoYik7XHJcbiAgICB9LFxyXG4gICAgYWRkRGVjaW1hbDogZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgICAgICBhID0gYS5tYW50aXNzYSB8fCBhLm1hbnRpc3NhID09PSAwID8gYSA6IHRoaXMuY3JlYXRlRGVjaW1hbChhKTtcclxuICAgICAgICByZXR1cm4gYS5wbHVzKGIpO1xyXG4gICAgfSxcclxuICAgIHN1YnRyYWN0RGVjaW1hbDogZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgICAgICBhID0gYS5tYW50aXNzYSB8fCBhLm1hbnRpc3NhID09PSAwID8gYSA6IHRoaXMuY3JlYXRlRGVjaW1hbChhKTtcclxuICAgICAgICByZXR1cm4gYS5taW51cyhiKTtcclxuICAgIH0sXHJcbiAgICBsb2dEZWNpbWFsOiBmdW5jdGlvbiAobnVtYmVyLCBiYXNlKSB7XHJcbiAgICAgICAgbnVtYmVyID0gbnVtYmVyLm1hbnRpc3NhIHx8IG51bWJlci5tYW50aXNzYSA9PT0gMCA/IG51bWJlciA6IHRoaXMuY3JlYXRlRGVjaW1hbChudW1iZXIpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZURlY2ltYWwobnVtYmVyLmxvZyhiYXNlKSk7XHJcbiAgICB9LFxyXG4gICAgcG93OiBmdW5jdGlvbiAobnVtYmVyLCBleHApIHtcclxuICAgICAgICBudW1iZXIgPSBudW1iZXIubWFudGlzc2EgfHwgbnVtYmVyLm1hbnRpc3NhID09PSAwID8gbnVtYmVyIDogdGhpcy5jcmVhdGVEZWNpbWFsKG51bWJlcik7XHJcbiAgICAgICAgcmV0dXJuIG51bWJlci5wb3coZXhwKTtcclxuICAgIH0sXHJcbiAgICBtaW46IGZ1bmN0aW9uIChudW1iZXIxLCBudW1iZXIyKSB7XHJcbiAgICAgICAgbnVtYmVyMSA9IG51bWJlcjEubWFudGlzc2EgfHwgbnVtYmVyMS5tYW50aXNzYSA9PT0gMCA/IG51bWJlcjEgOiB0aGlzLmNyZWF0ZURlY2ltYWwobnVtYmVyMSk7XHJcbiAgICAgICAgbnVtYmVyMiA9IG51bWJlcjIubWFudGlzc2EgfHwgbnVtYmVyMi5tYW50aXNzYSA9PT0gMCA/IG51bWJlcjIgOiB0aGlzLmNyZWF0ZURlY2ltYWwobnVtYmVyMik7XHJcblxyXG4gICAgICAgIGlmIChudW1iZXIxLmdyZWF0ZXJUaGFuKG51bWJlcjIpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudW1iZXIyO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVtYmVyMTtcclxuICAgIH0sXHJcbiAgICBtYXg6IGZ1bmN0aW9uIChudW1iZXIxLCBudW1iZXIyKSB7XHJcbiAgICAgICAgbnVtYmVyMSA9IG51bWJlcjEubWFudGlzc2EgfHwgbnVtYmVyMS5tYW50aXNzYSA9PT0gMCA/IG51bWJlcjEgOiB0aGlzLmNyZWF0ZURlY2ltYWwobnVtYmVyMSk7XHJcbiAgICAgICAgbnVtYmVyMiA9IG51bWJlcjIubWFudGlzc2EgfHwgbnVtYmVyMi5tYW50aXNzYSA9PT0gMCA/IG51bWJlcjIgOiB0aGlzLmNyZWF0ZURlY2ltYWwobnVtYmVyMik7XHJcblxyXG4gICAgICAgIGlmIChudW1iZXIxLmdyZWF0ZXJUaGFuKG51bWJlcjIpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudW1iZXIxO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVtYmVyMjtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGhlbHBlcjsiXSwibmFtZXMiOlsiRGVjaW1hbCIsImhlbHBlciIsImNyZWF0ZURlY2ltYWwiLCJudW1iZXIiLCJkZWNpIiwibWFudGlzc2EiLCJleHBvbmVudCIsIm11bHRpcGx5RGVjaW1hbCIsImEiLCJiIiwidGltZXMiLCJkaXZpZGVEZWNpbWFsIiwiZGl2aWRlZEJ5IiwiYWRkRGVjaW1hbCIsInBsdXMiLCJzdWJ0cmFjdERlY2ltYWwiLCJtaW51cyIsImxvZ0RlY2ltYWwiLCJiYXNlIiwibG9nIiwicG93IiwiZXhwIiwibWluIiwibnVtYmVyMSIsIm51bWJlcjIiLCJncmVhdGVyVGhhbiIsIm1heCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/util/math.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pad-end/index.js":
/*!***************************************!*\
  !*** ./node_modules/pad-end/index.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wYWQtZW5kL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3BhZC1lbmQvaW5kZXguanM/MzIxOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0cmluZywgbWF4TGVuZ3RoLCBmaWxsU3RyaW5nKSB7XG5cbiAgaWYgKHN0cmluZyA9PSBudWxsIHx8IG1heExlbmd0aCA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHN0cmluZztcbiAgfVxuXG4gIHZhciByZXN1bHQgICAgPSBTdHJpbmcoc3RyaW5nKTtcbiAgdmFyIHRhcmdldExlbiA9IHR5cGVvZiBtYXhMZW5ndGggPT09ICdudW1iZXInXG4gICAgPyBtYXhMZW5ndGhcbiAgICA6IHBhcnNlSW50KG1heExlbmd0aCwgMTApO1xuXG4gIGlmIChpc05hTih0YXJnZXRMZW4pIHx8ICFpc0Zpbml0ZSh0YXJnZXRMZW4pKSB7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG5cbiAgdmFyIGxlbmd0aCA9IHJlc3VsdC5sZW5ndGg7XG4gIGlmIChsZW5ndGggPj0gdGFyZ2V0TGVuKSB7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG5cbiAgdmFyIGZpbGxlZCA9IGZpbGxTdHJpbmcgPT0gbnVsbCA/ICcnIDogU3RyaW5nKGZpbGxTdHJpbmcpO1xuICBpZiAoZmlsbGVkID09PSAnJykge1xuICAgIGZpbGxlZCA9ICcgJztcbiAgfVxuXG5cbiAgdmFyIGZpbGxMZW4gPSB0YXJnZXRMZW4gLSBsZW5ndGg7XG5cbiAgd2hpbGUgKGZpbGxlZC5sZW5ndGggPCBmaWxsTGVuKSB7XG4gICAgZmlsbGVkICs9IGZpbGxlZDtcbiAgfVxuXG4gIHZhciB0cnVuY2F0ZWQgPSBmaWxsZWQubGVuZ3RoID4gZmlsbExlbiA/IGZpbGxlZC5zdWJzdHIoMCwgZmlsbExlbikgOiBmaWxsZWQ7XG5cbiAgcmV0dXJuIHJlc3VsdCArIHRydW5jYXRlZDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pad-end/index.js\n"));

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			if (cachedModule.error !== undefined) throw cachedModule.error;
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
/******/ 			__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
/******/ 			module = execOptions.module;
/******/ 			execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/******/ 	// expose the module execution interceptor
/******/ 	__webpack_require__.i = [];
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get javascript update chunk filename */
/******/ 	!function() {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.hu = function(chunkId) {
/******/ 			// return url for filenames based on template
/******/ 			return "static/webpack/" + chunkId + "." + __webpack_require__.h() + ".hot-update.js";
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	!function() {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.miniCssF = function(chunkId) {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get update manifest filename */
/******/ 	!function() {
/******/ 		__webpack_require__.hmrF = function() { return "static/webpack/" + __webpack_require__.h() + ".09d32a17d1b34793.hot-update.json"; };
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	!function() {
/******/ 		__webpack_require__.h = function() { return "b27b7714637cdc95"; }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/trusted types policy */
/******/ 	!function() {
/******/ 		var policy;
/******/ 		__webpack_require__.tt = function() {
/******/ 			// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.
/******/ 			if (policy === undefined) {
/******/ 				policy = {
/******/ 					createScript: function(script) { return script; },
/******/ 					createScriptURL: function(url) { return url; }
/******/ 				};
/******/ 				if (typeof trustedTypes !== "undefined" && trustedTypes.createPolicy) {
/******/ 					policy = trustedTypes.createPolicy("nextjs#bundler", policy);
/******/ 				}
/******/ 			}
/******/ 			return policy;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/trusted types script */
/******/ 	!function() {
/******/ 		__webpack_require__.ts = function(script) { return __webpack_require__.tt().createScript(script); };
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/trusted types script url */
/******/ 	!function() {
/******/ 		__webpack_require__.tu = function(url) { return __webpack_require__.tt().createScriptURL(url); };
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hot module replacement */
/******/ 	!function() {
/******/ 		var currentModuleData = {};
/******/ 		var installedModules = __webpack_require__.c;
/******/ 		
/******/ 		// module and require creation
/******/ 		var currentChildModule;
/******/ 		var currentParents = [];
/******/ 		
/******/ 		// status
/******/ 		var registeredStatusHandlers = [];
/******/ 		var currentStatus = "idle";
/******/ 		
/******/ 		// while downloading
/******/ 		var blockingPromises = 0;
/******/ 		var blockingPromisesWaiting = [];
/******/ 		
/******/ 		// The update info
/******/ 		var currentUpdateApplyHandlers;
/******/ 		var queuedInvalidatedModules;
/******/ 		
/******/ 		// eslint-disable-next-line no-unused-vars
/******/ 		__webpack_require__.hmrD = currentModuleData;
/******/ 		
/******/ 		__webpack_require__.i.push(function (options) {
/******/ 			var module = options.module;
/******/ 			var require = createRequire(options.require, options.id);
/******/ 			module.hot = createModuleHotObject(options.id, module);
/******/ 			module.parents = currentParents;
/******/ 			module.children = [];
/******/ 			currentParents = [];
/******/ 			options.require = require;
/******/ 		});
/******/ 		
/******/ 		__webpack_require__.hmrC = {};
/******/ 		__webpack_require__.hmrI = {};
/******/ 		
/******/ 		function createRequire(require, moduleId) {
/******/ 			var me = installedModules[moduleId];
/******/ 			if (!me) return require;
/******/ 			var fn = function (request) {
/******/ 				if (me.hot.active) {
/******/ 					if (installedModules[request]) {
/******/ 						var parents = installedModules[request].parents;
/******/ 						if (parents.indexOf(moduleId) === -1) {
/******/ 							parents.push(moduleId);
/******/ 						}
/******/ 					} else {
/******/ 						currentParents = [moduleId];
/******/ 						currentChildModule = request;
/******/ 					}
/******/ 					if (me.children.indexOf(request) === -1) {
/******/ 						me.children.push(request);
/******/ 					}
/******/ 				} else {
/******/ 					console.warn(
/******/ 						"[HMR] unexpected require(" +
/******/ 							request +
/******/ 							") from disposed module " +
/******/ 							moduleId
/******/ 					);
/******/ 					currentParents = [];
/******/ 				}
/******/ 				return require(request);
/******/ 			};
/******/ 			var createPropertyDescriptor = function (name) {
/******/ 				return {
/******/ 					configurable: true,
/******/ 					enumerable: true,
/******/ 					get: function () {
/******/ 						return require[name];
/******/ 					},
/******/ 					set: function (value) {
/******/ 						require[name] = value;
/******/ 					}
/******/ 				};
/******/ 			};
/******/ 			for (var name in require) {
/******/ 				if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
/******/ 					Object.defineProperty(fn, name, createPropertyDescriptor(name));
/******/ 				}
/******/ 			}
/******/ 			fn.e = function (chunkId) {
/******/ 				return trackBlockingPromise(require.e(chunkId));
/******/ 			};
/******/ 			return fn;
/******/ 		}
/******/ 		
/******/ 		function createModuleHotObject(moduleId, me) {
/******/ 			var _main = currentChildModule !== moduleId;
/******/ 			var hot = {
/******/ 				// private stuff
/******/ 				_acceptedDependencies: {},
/******/ 				_acceptedErrorHandlers: {},
/******/ 				_declinedDependencies: {},
/******/ 				_selfAccepted: false,
/******/ 				_selfDeclined: false,
/******/ 				_selfInvalidated: false,
/******/ 				_disposeHandlers: [],
/******/ 				_main: _main,
/******/ 				_requireSelf: function () {
/******/ 					currentParents = me.parents.slice();
/******/ 					currentChildModule = _main ? undefined : moduleId;
/******/ 					__webpack_require__(moduleId);
/******/ 				},
/******/ 		
/******/ 				// Module API
/******/ 				active: true,
/******/ 				accept: function (dep, callback, errorHandler) {
/******/ 					if (dep === undefined) hot._selfAccepted = true;
/******/ 					else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 					else if (typeof dep === "object" && dep !== null) {
/******/ 						for (var i = 0; i < dep.length; i++) {
/******/ 							hot._acceptedDependencies[dep[i]] = callback || function () {};
/******/ 							hot._acceptedErrorHandlers[dep[i]] = errorHandler;
/******/ 						}
/******/ 					} else {
/******/ 						hot._acceptedDependencies[dep] = callback || function () {};
/******/ 						hot._acceptedErrorHandlers[dep] = errorHandler;
/******/ 					}
/******/ 				},
/******/ 				decline: function (dep) {
/******/ 					if (dep === undefined) hot._selfDeclined = true;
/******/ 					else if (typeof dep === "object" && dep !== null)
/******/ 						for (var i = 0; i < dep.length; i++)
/******/ 							hot._declinedDependencies[dep[i]] = true;
/******/ 					else hot._declinedDependencies[dep] = true;
/******/ 				},
/******/ 				dispose: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				addDisposeHandler: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				removeDisposeHandler: function (callback) {
/******/ 					var idx = hot._disposeHandlers.indexOf(callback);
/******/ 					if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 				},
/******/ 				invalidate: function () {
/******/ 					this._selfInvalidated = true;
/******/ 					switch (currentStatus) {
/******/ 						case "idle":
/******/ 							currentUpdateApplyHandlers = [];
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							setStatus("ready");
/******/ 							break;
/******/ 						case "ready":
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							break;
/******/ 						case "prepare":
/******/ 						case "check":
/******/ 						case "dispose":
/******/ 						case "apply":
/******/ 							(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
/******/ 								moduleId
/******/ 							);
/******/ 							break;
/******/ 						default:
/******/ 							// ignore requests in error states
/******/ 							break;
/******/ 					}
/******/ 				},
/******/ 		
/******/ 				// Management API
/******/ 				check: hotCheck,
/******/ 				apply: hotApply,
/******/ 				status: function (l) {
/******/ 					if (!l) return currentStatus;
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				addStatusHandler: function (l) {
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				removeStatusHandler: function (l) {
/******/ 					var idx = registeredStatusHandlers.indexOf(l);
/******/ 					if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
/******/ 				},
/******/ 		
/******/ 				//inherit from previous dispose call
/******/ 				data: currentModuleData[moduleId]
/******/ 			};
/******/ 			currentChildModule = undefined;
/******/ 			return hot;
/******/ 		}
/******/ 		
/******/ 		function setStatus(newStatus) {
/******/ 			currentStatus = newStatus;
/******/ 			var results = [];
/******/ 		
/******/ 			for (var i = 0; i < registeredStatusHandlers.length; i++)
/******/ 				results[i] = registeredStatusHandlers[i].call(null, newStatus);
/******/ 		
/******/ 			return Promise.all(results);
/******/ 		}
/******/ 		
/******/ 		function unblock() {
/******/ 			if (--blockingPromises === 0) {
/******/ 				setStatus("ready").then(function () {
/******/ 					if (blockingPromises === 0) {
/******/ 						var list = blockingPromisesWaiting;
/******/ 						blockingPromisesWaiting = [];
/******/ 						for (var i = 0; i < list.length; i++) {
/******/ 							list[i]();
/******/ 						}
/******/ 					}
/******/ 				});
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function trackBlockingPromise(promise) {
/******/ 			switch (currentStatus) {
/******/ 				case "ready":
/******/ 					setStatus("prepare");
/******/ 				/* fallthrough */
/******/ 				case "prepare":
/******/ 					blockingPromises++;
/******/ 					promise.then(unblock, unblock);
/******/ 					return promise;
/******/ 				default:
/******/ 					return promise;
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function waitForBlockingPromises(fn) {
/******/ 			if (blockingPromises === 0) return fn();
/******/ 			return new Promise(function (resolve) {
/******/ 				blockingPromisesWaiting.push(function () {
/******/ 					resolve(fn());
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotCheck(applyOnUpdate) {
/******/ 			if (currentStatus !== "idle") {
/******/ 				throw new Error("check() is only allowed in idle status");
/******/ 			}
/******/ 			return setStatus("check")
/******/ 				.then(__webpack_require__.hmrM)
/******/ 				.then(function (update) {
/******/ 					if (!update) {
/******/ 						return setStatus(applyInvalidatedModules() ? "ready" : "idle").then(
/******/ 							function () {
/******/ 								return null;
/******/ 							}
/******/ 						);
/******/ 					}
/******/ 		
/******/ 					return setStatus("prepare").then(function () {
/******/ 						var updatedModules = [];
/******/ 						currentUpdateApplyHandlers = [];
/******/ 		
/******/ 						return Promise.all(
/******/ 							Object.keys(__webpack_require__.hmrC).reduce(function (
/******/ 								promises,
/******/ 								key
/******/ 							) {
/******/ 								__webpack_require__.hmrC[key](
/******/ 									update.c,
/******/ 									update.r,
/******/ 									update.m,
/******/ 									promises,
/******/ 									currentUpdateApplyHandlers,
/******/ 									updatedModules
/******/ 								);
/******/ 								return promises;
/******/ 							},
/******/ 							[])
/******/ 						).then(function () {
/******/ 							return waitForBlockingPromises(function () {
/******/ 								if (applyOnUpdate) {
/******/ 									return internalApply(applyOnUpdate);
/******/ 								} else {
/******/ 									return setStatus("ready").then(function () {
/******/ 										return updatedModules;
/******/ 									});
/******/ 								}
/******/ 							});
/******/ 						});
/******/ 					});
/******/ 				});
/******/ 		}
/******/ 		
/******/ 		function hotApply(options) {
/******/ 			if (currentStatus !== "ready") {
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw new Error(
/******/ 						"apply() is only allowed in ready status (state: " +
/******/ 							currentStatus +
/******/ 							")"
/******/ 					);
/******/ 				});
/******/ 			}
/******/ 			return internalApply(options);
/******/ 		}
/******/ 		
/******/ 		function internalApply(options) {
/******/ 			options = options || {};
/******/ 		
/******/ 			applyInvalidatedModules();
/******/ 		
/******/ 			var results = currentUpdateApplyHandlers.map(function (handler) {
/******/ 				return handler(options);
/******/ 			});
/******/ 			currentUpdateApplyHandlers = undefined;
/******/ 		
/******/ 			var errors = results
/******/ 				.map(function (r) {
/******/ 					return r.error;
/******/ 				})
/******/ 				.filter(Boolean);
/******/ 		
/******/ 			if (errors.length > 0) {
/******/ 				return setStatus("abort").then(function () {
/******/ 					throw errors[0];
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			// Now in "dispose" phase
/******/ 			var disposePromise = setStatus("dispose");
/******/ 		
/******/ 			results.forEach(function (result) {
/******/ 				if (result.dispose) result.dispose();
/******/ 			});
/******/ 		
/******/ 			// Now in "apply" phase
/******/ 			var applyPromise = setStatus("apply");
/******/ 		
/******/ 			var error;
/******/ 			var reportError = function (err) {
/******/ 				if (!error) error = err;
/******/ 			};
/******/ 		
/******/ 			var outdatedModules = [];
/******/ 			results.forEach(function (result) {
/******/ 				if (result.apply) {
/******/ 					var modules = result.apply(reportError);
/******/ 					if (modules) {
/******/ 						for (var i = 0; i < modules.length; i++) {
/******/ 							outdatedModules.push(modules[i]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		
/******/ 			return Promise.all([disposePromise, applyPromise]).then(function () {
/******/ 				// handle errors in accept handlers and self accepted module load
/******/ 				if (error) {
/******/ 					return setStatus("fail").then(function () {
/******/ 						throw error;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				if (queuedInvalidatedModules) {
/******/ 					return internalApply(options).then(function (list) {
/******/ 						outdatedModules.forEach(function (moduleId) {
/******/ 							if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 						});
/******/ 						return list;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				return setStatus("idle").then(function () {
/******/ 					return outdatedModules;
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function applyInvalidatedModules() {
/******/ 			if (queuedInvalidatedModules) {
/******/ 				if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
/******/ 				Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 					queuedInvalidatedModules.forEach(function (moduleId) {
/******/ 						__webpack_require__.hmrI[key](
/******/ 							moduleId,
/******/ 							currentUpdateApplyHandlers
/******/ 						);
/******/ 					});
/******/ 				});
/******/ 				queuedInvalidatedModules = undefined;
/******/ 				return true;
/******/ 			}
/******/ 		}
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	!function() {
/******/ 		__webpack_require__.p = "/_next/";
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/react refresh */
/******/ 	!function() {
/******/ 		if (__webpack_require__.i) {
/******/ 		__webpack_require__.i.push(function(options) {
/******/ 			var originalFactory = options.factory;
/******/ 			options.factory = function(moduleObject, moduleExports, webpackRequire) {
/******/ 				var hasRefresh = typeof self !== "undefined" && !!self.$RefreshInterceptModuleExecution$;
/******/ 				var cleanup = hasRefresh ? self.$RefreshInterceptModuleExecution$(moduleObject.id) : function() {};
/******/ 				try {
/******/ 					originalFactory.call(this, moduleObject, moduleExports, webpackRequire);
/******/ 				} finally {
/******/ 					cleanup();
/******/ 				}
/******/ 			}
/******/ 		})
/******/ 		}
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	
/******/ 	// noop fns to prevent runtime errors during initialization
/******/ 	if (typeof self !== "undefined") {
/******/ 		self.$RefreshReg$ = function () {};
/******/ 		self.$RefreshSig$ = function () {
/******/ 			return function (type) {
/******/ 				return type;
/******/ 			};
/******/ 		};
/******/ 	}
/******/ 	
/******/ 	/* webpack/runtime/css loading */
/******/ 	!function() {
/******/ 		var createStylesheet = function(chunkId, fullhref, resolve, reject) {
/******/ 			var linkTag = document.createElement("link");
/******/ 		
/******/ 			linkTag.rel = "stylesheet";
/******/ 			linkTag.type = "text/css";
/******/ 			var onLinkComplete = function(event) {
/******/ 				// avoid mem leaks.
/******/ 				linkTag.onerror = linkTag.onload = null;
/******/ 				if (event.type === 'load') {
/******/ 					resolve();
/******/ 				} else {
/******/ 					var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 					var realHref = event && event.target && event.target.href || fullhref;
/******/ 					var err = new Error("Loading CSS chunk " + chunkId + " failed.\n(" + realHref + ")");
/******/ 					err.code = "CSS_CHUNK_LOAD_FAILED";
/******/ 					err.type = errorType;
/******/ 					err.request = realHref;
/******/ 					linkTag.parentNode.removeChild(linkTag)
/******/ 					reject(err);
/******/ 				}
/******/ 			}
/******/ 			linkTag.onerror = linkTag.onload = onLinkComplete;
/******/ 			linkTag.href = fullhref;
/******/ 		
/******/ 			document.head.appendChild(linkTag);
/******/ 			return linkTag;
/******/ 		};
/******/ 		var findStylesheet = function(href, fullhref) {
/******/ 			var existingLinkTags = document.getElementsByTagName("link");
/******/ 			for(var i = 0; i < existingLinkTags.length; i++) {
/******/ 				var tag = existingLinkTags[i];
/******/ 				var dataHref = tag.getAttribute("data-href") || tag.getAttribute("href");
/******/ 				if(tag.rel === "stylesheet" && (dataHref === href || dataHref === fullhref)) return tag;
/******/ 			}
/******/ 			var existingStyleTags = document.getElementsByTagName("style");
/******/ 			for(var i = 0; i < existingStyleTags.length; i++) {
/******/ 				var tag = existingStyleTags[i];
/******/ 				var dataHref = tag.getAttribute("data-href");
/******/ 				if(dataHref === href || dataHref === fullhref) return tag;
/******/ 			}
/******/ 		};
/******/ 		var loadStylesheet = function(chunkId) {
/******/ 			return new Promise(function(resolve, reject) {
/******/ 				var href = __webpack_require__.miniCssF(chunkId);
/******/ 				var fullhref = __webpack_require__.p + href;
/******/ 				if(findStylesheet(href, fullhref)) return resolve();
/******/ 				createStylesheet(chunkId, fullhref, resolve, reject);
/******/ 			});
/******/ 		}
/******/ 		// no chunk loading
/******/ 		
/******/ 		var oldTags = [];
/******/ 		var newTags = [];
/******/ 		var applyHandler = function(options) {
/******/ 			return { dispose: function() {
/******/ 				for(var i = 0; i < oldTags.length; i++) {
/******/ 					var oldTag = oldTags[i];
/******/ 					if(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);
/******/ 				}
/******/ 				oldTags.length = 0;
/******/ 			}, apply: function() {
/******/ 				for(var i = 0; i < newTags.length; i++) newTags[i].rel = "stylesheet";
/******/ 				newTags.length = 0;
/******/ 			} };
/******/ 		}
/******/ 		__webpack_require__.hmrC.miniCss = function(chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			chunkIds.forEach(function(chunkId) {
/******/ 				var href = __webpack_require__.miniCssF(chunkId);
/******/ 				var fullhref = __webpack_require__.p + href;
/******/ 				var oldTag = findStylesheet(href, fullhref);
/******/ 				if(!oldTag) return;
/******/ 				promises.push(new Promise(function(resolve, reject) {
/******/ 					var tag = createStylesheet(chunkId, fullhref, function() {
/******/ 						tag.as = "style";
/******/ 						tag.rel = "preload";
/******/ 						resolve();
/******/ 					}, reject);
/******/ 					oldTags.push(oldTag);
/******/ 					newTags.push(tag);
/******/ 				}));
/******/ 			});
/******/ 		}
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = __webpack_require__.hmrS_importScripts = __webpack_require__.hmrS_importScripts || {
/******/ 			"_app-pages-browser_src_app_farming_farmingWorker_js-_62df2": 1
/******/ 		};
/******/ 		
/******/ 		// no chunk install function needed
/******/ 		// no chunk loading
/******/ 		
/******/ 		function loadUpdateChunk(chunkId, updatedModulesList) {
/******/ 			var success = false;
/******/ 			self["webpackHotUpdate_N_E"] = function(_, moreModules, runtime) {
/******/ 				for(var moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						currentUpdate[moduleId] = moreModules[moduleId];
/******/ 						if(updatedModulesList) updatedModulesList.push(moduleId);
/******/ 					}
/******/ 				}
/******/ 				if(runtime) currentUpdateRuntime.push(runtime);
/******/ 				success = true;
/******/ 			};
/******/ 			// start update chunk loading
/******/ 			importScripts(__webpack_require__.tu(__webpack_require__.p + __webpack_require__.hu(chunkId)));
/******/ 			if(!success) throw new Error("Loading update chunk failed for unknown reason");
/******/ 		}
/******/ 		
/******/ 		var currentUpdateChunks;
/******/ 		var currentUpdate;
/******/ 		var currentUpdateRemovedChunks;
/******/ 		var currentUpdateRuntime;
/******/ 		function applyHandler(options) {
/******/ 			if (__webpack_require__.f) delete __webpack_require__.f.importScripsHmr;
/******/ 			currentUpdateChunks = undefined;
/******/ 			function getAffectedModuleEffects(updateModuleId) {
/******/ 				var outdatedModules = [updateModuleId];
/******/ 				var outdatedDependencies = {};
/******/ 		
/******/ 				var queue = outdatedModules.map(function (id) {
/******/ 					return {
/******/ 						chain: [id],
/******/ 						id: id
/******/ 					};
/******/ 				});
/******/ 				while (queue.length > 0) {
/******/ 					var queueItem = queue.pop();
/******/ 					var moduleId = queueItem.id;
/******/ 					var chain = queueItem.chain;
/******/ 					var module = __webpack_require__.c[moduleId];
/******/ 					if (
/******/ 						!module ||
/******/ 						(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 					)
/******/ 						continue;
/******/ 					if (module.hot._selfDeclined) {
/******/ 						return {
/******/ 							type: "self-declined",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					if (module.hot._main) {
/******/ 						return {
/******/ 							type: "unaccepted",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					for (var i = 0; i < module.parents.length; i++) {
/******/ 						var parentId = module.parents[i];
/******/ 						var parent = __webpack_require__.c[parentId];
/******/ 						if (!parent) continue;
/******/ 						if (parent.hot._declinedDependencies[moduleId]) {
/******/ 							return {
/******/ 								type: "declined",
/******/ 								chain: chain.concat([parentId]),
/******/ 								moduleId: moduleId,
/******/ 								parentId: parentId
/******/ 							};
/******/ 						}
/******/ 						if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 						if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 							if (!outdatedDependencies[parentId])
/******/ 								outdatedDependencies[parentId] = [];
/******/ 							addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 							continue;
/******/ 						}
/******/ 						delete outdatedDependencies[parentId];
/******/ 						outdatedModules.push(parentId);
/******/ 						queue.push({
/******/ 							chain: chain.concat([parentId]),
/******/ 							id: parentId
/******/ 						});
/******/ 					}
/******/ 				}
/******/ 		
/******/ 				return {
/******/ 					type: "accepted",
/******/ 					moduleId: updateModuleId,
/******/ 					outdatedModules: outdatedModules,
/******/ 					outdatedDependencies: outdatedDependencies
/******/ 				};
/******/ 			}
/******/ 		
/******/ 			function addAllToSet(a, b) {
/******/ 				for (var i = 0; i < b.length; i++) {
/******/ 					var item = b[i];
/******/ 					if (a.indexOf(item) === -1) a.push(item);
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			// at begin all updates modules are outdated
/******/ 			// the "outdated" status can propagate to parents if they don't accept the children
/******/ 			var outdatedDependencies = {};
/******/ 			var outdatedModules = [];
/******/ 			var appliedUpdate = {};
/******/ 		
/******/ 			var warnUnexpectedRequire = function warnUnexpectedRequire(module) {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" + module.id + ") to disposed module"
/******/ 				);
/******/ 			};
/******/ 		
/******/ 			for (var moduleId in currentUpdate) {
/******/ 				if (__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 					var newModuleFactory = currentUpdate[moduleId];
/******/ 					/** @type {TODO} */
/******/ 					var result;
/******/ 					if (newModuleFactory) {
/******/ 						result = getAffectedModuleEffects(moduleId);
/******/ 					} else {
/******/ 						result = {
/******/ 							type: "disposed",
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					/** @type {Error|false} */
/******/ 					var abortError = false;
/******/ 					var doApply = false;
/******/ 					var doDispose = false;
/******/ 					var chainInfo = "";
/******/ 					if (result.chain) {
/******/ 						chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 					}
/******/ 					switch (result.type) {
/******/ 						case "self-declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of self decline: " +
/******/ 										result.moduleId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of declined dependency: " +
/******/ 										result.moduleId +
/******/ 										" in " +
/******/ 										result.parentId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "unaccepted":
/******/ 							if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 							if (!options.ignoreUnaccepted)
/******/ 								abortError = new Error(
/******/ 									"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "accepted":
/******/ 							if (options.onAccepted) options.onAccepted(result);
/******/ 							doApply = true;
/******/ 							break;
/******/ 						case "disposed":
/******/ 							if (options.onDisposed) options.onDisposed(result);
/******/ 							doDispose = true;
/******/ 							break;
/******/ 						default:
/******/ 							throw new Error("Unexception type " + result.type);
/******/ 					}
/******/ 					if (abortError) {
/******/ 						return {
/******/ 							error: abortError
/******/ 						};
/******/ 					}
/******/ 					if (doApply) {
/******/ 						appliedUpdate[moduleId] = newModuleFactory;
/******/ 						addAllToSet(outdatedModules, result.outdatedModules);
/******/ 						for (moduleId in result.outdatedDependencies) {
/******/ 							if (__webpack_require__.o(result.outdatedDependencies, moduleId)) {
/******/ 								if (!outdatedDependencies[moduleId])
/******/ 									outdatedDependencies[moduleId] = [];
/******/ 								addAllToSet(
/******/ 									outdatedDependencies[moduleId],
/******/ 									result.outdatedDependencies[moduleId]
/******/ 								);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 					if (doDispose) {
/******/ 						addAllToSet(outdatedModules, [result.moduleId]);
/******/ 						appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 			currentUpdate = undefined;
/******/ 		
/******/ 			// Store self accepted outdated modules to require them later by the module system
/******/ 			var outdatedSelfAcceptedModules = [];
/******/ 			for (var j = 0; j < outdatedModules.length; j++) {
/******/ 				var outdatedModuleId = outdatedModules[j];
/******/ 				var module = __webpack_require__.c[outdatedModuleId];
/******/ 				if (
/******/ 					module &&
/******/ 					(module.hot._selfAccepted || module.hot._main) &&
/******/ 					// removed self-accepted modules should not be required
/******/ 					appliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&
/******/ 					// when called invalidate self-accepting is not possible
/******/ 					!module.hot._selfInvalidated
/******/ 				) {
/******/ 					outdatedSelfAcceptedModules.push({
/******/ 						module: outdatedModuleId,
/******/ 						require: module.hot._requireSelf,
/******/ 						errorHandler: module.hot._selfAccepted
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			var moduleOutdatedDependencies;
/******/ 		
/******/ 			return {
/******/ 				dispose: function () {
/******/ 					currentUpdateRemovedChunks.forEach(function (chunkId) {
/******/ 						delete installedChunks[chunkId];
/******/ 					});
/******/ 					currentUpdateRemovedChunks = undefined;
/******/ 		
/******/ 					var idx;
/******/ 					var queue = outdatedModules.slice();
/******/ 					while (queue.length > 0) {
/******/ 						var moduleId = queue.pop();
/******/ 						var module = __webpack_require__.c[moduleId];
/******/ 						if (!module) continue;
/******/ 		
/******/ 						var data = {};
/******/ 		
/******/ 						// Call dispose handlers
/******/ 						var disposeHandlers = module.hot._disposeHandlers;
/******/ 						for (j = 0; j < disposeHandlers.length; j++) {
/******/ 							disposeHandlers[j].call(null, data);
/******/ 						}
/******/ 						__webpack_require__.hmrD[moduleId] = data;
/******/ 		
/******/ 						// disable module (this disables requires from this module)
/******/ 						module.hot.active = false;
/******/ 		
/******/ 						// remove module from cache
/******/ 						delete __webpack_require__.c[moduleId];
/******/ 		
/******/ 						// when disposing there is no need to call dispose handler
/******/ 						delete outdatedDependencies[moduleId];
/******/ 		
/******/ 						// remove "parents" references from all children
/******/ 						for (j = 0; j < module.children.length; j++) {
/******/ 							var child = __webpack_require__.c[module.children[j]];
/******/ 							if (!child) continue;
/******/ 							idx = child.parents.indexOf(moduleId);
/******/ 							if (idx >= 0) {
/******/ 								child.parents.splice(idx, 1);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// remove outdated dependency from module children
/******/ 					var dependency;
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									dependency = moduleOutdatedDependencies[j];
/******/ 									idx = module.children.indexOf(dependency);
/******/ 									if (idx >= 0) module.children.splice(idx, 1);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				},
/******/ 				apply: function (reportError) {
/******/ 					// insert new code
/******/ 					for (var updateModuleId in appliedUpdate) {
/******/ 						if (__webpack_require__.o(appliedUpdate, updateModuleId)) {
/******/ 							__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// run new runtime modules
/******/ 					for (var i = 0; i < currentUpdateRuntime.length; i++) {
/******/ 						currentUpdateRuntime[i](__webpack_require__);
/******/ 					}
/******/ 		
/******/ 					// call accept handlers
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							var module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								var callbacks = [];
/******/ 								var errorHandlers = [];
/******/ 								var dependenciesForCallbacks = [];
/******/ 								for (var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									var dependency = moduleOutdatedDependencies[j];
/******/ 									var acceptCallback =
/******/ 										module.hot._acceptedDependencies[dependency];
/******/ 									var errorHandler =
/******/ 										module.hot._acceptedErrorHandlers[dependency];
/******/ 									if (acceptCallback) {
/******/ 										if (callbacks.indexOf(acceptCallback) !== -1) continue;
/******/ 										callbacks.push(acceptCallback);
/******/ 										errorHandlers.push(errorHandler);
/******/ 										dependenciesForCallbacks.push(dependency);
/******/ 									}
/******/ 								}
/******/ 								for (var k = 0; k < callbacks.length; k++) {
/******/ 									try {
/******/ 										callbacks[k].call(null, moduleOutdatedDependencies);
/******/ 									} catch (err) {
/******/ 										if (typeof errorHandlers[k] === "function") {
/******/ 											try {
/******/ 												errorHandlers[k](err, {
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k]
/******/ 												});
/******/ 											} catch (err2) {
/******/ 												if (options.onErrored) {
/******/ 													options.onErrored({
/******/ 														type: "accept-error-handler-errored",
/******/ 														moduleId: outdatedModuleId,
/******/ 														dependencyId: dependenciesForCallbacks[k],
/******/ 														error: err2,
/******/ 														originalError: err
/******/ 													});
/******/ 												}
/******/ 												if (!options.ignoreErrored) {
/******/ 													reportError(err2);
/******/ 													reportError(err);
/******/ 												}
/******/ 											}
/******/ 										} else {
/******/ 											if (options.onErrored) {
/******/ 												options.onErrored({
/******/ 													type: "accept-errored",
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k],
/******/ 													error: err
/******/ 												});
/******/ 											}
/******/ 											if (!options.ignoreErrored) {
/******/ 												reportError(err);
/******/ 											}
/******/ 										}
/******/ 									}
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// Load self accepted modules
/******/ 					for (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {
/******/ 						var item = outdatedSelfAcceptedModules[o];
/******/ 						var moduleId = item.module;
/******/ 						try {
/******/ 							item.require(moduleId);
/******/ 						} catch (err) {
/******/ 							if (typeof item.errorHandler === "function") {
/******/ 								try {
/******/ 									item.errorHandler(err, {
/******/ 										moduleId: moduleId,
/******/ 										module: __webpack_require__.c[moduleId]
/******/ 									});
/******/ 								} catch (err2) {
/******/ 									if (options.onErrored) {
/******/ 										options.onErrored({
/******/ 											type: "self-accept-error-handler-errored",
/******/ 											moduleId: moduleId,
/******/ 											error: err2,
/******/ 											originalError: err
/******/ 										});
/******/ 									}
/******/ 									if (!options.ignoreErrored) {
/******/ 										reportError(err2);
/******/ 										reportError(err);
/******/ 									}
/******/ 								}
/******/ 							} else {
/******/ 								if (options.onErrored) {
/******/ 									options.onErrored({
/******/ 										type: "self-accept-errored",
/******/ 										moduleId: moduleId,
/******/ 										error: err
/******/ 									});
/******/ 								}
/******/ 								if (!options.ignoreErrored) {
/******/ 									reportError(err);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					return outdatedModules;
/******/ 				}
/******/ 			};
/******/ 		}
/******/ 		__webpack_require__.hmrI.importScrips = function (moduleId, applyHandlers) {
/******/ 			if (!currentUpdate) {
/******/ 				currentUpdate = {};
/******/ 				currentUpdateRuntime = [];
/******/ 				currentUpdateRemovedChunks = [];
/******/ 				applyHandlers.push(applyHandler);
/******/ 			}
/******/ 			if (!__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 				currentUpdate[moduleId] = __webpack_require__.m[moduleId];
/******/ 			}
/******/ 		};
/******/ 		__webpack_require__.hmrC.importScrips = function (
/******/ 			chunkIds,
/******/ 			removedChunks,
/******/ 			removedModules,
/******/ 			promises,
/******/ 			applyHandlers,
/******/ 			updatedModulesList
/******/ 		) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			currentUpdateChunks = {};
/******/ 			currentUpdateRemovedChunks = removedChunks;
/******/ 			currentUpdate = removedModules.reduce(function (obj, key) {
/******/ 				obj[key] = false;
/******/ 				return obj;
/******/ 			}, {});
/******/ 			currentUpdateRuntime = [];
/******/ 			chunkIds.forEach(function (chunkId) {
/******/ 				if (
/******/ 					__webpack_require__.o(installedChunks, chunkId) &&
/******/ 					installedChunks[chunkId] !== undefined
/******/ 				) {
/******/ 					promises.push(loadUpdateChunk(chunkId, updatedModulesList));
/******/ 					currentUpdateChunks[chunkId] = true;
/******/ 				} else {
/******/ 					currentUpdateChunks[chunkId] = false;
/******/ 				}
/******/ 			});
/******/ 			if (__webpack_require__.f) {
/******/ 				__webpack_require__.f.importScripsHmr = function (chunkId, promises) {
/******/ 					if (
/******/ 						currentUpdateChunks &&
/******/ 						__webpack_require__.o(currentUpdateChunks, chunkId) &&
/******/ 						!currentUpdateChunks[chunkId]
/******/ 					) {
/******/ 						promises.push(loadUpdateChunk(chunkId));
/******/ 						currentUpdateChunks[chunkId] = true;
/******/ 					}
/******/ 				};
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.hmrM = function() {
/******/ 			if (typeof fetch === "undefined") throw new Error("No browser support: need fetch API");
/******/ 			return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then(function(response) {
/******/ 				if(response.status === 404) return; // no update available
/******/ 				if(!response.ok) throw new Error("Failed to fetch update manifest " + response.statusText);
/******/ 				return response.json();
/******/ 			});
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	var __webpack_exports__ = __webpack_require__("(app-pages-browser)/./src/app/farming/farmingWorker.js");
/******/ 	_N_E = __webpack_exports__;
/******/ 	
/******/ })()
;